######
DEPLOYMENT - SERVER
#####
ssh ubuntu@172.81.178.30
password: mEMAnkZ9sy9PlJLh

screen -S backtest -> new screen
screen -ls  ---> list running screens
screen -r 1798.pts-0.bethabit ---> connect (attach) to screen
screen -r 787.backtest
screen -XS 787.backtest quit
ctrl + a + d  ---> disconnect (detach) from screen

disk usage size of directory ----> du -hs /home/ubuntu/datacollect
disk space in human readable------> df -h
disk usage -------------> du -chd 1 | sort -h
delete files ---> find . -type f -iname \*.jpg -delete


copy folder from remote---->  scp -r ubuntu@172.81.178.30:/home/ubuntu/datacollect /Users/apple/Desktop/dev/projectlife/data/newticker
                              scp -r ubuntu@172.81.178.30:/home/ubuntu/projectlife/hf /Users/apple/Desktop/dev/projectlife/hf/copy



#####################################################
#  NOTES         ####################################
#####################################################
Mean Reversion-Trend Following
==================
1. Hergün başka bir tane coin kalkıyor. Hergün yerni en az 10 coin zuplıyor.
Strateji bu kalkışta olanlara yönelimk olmalı. Yoksa sen herhangi bir coini koyupta onu talip ederek çok zorlancaksın.


Reinforcement Learning
----------------------
- We propose a novel algorithmic trading strategy that presents the current market circumstance to an agent, allows it to analyse this situation using its experience and then make
a decision as to what the best investment action should be. For example, if the current
conditions indicated a bull market 1
then the agent might choose to invest in a long position
with the expectation that the rising prices will lead to a profit. If at a later time, the market
suggested that this upwards trend was coming to an end, the agent may choose to close
its long position and realise the profits that it potentially made

Algoritmalar
=========================
RAINBOW: En saglıklısı gozukuyor ama buda XMRda, XRP'de, MTH'de cakıyo. Ayrıca 15dkda cakıyor. 1000 stepden sonra cakıyor. 500K'da sonuc veriyor.
RAY: PPO 159-170 YAPIYOR LTC ama her zaman rainbowdan dusuk. Hızlı.
IMPALA: XMR'DA çakıyor. Bundan once baska coinlede cakmıştı.
A2C: ray'de xmrda çakıyor. Sb'de çakıyor.
BC: işlemiyor
GAIl: işlemiyor. 3 ayrı yerde denedim
RND: uygulaması yok. İşleyecek gibi değil. ZAten diğerlerinden fazla farkı yok.
GOExplore: tam anlamıyla hardcoded olarak atari için yapılmış. İğrenç kodu var.. Uygulancak giib değil.
PG: ?
Supervised LSTM: ?
Supervised LSTM + RL: ?

Features
=========================
- "close","sma15","sma50" -> digerine gore fark yaratmıyor.
- "close","sma20" -> digerine gore fark yaratmıyor.
- We extract 16 features from OHLCV data containing 8 most recent log returns on
both closing price and tick volume. A running Z-score normalization of period 96
is then applied to each dimension of the 16 input features
- Position feature. The agent’s current position is encoded via a 3-dimensional one-hot vector.

Window Size
=========================
- window size 50 Number of the columns (number of the trading periods) in each input price matrix. (Section 3.2)

Action Space
=========================
- We adopt a simple action set of three values {-1, 0, 1}

Observation Space
=========================
- We sample a longer sequence from the replay memory than the number of steps used
in the DRQN paper. The reason behind this modification is that, a successful trading
strategy involves opening a position at the right time and holding the position for a
sufficiently long period of time then exiting the position. Sampling a short sequence
can’t effectively train the network to learn the desired long-term dependency.

Reward Function
=========================
- We define the reward function as portfolio log returns at each time step
- Random exploration is unsatisfying in the financial trading setting since transaction costs
occur with a change of position. We propose a simple technique to mitigate the need for
exploration by providing the agent with reward signal for every action.
- There are infinitely many ways to formulate reward, and designing a good set of rewards would enable faster convergence. Which of the following three ways is better?
    +1 if the current value of the portfolio is great than the initial investment, and -1 otherwise
    +1 if the current value of the portfolio is great than the initial investment, and -1000 otherwise
    +/- $ amount of current value compared with previous step
    There is no right or wrong but the first two won’t help the agent learn from the delta value between each (t, t+1) step,
    as illustrated by the graph below. https://shuaiw.github.io/assets/teach-machine-to-trade/reward.png
- So we are going with the third reward setup. Again, crafting a good set of reward is an art
- Our algorithm will be interested in pure profitability over a given set of data.
    We therefore define the objective function of the agent to be to maximise the cumulative profit
    and loss (PnL) of all its positions across the data set; see section 2.1.3 for details of a
    position’s PnL. We therefore define a reward as follows; if the agent opens a new position or continues
    to stay in its current position or idle, we generate a reward signal of 0 for it. Upon closing
    a position we generate a reward signal equal to the realised PnL

Memory
=========================
- We discover that using a relatively small replay memory is more effective. It is different
from the ”common knowledge” in value-based deep reinforcement learning where large
replay memories (often millions in size) are used. This makes intuitive sense since in
financial trading recent data points are more important than those from the far past.
The performance decreases if we enlarge the replay memory.

Hyperparameters
=========================
- We also discover workable hyperparameters for the DRQN algorithm able to
solve the financial trading MDP through random search.
- Hyperparameters Value
    Learning timestep T 96
    Replay memory size N 480
    Learning rate 0.00025
    Optimizer Adam 1
    Discount factor 0.99
    Target network τ 0.001

Data Interval
=========================
- We download tick-by-tick forex data. We then resample the data into 15-minute
intervals with open, high, low, close prices and tick volume.

Model Architecture
=========================
- We use a four-layered neural network as function approximator to represent the optimal
action-value function q∗. The first two are linear layers with 256 hidden units and ELU
Clevert et al. (2015) activation. The third layer is an LSTM layer with the same size. The
fourth layer is another linear layer with 3 output units. The network is relatively small with
approximately 65,000 parameters.

Weight Initialization
=========================
- We set all biases in the network to be zero except
for the forget gate in the LSTM which are set to be 1. We sparsely initialize the output
layer weight matrix with Gaussian distribution N (0, 0.001).

Training
=========================
- We find that it is unnecessary to train the network for each step since we are sampling
a longer sequence. Hence we only train the network for every T time steps. This
significantly reduces computation since the number of backward passes are reduced
by a factor of T.
- We adopt the above updating scheme to the original DRQN algorithm and propose a complete online learning algorithm that we will evaluate in the next section. We discard the
common forwalk-walk optimization process that involves slicing the dataset into consecutive training and testing sets. Since each training set constructed this way are largely
overlapped, strong overfitting is observed in our early stage experiments.

#####################################################
#  UTILS         ####################################
#####################################################

Tensorboard
=========================
python3 train.py
tensorboard --logdir=~/ray_results/projectlife-RAINBOW/DQN_Projectlife-RAINBOW-XMRBTC_0_2019-04-30_11-53-19cinotzz2
tensorboard --logdir=tensorboard
tensorboard --logdir=~/ray_results/Projectlife-v1-XMRBTC-1h-RAINBOW-close-sma15-sma50
tensorboard --logdir=~/ray_results/Projectlife-v1-XMRBTC-1h-PPO-sma15-sma50
tensorboard --logdir=/Users/apple/Desktop/dev/projectlife/algorithms/AIRL/imitation/scripts/output/CartPole-v1

Ray
=========================
python3 validate.py ~/ray_results/Projectlife-v1-LTCBTC-1h-RAINBOW-close-sma20/DQN_Projectlife-v1_0_2019-05-06_10-03-09_n3ys4_r/checkpoint_1000/checkpoint-1000
python3 validate.py ~/ray_results/Projectlife-v1-XMRBTC-1h-RAINBOW-close-sma15-sma50/DQN_Projectlife-v1_0_2019-05-06_13-59-41nll9lis4/checkpoint_500/checkpoint-500
python3 validate.py ~/ray_results/Projectlife-v1-XMRBTC-1h-PPO-sma15-sma50/PPO_Projectlife-v1_0_2019-05-06_15-58-46_t0w503v/checkpoint_98/checkpoint-98
python3 tv_ray.py ~/ray_results/Projectlife-v1-XRPBTC-1h-ARS-close-sma15-sma50/ARS_Projectlife-v1_0_2019-05-11_23-09-20phsmf485/checkpoint_54/checkpoint-54

Gym
=========================
import sys
sys.path.append('/Users/apple/Desktop/dev/projectlife')
from environment import Environment
Environment(mode="train", pair="XRPBTC", interval="1h",  algo="RAINBOW", data_features=["close","sma20"])

Freqtrade
=========================
config.json güncelle
sudo pip3 install -r requirements.txt
sudo pip3 install -e .
 freqtrade download-data --days 300 --timeframes 1h

Gekko
=====
npm config set python python2.7
sudo npm install tulind --no-save --unsafe-perm
sudo npm install talib --no-save --unsafe-perm

Neferititi
=========
1. Başlarken
 ./cryptotrader sell --exchange=Binance
2.sonra
 ./cryptotrader buy  --exchange=Binance  --price=0.001 --market=POEBTC   --api-key=H9XUAlGqmqy9JSoHgp3BmBlv02Z1zYxeMA4aU6l66wtGBVs8Ki6789sRgErpf1wC --api-secret=e9ueiRyLpDV96l3RMaircqvVvMOT0ygGyZmqEUnyf3IXjBulAp24MMQviygoagiZ  --pushover-app-key= --pushover-user-key=X
3.mining hamster
./cryptotrader sell --exchange=Binance --strategy=0
./cryptotrader buy --exchange=Binance --signals=MiningHamster --price=0.001 --quote=BTC --repeat=0.0084

ssh root@134.209.230.126
screen -S buy
screen -S sell
screen -ls

screen -r -d 25515.ONTBTCticker
screen -r -d 18297.sell
screen -r -d 18277.buy
screen -r -d hamster

screen -Xs 6201.hamster quit

python3 pl_tickercollector.py --symbol ONTBTC
python3 pl_manualbot.py --mode hamster


Mongo Shell
=======
mongo
use projectlife
db.ONTBTC.remove({})
db.user.remove({})
db.copyDatabase( 'heroku_app20881436', 'hizmetkutusu_backup', 'ds033069.mongolab.com:33069/heroku_app20881436', 'canercak' , 'canersbu90')
db.providers.update( {officialname: "çeşme" }, {$set: { servicescore: "10" }} )
db.users.update( { uid: "100006411879480" }, {$set: { admin: "true" }} )
db.getCollectionNames()
db.categories.insert({title: "Alt-Yapı İnşaatı: Atık Su", parent: "İnşaat"})

db.candlestick26122018_WAVESBTC.createIndex( { "k.h": 1 } )

use projectlife
db.candlestick_BNBBTC.createIndex( { E: 1 } )
db.candlestick_BNBBTC.createIndex( { k: 1 } )
db.candlestick_BNBBTC.reIndex()

db.getCollectionNames().forEach( function(collection){ db[collection].reIndex() } )

> db.candlestick26122018_WAVESBTC.dropIndex("E_1");
{ "nIndexesWas" : 2, "ok" : 1 }
> db.candlestick26122018_WAVESBTC.getIndexes()


db.adminCommand({setParameter: 1, internalQueryExecMaxBlockingSortBytes:1128151432})

 cd /data/db
 rm mongod.lock
 sudo mongod --repair

db.getCollection('xxx_WAVESBTC').remove({E:{$lt:1545685200020}})
db.getCollection('xxxx_WAVESBTC').remove({E:{$gt:1545685200020}})

rm -r dump

mongodump  --db projectlife --collection candlestick_BNBBTC

scp root@142.93.169.104:/dump /Users/apple/Desktop/dev

mongorestore --port 27017 --db projectlife --collection candlestick_BNBBTC dump/candlestick_BNBBTC.bson --drop

db.getCollectionNames().forEach( function(collection_name) {
  if (collection_name.indexOf("system.") == -1)
       db[collection_name].drop();
  else
       db.collection_name.remove({});
});

https://tecadmin.net/enable-swap-on-ubuntu/

+ " --- in %s seconds ---" % (time.time() - start_time))


mac
========
find . -name ".DS_Store" -delete

site engel
sudo nano /etc/hosts
0.0.0.0 youtube.com
sudo dscacheutil -flushcache

Python
========================
https://www.digitalocean.com/community/tutorials/understanding-class-and-instance-variables-in-python-3


Jupyter
=======
ipynb
jupyter nbconvert --to script 'x.ipnyb'

Digitalocean
============
ssh root@134.209.230.126



Pip
=========================
sudo python3 setup.py build
sudo python3 setup.py install
sudo pip3 install -e git+git://github.com/canercak/pureples.git#egg=pureples1

############################################################################################################################
#    GOOGLE REMOTE COMPUTE VE DIGITAL OCEAN           ##############################################################################################
############################################################################################################################

Instance yaratırken
===================
Marketarket place - deep learning vm - k80 1 cpu
Bağlanırken
===========
gcloud compute --project "projectlife" ssh --zone "us-west1-b" "tensorflow-3-vm"
gcloud compute --project "projectlife" ssh --zone "us-east1-c" "generalpurpose"


Yuklenecekler 1
=============
sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.7
sudo apt-get install python-pip
sudo apt-get -y install python3-pip
sudo apt-get install unzip
sudo pip install --upgrade pip
sudo pip3 install pandas
sudo pip3 install tensorflow
sudo pip3 install numpy
sudo pip3 install keras
sudo pip3 install matplotlib
sudo pip3 install sklearn
sudo pip3 install sklearn
sudo pip3 install natsort
sudo pip3 install json
sudo pip3 install multiprocessing
sudo pip3 install mpl_finance
sudo pip3 install plotly


Yuklenecekler 2
=============
sudo apt-get install zip
sudo pip3 install gym
sudo pip3 install sklearn
sudo pip install ccxt
sudo pip3 install ccxt
sudo pip3 install binance-python
sudo pip3 install reactor
sudo pip install ray
sudo pip3 install ray
sudo pip3 install hyperopt
sudo pip3 install binance-python
wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
tar -xvzf ta-lib-0.4.0-src.tar.gz
cd ta-lib
./configure --prefix=/usr
make
sudo make install
sudo pip3 install TA-Lib
sudo pip3 install lz4

Lokalden remote kopya
======================
gcloud compute copy-files /Users/apple/Desktop/dev/projectlife.zip tensorflow-3-vm:/home/canercak_gmail_com --zone us-west1-b
gcloud compute copy-files /Users/apple/Desktop/dev/train.py tensorflow-3-vm:/home/canercak_gmail_com/projectlife --zone us-west1-b
gcloud compute copy-files /Users/apple/Desktop/dev/environment.py tensorflow-3-vm:/home/canercak_gmail_com/projectlife --zone us-west1-b
gcloud compute copy-files /Users/apple/Desktop/dev/projectlife/data/binance.zip generalpurpose:/home/canercak_gmail_com/projectlife/data/binance --zone us-east1-c
gcloud compute copy-files /Users/apple/Desktop/Archive.zip generalpurpose:/home/canercak_gmail_com/projectlife/data/binance/binance --zone us-east1-c
unzip projectlife.zip
unzip Archive.zip

Remotedan lokale kopya
======================
zip -r ltcrainbow.zip Projectlife-v1-LTCBTC-1h-RAINBOWCUSTOM-close-sma20
gcloud compute copy-files tensorflow-3-vm:/home/canercak_gmail_com/ray_results/ltcrainbow.zip --zone us-west1-b /Users/apple/Desktop/dev

Screen kullanımı
================
df -h
YENİ SCRENN AÇ: screen -S projectlife
SCREENLERI LİSTELE: screen -ls
AÇIK SCREENDEN ÇIK: Ctrl A + D  seni detach eder
SCREENE BAGLAN: screen -r -d projectlife
?????attach olanıdetachetmi: screen -R projectlife

Hazır VM olmazsa yuklenecekler
==============================
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt-get update
sudo apt-get install python3.6
sudo apt install python3-pip
https://medium.com/@taylordenouden/installing-tensorflow-gpu-on-ubuntu-18-04-89a142325138
https://www.linkresearchtools.com/thanks/link-redirect-trace-extension/?utm_campaign=LRT-Link-Redirect-Trace&utm_medium=install-success&utm_content=lrtrt-chrome-extension&utm_source=chrome-store-install
https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.5.0.56/prod/10.1_20190225/Ubuntu18_04-x64/libcudnn7_7.5.0.56-1%2Bcuda10.1_amd64.deb
wget -c https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh
bash Anaconda3-5.0.1-Linux-x86_64.sh
wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
tar -xvzf ta-lib-0.4.0-src.tar.gz
cd ta-lib
./configure --prefix=/usr
make
sudo make install
sudo pip3 install TA-Lib
conda install tensorflow
conda install keras
sudo pip3 install keras
sudo pip3 install numpy
sudo pip3 install pandas
sudo pip3 install gym
sudo pip3 install sklearn
sudo pip3 install ccxt
sudo apt-get install zip
unzip projectlife.zip

############################################################################################################################
#    GOOGLE COLAB             ##############################################################################################
############################################################################################################################

First Install
-------------
!sudo pip install gym
!sudo pip install sklearn
!sudo pip install ccxt
!sudo pip install ray
!sudo pip install matplotlib
!sudo pip install lz4
!pip install setproctitle
!wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
!tar -xzvf ta-lib-0.4.0-src.tar.gz
%cd ta-lib
!./configure --prefix=/usr
!make
!make install
!pip install Ta-Lib

############################################################################################################################
#    CODE               ##############################################################################################
############################################################################################################################
Gridsearch
==========
# grid_param = {
#     'atr_coeff': [0.5, 0.7, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 4, 5]
# }
# gd_sr = GridSearchCV(estimator=classifier,
#                      param_grid=grid_param,
#                      scoring='accuracy',
#                      cv=5,
#                      n_jobs=-1)
#gd_sr.fit(X_train, y_train)
#best_parameters = gd_sr.best_params_
#print(best_parameters)
#https://chrisalbon.com/machine_learning/model_selection/hyperparameter_tuning_using_grid_search/

Proiftable strategy
==================
from math import sqrt
from dateutil import parser
from configparser import ConfigParser
from pandas import Series
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error
from statsmodels.tsa.arima_model import ARIMA
import pandas as pd
from pandas import DataFrame
from pandas import concat
from pandas import read_csv
from pandas import datetime
import pdb
import matplotlib.pyplot as plt
import numpy as np
import ccxt
from pyod.models.knn import KNN
pd.set_option("display.precision", 8)
pd.set_option('display.max_rows', 1500)

SYMBOLS = [ "NPXSBTC","HOTBTC","DLTBTC","DENTBTC","ENJBTC","ETHBTC","GOBTC","HOTBTC","LINKBTC","ETHBTC","LTCBTC","NEOBTC","ONTBTC","ELFBTC","EDOBTC","GRSBTC","APPCBTC","ATOMBTC","ARKBTC","NULSBTC","SNGLSBTC","TNTBTC","WAVESBTC"]
datatype ="remote"
transaction_fee = 0.00125
initial_balance = 100
BUY, SELL, HOLD = 0, 1, 2
results = {}
interval = "15m"
config = ConfigParser()
config.read("config.ini")
exchange = ccxt.binance({'apiKey': config['BINANCE']['KEY'], 'secret': config['BINANCE']['SECRET']})
window_size = 48
profit_perc = 1.11
stoploss_perc = 0.98

def backtest():
    for symbol in SYMBOLS:
        if datatype != "local":
            data_base = exchange.fetch_ohlcv(symbol.split("BTC")[0] + "/BTC", interval,limit=1000)
            df = DataFrame(data_base, columns=['date', 'open', 'high', 'low', 'close', 'volume'])
            df["date"] = pd.to_datetime(df["date"], unit = 'ms').dt.strftime('%Y-%m-%d %H:%M')
        else:
            data_base = read_csv("/Users/apple/Desktop/dev/projectlife/data/full/Binance_"+symbol+"-"+interval+".csv")
            df = DataFrame(data_base, columns=['date', 'open', 'high', 'low', 'close', 'volume'])

        df = df.drop(['open'], axis=1)
        df.set_index('date')
        df['change'] = df.close.pct_change(periods=1)*100
        #df['low_change'] = df.low.pct_change(periods=1)*100
        #df['high_change'] = df.high.pct_change(periods=1)*100
        #df["roll_mean"] = df.change.rolling(10).mean()
        df = df.fillna(0)
        #plot_fragment(df,symbol)
        evaluate_trades(df,symbol)
        #df = detect_anomaly(df)
        #fragment = df.iloc[i-window_size:i+8,:]


def evaluate_trades(df,symbol):
    balance = initial_balance
    trade_count = 0
    profit = 0
    action = HOLD
    trade_history = []
    current_tick = 0
    entry_tick = 0
    buy_mode = True
    entry_price = 0
    for i, last_row in df.iterrows():
        current_price = last_row['close']
        high_price = last_row['high']
        current_tick += 1
        fragment = df.iloc[i-window_size:i+8,:]
        if i > 20:
            prev3 =  df.loc[i-3]
            prev2 =  df.loc[i-2]
            prev1 =  df.loc[i-1]
            last20 = df.iloc[i-20:i,:]
            min = last20.change.min()
            max = last20.change.max()
            mean = last20.change.mean()
            max_down_mean = abs(max - min)
            low_mean =  (min - mean) *1.5
            potential_spike_down = last_row.change - prev1.change
            #if i == 963:
            #pdb.set_trace()
            spike_down = potential_spike_down < low_mean
            buy_cond = (buy_mode == True and spike_down)
            sell_cond = (buy_mode == False)# and (df.iloc[entry_tick].high > (entry_price * profit_perc)))
            stopl_cond = False#(sell_cond == False and buy_mode == False)
            if buy_cond:
                #pdb.set_trace()
                action = BUY
                entry_price =  current_price
                entry_tick = current_tick
                quantity = balance / entry_price
                buy_mode = False
                print("##### TRADE " +  str(trade_count) + " #####")
                print("BUY: " + str(quantity) + " " +symbol+" for "+ str(entry_price) + " at " +  str(last_row.date))
            elif sell_cond or stopl_cond:
                action = SELL
                if stopl_cond:
                    sell_type = "stoploss"
                    exit_price =  current_price
                else:
                    sell_type = "profit"
                    exit_price = current_price# (entry_price * profit_perc) #last_row['high']
                profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
                balance = balance * (1.0 + profit)
                entry_price = 0
                trade_count += 1
                buy_mode = True
                print(fragment)
                print(sell_type)
                #offline.plot({'data': data,"layout":layout}, auto_open=False, image='jpeg',image_width="1000", image_height="100", image_filename=row.symbol+str(i),   output_type='file',  validate=True)

                print(i)
                #pdb.set_trace()
                print("SELL FOR " + sell_type.upper() +" : " + str(quantity) + " " +symbol+" for "+ str(exit_price)  + " at " +  str(last_row.date) )
                print("PROFIT: " + str(profit))
                print("BALANCE: " + str(balance))
                print("==================================")
            else:
                action = HOLD

        trade_history.append((action, current_tick, current_price, balance, profit))

        if (current_tick > len(df)-1):
            results[symbol] = {'balance':np.array([balance]), "trade_history":trade_history, "trade_count":trade_count }
            print("**********************************")
            print("TOTAL BALANCE FOR "+symbol +": "+ str(balance))
            print("**********************************")
            #plot_buy_sell(trade_history)

    if (symbol == SYMBOLS[-1]):
        print("#########FINAL BALANCES#####################")
        final_balance = 0
        for symbol in SYMBOLS:
            balance = results[symbol]['balance'][0]
            print(symbol + ": "+str(balance))
            final_balance +=balance
        print("============================================")
        print("Trade count: " + str(trade_count))
        print("FINAL BALANCE: " + str(final_balance))

def plot_fragment(df,symbol):
    fragment = df.tail(64)
    plt.clf()
    plt.title(symbol + " " +  str(fragment.iloc[-1].date))
    plt.plot(fragment.change, marker="o", label="change")
    #plt.plot(fragment.high_change, marker="o", label="high change")
    #plt.plot(fragment.low_change, marker="o", label="low change")
    plt.legend()
    print(fragment)
    #pdb.set_trace()
    #plt.savefig("./results/plots/"+symbol+"-"+interval+".png")
    plt.show()

def plot_buy_sell(trade_history):
    closes = [data[2] for data in trade_history]
    closes_index = [data[1] for data in trade_history]
    buy_tick = np.array([data[1] for data in trade_history if data[0] == 0])
    buy_price = np.array([data[2] for data in trade_history if data[0] == 0])
    sell_tick = np.array([data[1] for data in trade_history if data[0] == 1])
    sell_price = np.array([data[2] for data in trade_history if data[0] == 1])
    plt.plot(closes_index, closes)
    plt.scatter(buy_tick, buy_price, c='g', marker="^", s=20)
    plt.scatter(sell_tick, sell_price , c='r', marker="v", s=20)
    #plt.savefig(base_path+"/results/plots/"+algo +"-"+pair+"-"+interval+"-"+str(balance)+".png" )
    plt.show(block=True)


def detect_anomaly(df):
    clf = KNN()
    x_values = df.change.values.reshape(df.index.values.shape[0],1)
    y_values = df.change.values.reshape(df.change.values.shape[0],1)
    clf.fit(y_values)
    clf.predict(y_values)
    df["out_label"] = clf.predict(y_values)  #fit_predict_score
    df["out_score"] = clf.decision_function(y_values)
    return df


def p_change(first, second):
    diff = second - first
    change = 0
    try:
        if diff > 0:
            change = (diff / first) * 100
        elif diff < 0:
            diff = first - second
            change = -((diff / first) * 100)
    except ZeroDivisionError:
        return float('inf')
    return change



if __name__ == '__main__':
    backtest()
**********************************
TOTAL BALANCE FOR WAVESBTC: 99.24870211060514
**********************************
#########FINAL BALANCES#####################
NPXSBTC: 7431.425700746903
HOTBTC: 608.9671502143559
DLTBTC: 73.04034228009965
DENTBTC: 1425.051711662998
ENJBTC: 98.62654578469937
ETHBTC: 84.96962049779171
GOBTC: 116.59959060082474
HOTBTC: 608.9671502143559
LINKBTC: 75.22413596742678
ETHBTC: 84.96962049779171
LTCBTC: 92.46587621023045
NEOBTC: 96.87609002186882
ONTBTC: 86.13500175379781
ELFBTC: 88.20065189838695
EDOBTC: 86.65002564039462
GRSBTC: 85.09670748022455
APPCBTC: 86.02656511181948
ATOMBTC: 89.30991849892125
ARKBTC: 82.34141697275473
NULSBTC: 96.52269729779063
SNGLSBTC: 78.42068161071488
TNTBTC: 102.86388027461905
WAVESBTC: 99.24870211060514
============================================
Trade count: 36
FINAL BALANCE: 11777.99978334937



tv_hunter
-------
    for i, last_row in df.iterrows():
        current_price = last_row['close']
        current_tick += 1
        fragment = df.iloc[i-window_size:i+8,:]
        if i > 2:
            prev3 =  df.loc[i-3]
            prev2 =  df.loc[i-2]
            prev1 =  df.loc[i-1]
            change_up = prev1.change > 5
            change_down = last_row.change < 0
            change_enough = (last_row.change + prev1.change) > 4
            buy_cond = (buy_mode == True and (change_up and change_down and change_enough))
            sell_cond = (buy_mode == False and (df.iloc[entry_tick].high > (entry_price * profit_perc)))
            stopl_cond = (sell_cond == False and buy_mode == False and (df.iloc[entry_tick].close < (entry_price * stoploss_perc)))
            if buy_cond:
                action = BUY
                entry_price =  current_price
                entry_tick = current_tick
                quantity = balance / entry_price
                buy_mode = False
                print("##### TRADE " +  str(trade_count) + " #####")
                print("BUY: " + str(quantity) + " " +symbol+" for "+ str(entry_price) + " at " +  str(last_row.date))
            elif sell_cond or stopl_cond:
                action = SELL
                if stopl_cond:
                    sell_type = "stoploss"
                    exit_price =  current_price
                else:
                    sell_type = "profit"
                    exit_price =  (entry_price * profit_perc) #last_row['high']
                profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
                balance = balance * (1.0 + profit)
                entry_price = 0
                trade_count += 1
                buy_mode = True
                print(fragment)
                print(sell_type)
                #pdb.set_trace()
                print("SELL FOR " + sell_type.upper() +" : " + str(quantity) + " " +symbol+" for "+ str(exit_price)  + " at " +  str(last_row.date) )
                print("PROFIT: " + str(profit))
                print("BALANCE: " + str(balance))
                print("==================================")
            else:
                action = HOLD

ep_ltc_neg_5.npz
-------------------
remove_unwanted = False
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = 0#(current_price * 0.1 /100)
    percent_change = 1000

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 3
    elif percent_change < 5 and percent_change > 0 :
        if remove_unwanted == False:
            reward = reward / 10
        else:
            reward = 0
            remove_unwanted(ep_idx)
    else:
        if remove_unwanted != False:
            remove_unwanted(ep_idx)

else:
    action = 2
    percent_change = 0
    if remove_unwanted == False:
        reward = 0#-(current_price * 0.01 /100)
    else:
        reward = 0

retraining done.
TICK: 18 / TRADE: 0
--------------------------------
BUY: 12132.977432661975 LTCBTC for 0.008242 each.
SELL: 12132.977432661975 LTCBTC for 0.009469 each.
REWARD: 0.14600124912794232
BALANCE: 114.60012491279423
==================================
TICK: 144 / TRADE: 1
--------------------------------
BUY: 11633.34939729918 LTCBTC for 0.009851 each.
SELL: 11633.34939729918 LTCBTC for 0.009636 each.
REWARD: -0.024269104024971955
BALANCE: 111.81888256001085
==================================
TICK: 486 / TRADE: 2
--------------------------------
BUY: 12666.38905301437 LTCBTC for 0.008827999999999999 each.
SELL: 12666.38905301437 LTCBTC for 0.008945 each.
REWARD: 0.010721734998017762
BALANCE: 113.01777498659375
==================================
TICK: 585 / TRADE: 3
--------------------------------
BUY: 12347.620997115017 LTCBTC for 0.009153 each.
SELL: 12347.620997115017 LTCBTC for 0.009019 each.
REWARD: -0.01710186909346656
BALANCE: 111.08495979353816
==================================
TICK: 891 / TRADE: 4
--------------------------------
BUY: 9310.616024938241 LTCBTC for 0.011931 each.
SELL: 9310.616024938241 LTCBTC for 0.012227 each.
REWARD: 0.022248898222068547
BALANCE: 113.55647775798717
==================================
TICK: 1159 / TRADE: 5
--------------------------------
BUY: 9301.046585141057 LTCBTC for 0.012209000000000001 each.
SELL: 9301.046585141057 LTCBTC for 0.012329999999999999 each.
REWARD: 0.00738752278032595
BALANCE: 114.39537882427787
==================================
TICK: 1294 / TRADE: 6
--------------------------------
BUY: 9600.149280318721 LTCBTC for 0.011916 each.
SELL: 9600.149280318721 LTCBTC for 0.01181 each.
REWARD: -0.011371814944192593
BALANCE: 113.09449574581737
==================================
TICK: 1436 / TRADE: 7
--------------------------------
BUY: 9012.231711356872 LTCBTC for 0.012549 each.
SELL: 9012.231711356872 LTCBTC for 0.013996000000000001 each.
REWARD: 0.11252146535580554
BALANCE: 125.82005413081265
==================================
TICK: 1613 / TRADE: 8
--------------------------------
BUY: 8911.39982511599 LTCBTC for 0.014119 each.
SELL: 8911.39982511599 LTCBTC for 0.014728 each.
REWARD: 0.040527162865642286
BALANCE: 130.919183956336
==================================
TICK: 1752 / TRADE: 9
--------------------------------
BUY: 8606.309752585854 LTCBTC for 0.015212 each.
SELL: 8606.309752585854 LTCBTC for 0.014706 each.
REWARD: -0.03567854469333409
BALANCE: 126.24817800033505
==================================
TICK: 1873 / TRADE: 10
--------------------------------
BUY: 8635.896983400715 LTCBTC for 0.014619 each.
SELL: 8635.896983400715 LTCBTC for 0.014904 each.
REWARD: 0.016948032526164614
BALANCE: 128.38783622745373
==================================
TICK: 2038 / TRADE: 11
--------------------------------
BUY: 8549.499648894835 LTCBTC for 0.015017 each.
SELL: 8549.499648894835 LTCBTC for 0.014719999999999999 each.
REWARD: -0.022226609842178946
BALANCE: 125.53420988314456
==================================
TICK: 2368 / TRADE: 12
--------------------------------
BUY: 8081.2546596591055 LTCBTC for 0.015534000000000001 each.
SELL: 8081.2546596591055 LTCBTC for 0.015579 each.
REWARD: 0.00039119622682526334
BALANCE: 125.58331839238834
==================================
TICK: 2568 / TRADE: 13
--------------------------------
BUY: 8084.416015989978 LTCBTC for 0.015534000000000001 each.
SELL: 8084.416015989978 LTCBTC for 0.014266 each.
REWARD: -0.08392189451364751
BALANCE: 115.04412839358851
==================================
TICK: 2658 / TRADE: 14
--------------------------------
BUY: 8321.455941670054 LTCBTC for 0.013825 each.
REWARD SUM: [0.16217744]

ep_dlt_neg_5.npz
----------------
remove_unwanted = False
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = 0#(current_price * 0.1 /100)
    percent_change = 1000

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 3
    elif percent_change < 5 and percent_change > 0 :
        if remove_unwanted == False:
            reward = reward / 10
        else:
            reward = 0
            remove_unwanted(ep_idx)
    else:
        if remove_unwanted != False:
            remove_unwanted(ep_idx)

else:
    action = 2
    percent_change = 0
    if remove_unwanted == False:
        reward = 0#-(current_price * 0.01 /100)
    else:
        reward = 0


Pretraining done.
TICK: 104 / TRADE: 0
--------------------------------
BUY: 8849557.522123894 DLTBTC for 1.13e-05 each.
SELL: 8849557.522123894 DLTBTC for 1.1080000000000002e-05 each.
REWARD: -0.021918821902654484
BALANCE: 97.80811780973455
==================================
TICK: 497 / TRADE: 1
--------------------------------
BUY: 8557140.665768553 DLTBTC for 1.143e-05 each.
SELL: 8557140.665768553 DLTBTC for 1.05e-05 each.
REWARD: -0.0836599819553806
BALANCE: 89.62549243868241
==================================
TICK: 607 / TRADE: 2
--------------------------------
BUY: 9239741.48852396 DLTBTC for 9.7e-06 each.
SELL: 9239741.48852396 DLTBTC for 9.12e-06 each.
REWARD: -0.062142860824742074
BALANCE: 84.0559079357164
==================================
TICK: 983 / TRADE: 3
--------------------------------
BUY: 8629970.013933923 DLTBTC for 9.74e-06 each.
SELL: 8629970.013933923 DLTBTC for 9.73e-06 each.
REWARD: -0.0035225664142709556
BALANCE: 83.759815417501
==================================
TICK: 1138 / TRADE: 4
--------------------------------
BUY: 9055115.18027038 DLTBTC for 9.25e-06 each.
SELL: 9055115.18027038 DLTBTC for 9.38e-06 each.
REWARD: 0.01152050337837851
BALANCE: 84.72477065399069
==================================
TICK: 1172 / TRADE: 5
--------------------------------
BUY: 8843921.780166043 DLTBTC for 9.58e-06 each.
SELL: 8843921.780166043 DLTBTC for 1.311e-05 each.
REWARD: 0.3650569399138832
BALANCE: 115.6541361638421
==================================
TICK: 1252 / TRADE: 6
--------------------------------
BUY: 8965436.91192574 DLTBTC for 1.2900000000000004e-05 each.
SELL: 8965436.91192574 DLTBTC for 3.936e-05 each.
REWARD: 2.0435396511627903
BALANCE: 351.9979492356338
==================================
TICK: 1683 / TRADE: 7
--------------------------------
BUY: 10445043.004024738 DLTBTC for 3.370000000000001e-05 each.
SELL: 10445043.004024738 DLTBTC for 3.1740000000000004e-05 each.
REWARD: -0.06051336517062322
BALANCE: 330.69736879422743
==================================
TICK: 1938 / TRADE: 8
--------------------------------
BUY: 9505529.427830623 DLTBTC for 3.4790000000000004e-05 each.
SELL: 9505529.427830623 DLTBTC for 3.152e-05 each.
REWARD: -0.09625612963495256
BALANCE: 298.8657199936326
==================================
TICK: 2329 / TRADE: 9
--------------------------------
BUY: 11949848.860201223 DLTBTC for 2.501e-05 each.
SELL: 11949848.860201223 DLTBTC for 2.603e-05 each.
REWARD: 0.038183353533586706
BALANCE: 310.2774154392194
==================================
TICK: 2466 / TRADE: 10
--------------------------------
BUY: 12768617.919309437 DLTBTC for 2.4300000000000005e-05 each.
SELL: 12768617.919309437 DLTBTC for 2.3950000000000006e-05 each.
REWARD: -0.016865743955761126
BALANCE: 305.0443559951662
==================================
TICK: 2682 / TRADE: 11
--------------------------------
BUY: 12410266.720714651 DLTBTC for 2.4580000000000005e-05 each.
SELL: 12410266.720714651 DLTBTC for 2.7240000000000007e-05 each.
REWARD: 0.1054492498982913
BALANCE: 337.21105452056383
==================================
TICK: 3009 / TRADE: 12
--------------------------------
BUY: 12768309.523686625 DLTBTC for 2.6410000000000006e-05 each.
SELL: 12768309.523686625 DLTBTC for 3.120000000000001e-05 each.
REWARD: 0.17841911207875816
BALANCE: 397.37595145126454
==================================
TICK: 3377 / TRADE: 13
--------------------------------
BUY: 14242865.643414496 DLTBTC for 2.7900000000000007e-05 each.
SELL: 14242865.643414496 DLTBTC for 2.811e-05 each.
REWARD: 0.005009638776881653
BALANCE: 399.366661426655
==================================
TICK: 3564 / TRADE: 14
--------------------------------
BUY: 16815438.375859156 DLTBTC for 2.375e-05 each.
SELL: 16815438.375859156 DLTBTC for 2.1280000000000006e-05 each.
REWARD: -0.10623859999999963
BALANCE: 356.9385064300133
==================================
TICK: 3637 / TRADE: 15
--------------------------------
BUY: 16617248.9027008 DLTBTC for 2.1480000000000008e-05 each.
SELL: 16617248.9027008 DLTBTC for 2.178e-05 each.
REWARD: 0.01143314856843558
BALANCE: 361.01943740382313
==================================
TICK: 3703 / TRADE: 16
--------------------------------
BUY: 17298487.657107 DLTBTC for 2.0870000000000005e-05 each.
SELL: 17298487.657107 DLTBTC for 2.1070000000000007e-05 each.
REWARD: 0.007060753324149571
BALANCE: 363.5685065965548
==================================
TICK: 3872 / TRADE: 17
--------------------------------
BUY: 19005149.3254864 DLTBTC for 1.913e-05 each.
SELL: 19005149.3254864 DLTBTC for 1.747e-05 each.
REWARD: -0.0890563357618922
BALANCE: 331.1904276006423
==================================
REWARD SUM: [2.2254984]


ep_buy_reward_hold_not
-----------------------
remove_unwanted = False
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = (current_price * 0.1 /100)
    percent_change = 1000

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 2
    elif percent_change < 5 and percent_change > 0 :
        if remove_unwanted == False:
            reward = reward / 10
        else:
            reward = 0
            remove_unwanted(ep_idx)
    else:
        if remove_unwanted == True: remove_unwanted(ep_idx)

else:
    action = 2
    percent_change = 0
    if remove_unwanted == False:
        reward = -(current_price * 0.01 /100)
    else:
        reward = 0

Pretraining done.
TICK: 82 / TRADE: 0
--------------------------------
BUY: 10239.606799098914 LTCBTC for 0.009766 each.
SELL: 10239.606799098914 LTCBTC for 0.00978 each.
REWARD: -0.0010684741705917489
BALANCE: 99.89315258294083
==================================
TICK: 185 / TRADE: 1
--------------------------------
BUY: 11107.87863704446 LTCBTC for 0.008993000000000001 each.
SELL: 11107.87863704446 LTCBTC for 0.008754999999999999 each.
REWARD: -0.028897344636106048
BALANCE: 97.00650572596446
==================================
TICK: 363 / TRADE: 2
--------------------------------
BUY: 11248.435265070091 LTCBTC for 0.008624 each.
SELL: 11248.435265070091 LTCBTC for 0.008956 each.
REWARD: 0.035902596677875875
BALANCE: 100.48929117617382
==================================
TICK: 621 / TRADE: 3
--------------------------------
BUY: 11326.565732210756 LTCBTC for 0.008872 each.
SELL: 11326.565732210756 LTCBTC for 0.009069 each.
REWARD: 0.01965077438148133
BALANCE: 102.46398356483179
==================================
TICK: 831 / TRADE: 4
--------------------------------
BUY: 10653.356577753355 LTCBTC for 0.009618000000000002 each.
SELL: 10653.356577753355 LTCBTC for 0.011856 each.
REWARD: 0.22960891297567065
BALANCE: 125.9906274503098
==================================
TICK: 1057 / TRADE: 5
--------------------------------
BUY: 10741.804710572922 LTCBTC for 0.011729 each.
SELL: 10741.804710572922 LTCBTC for 0.012208 each.
REWARD: 0.03823847514707146
BALANCE: 130.80831692683242
==================================
TICK: 1240 / TRADE: 6
--------------------------------
BUY: 10577.206834869607 LTCBTC for 0.012367 each.
SELL: 10577.206834869607 LTCBTC for 0.012364 each.
REWARD: -0.0027404124888814607
BALANCE: 130.44984818147657
==================================
TICK: 1553 / TRADE: 7
--------------------------------
BUY: 9027.671154427444 LTCBTC for 0.01445 each.
SELL: 9027.671154427444 LTCBTC for 0.014662 each.
REWARD: 0.01213618750000034
BALANCE: 132.03301199835354
==================================
TICK: 1601 / TRADE: 8
--------------------------------
BUY: 9135.968170381506 LTCBTC for 0.014452000000000001 each.
SELL: 9135.968170381506 LTCBTC for 0.014995 each.
REWARD: 0.034980343875415265
BALANCE: 136.6515721609628
==================================
TICK: 2142 / TRADE: 9
--------------------------------
BUY: 9522.757641878938 LTCBTC for 0.014350000000000003 each.
SELL: 9522.757641878938 LTCBTC for 0.016911000000000002 each.
REWARD: 0.17552257306184682
BALANCE: 160.6370077196016
==================================
TICK: 2251 / TRADE: 10
--------------------------------
BUY: 8777.498919162974 LTCBTC for 0.018301 each.
SELL: 8777.498919162974 LTCBTC for 0.018284 each.
REWARD: -0.003425027662422697
BALANCE: 160.08682152455316
==================================
TICK: 2474 / TRADE: 11
--------------------------------
BUY: 10377.727312624993 LTCBTC for 0.015426 each.
SELL: 10377.727312624993 LTCBTC for 0.015503 each.
REWARD: 0.0024806640371775046
BALANCE: 160.48394314553516
==================================
TICK: 2542 / TRADE: 12
--------------------------------
BUY: 10301.29938670872 LTCBTC for 0.015579 each.
SELL: 10301.29938670872 LTCBTC for 0.015533000000000002 each.
REWARD: -0.005443753109153238
BALANCE: 159.6103081810675
==================================
REWARD SUM: [0.50694555]


ep_unwanted_removed.npz
-----------------------
remove_unwanted = True
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = 0
    percent_change = 1000

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 2
    elif percent_change < 5:# and percent_change > 0 :
        if remove_unwanted == False:
            reward = reward / 10
        else:
            reward = 0
            remove_unwanted(ep_idx)
    else:
        if remove_unwanted == True: remove_unwanted(ep_idx)

else:
    action = 2
    reward = -(current_price * 0.1 /100) if remove_unwanted == False else 0
    percent_change = 0

TICK: 88 / TRADE: 0
--------------------------------
BUY: 10070.493454179255 LTCBTC for 0.00993 each.
SELL: 10070.493454179255 LTCBTC for 0.009606 each.
REWARD: -0.035045316276434924
BALANCE: 96.49546837235651
==================================
TICK: 309 / TRADE: 1
--------------------------------
BUY: 11242.627096860831 LTCBTC for 0.008583 each.
SELL: 11242.627096860831 LTCBTC for 0.008772 each.
REWARD: 0.019466818857043267
BALANCE: 98.37392817568673
==================================
TICK: 506 / TRADE: 2
--------------------------------
BUY: 11074.403712224104 LTCBTC for 0.008883 each.
SELL: 11074.403712224104 LTCBTC for 0.009329 each.
REWARD: 0.04758438326719583
BALANCE: 103.0549908774982
==================================
TICK: 838 / TRADE: 3
--------------------------------
BUY: 10678.16712024642 LTCBTC for 0.009651 each.
SELL: 10678.16712024642 LTCBTC for 0.009741 each.
REWARD: 0.006803721926484485
BALANCE: 103.75614837856509
==================================
TICK: 884 / TRADE: 4
--------------------------------
BUY: 9127.03627538398 LTCBTC for 0.011368000000000001 each.
SELL: 9127.03627538398 LTCBTC for 0.011872 each.
REWARD: 0.041725769704433535
BALANCE: 108.08545353122813
==================================
TICK: 936 / TRADE: 5
--------------------------------
BUY: 8765.34372972412 LTCBTC for 0.012331 each.
SELL: 8765.34372972412 LTCBTC for 0.011731 each.
REWARD: -0.05103472308105572
BALANCE: 102.56934234117158
==================================
TICK: 1029 / TRADE: 6
--------------------------------
BUY: 8871.245661751562 LTCBTC for 0.011562000000000001 each.
SELL: 8871.245661751562 LTCBTC for 0.011659000000000001 each.
REWARD: 0.005870153709349513
BALANCE: 103.17144014658115
==================================
TICK: 1051 / TRADE: 7
--------------------------------
BUY: 8854.397540901233 LTCBTC for 0.011652 each.
SELL: 8854.397540901233 LTCBTC for 0.011781 each.
REWARD: 0.008544962908728193
BALANCE: 104.05303627587375
==================================
TICK: 1324 / TRADE: 8
--------------------------------
BUY: 8881.276568442621 LTCBTC for 0.011716 each.
SELL: 8881.276568442621 LTCBTC for 0.014462000000000001 each.
REWARD: 0.23129631246799276
BALANCE: 128.12011986758162
==================================
TICK: 1747 / TRADE: 9
--------------------------------
BUY: 8441.728923211545 LTCBTC for 0.015177000000000001 each.
SELL: 8441.728923211545 LTCBTC for 0.015234000000000001 each.
REWARD: 0.001247862102194297
BALANCE: 128.27999610969297
==================================
TICK: 1807 / TRADE: 10
--------------------------------
BUY: 8648.283968832533 LTCBTC for 0.014833 each.
SELL: 8648.283968832533 LTCBTC for 0.015263 each.
REWARD: 0.026418549749713582
BALANCE: 131.66896756880996
==================================
TICK: 1915 / TRADE: 11
--------------------------------
BUY: 8711.722083420005 LTCBTC for 0.015114 each.
SELL: 8711.722083420005 LTCBTC for 0.017445 each.
REWARD: 0.15134410201220705
BALANCE: 151.59628922838593
==================================
TICK: 2280 / TRADE: 12
--------------------------------
BUY: 8524.307761380227 LTCBTC for 0.017783999999999998 each.
SELL: 8524.307761380227 LTCBTC for 0.015571000000000002 each.
REWARD: -0.12662523449800345
BALANCE: 132.4003735558144
==================================
TICK: 2407 / TRADE: 13
--------------------------------
BUY: 8464.41462446071 LTCBTC for 0.015642 each.
SELL: 8464.41462446071 LTCBTC for 0.015782 each.
REWARD: 0.006429462944316899
BALANCE: 133.25163685140524
==================================
TICK: 2469 / TRADE: 14
--------------------------------
BUY: 8602.98514115858 LTCBTC for 0.015489 each.
SELL: 8602.98514115858 LTCBTC for 0.015533000000000002 each.
REWARD: 0.0003351908007298565
BALANCE: 133.29630157426
==================================
TICK: 2619 / TRADE: 15
--------------------------------
BUY: 9265.695924806061 LTCBTC for 0.014386000000000001 each.
SELL: 9265.695924806061 LTCBTC for 0.013488 each.
REWARD: -0.0647642795078549
BALANCE: 124.66346264174132

reward_do_nothing
-----------------

if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = np.array([0], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = np.array([1], dtype=np.float32)
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = np.array([profit], dtype=np.float32)

else:
    action = np.array([2], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)

Pretraining done.
TICK: 18 / TRADE: 0
--------------------------------
BUY: 12132.977432661975 LTCBTC for 0.008242 each.
SELL: 12132.977432661975 LTCBTC for 0.00964 each.
REWARD: 0.16669680447706892
BALANCE: 116.6696804477069
==================================
TICK: 177 / TRADE: 1
--------------------------------
BUY: 12984.939393178285 LTCBTC for 0.008985 each.
SELL: 12984.939393178285 LTCBTC for 0.008642 each.
REWARD: -0.040577795979409914
BALANCE: 111.9354819575169
==================================
TICK: 381 / TRADE: 2
--------------------------------
BUY: 13078.102810785946 LTCBTC for 0.008558999999999999 each.
SELL: 13078.102810785946 LTCBTC for 0.008745999999999999 each.
REWARD: 0.019295322540600512
BALANCE: 114.09531318562476
==================================
TICK: 568 / TRADE: 3
--------------------------------
BUY: 12288.13281482227 LTCBTC for 0.009285 each.
SELL: 12288.13281482227 LTCBTC for 0.009541 each.
REWARD: 0.025004028843564896
BALANCE: 116.9481556874337
==================================
TICK: 971 / TRADE: 4
--------------------------------
BUY: 9772.554164572048 LTCBTC for 0.011967 each.
SELL: 9772.554164572048 LTCBTC for 0.011736 each.
REWARD: -0.02175329343193777
BALANCE: 114.40414814044101
==================================
TICK: 1203 / TRADE: 5
--------------------------------
BUY: 9161.12653270668 LTCBTC for 0.012488 each.
SELL: 9161.12653270668 LTCBTC for 0.012604 each.
REWARD: 0.006767272081198206
BALANCE: 115.17835213812508
==================================
TICK: 1267 / TRADE: 6
--------------------------------
BUY: 9804.916330818513 LTCBTC for 0.011747 each.
SELL: 9804.916330818513 LTCBTC for 0.011785 each.
REWARD: 0.0007283488603475607
BALANCE: 115.26224215964159
==================================
TICK: 1349 / TRADE: 7
--------------------------------
BUY: 9702.208935996765 LTCBTC for 0.011880000000000002 each.
SELL: 9702.208935996765 LTCBTC for 0.012416 each.
REWARD: 0.04250668350168341
BALANCE: 120.16165780681587
==================================
TICK: 1452 / TRADE: 8
--------------------------------
BUY: 9813.120278220977 LTCBTC for 0.012245 each.
SELL: 9813.120278220977 LTCBTC for 0.014479 each.
REWARD: 0.17948755601776245
BALANCE: 141.72918009360393
==================================
TICK: 1587 / TRADE: 9
--------------------------------
BUY: 9734.146984450817 LTCBTC for 0.014560000000000003 each.
SELL: 9734.146984450817 LTCBTC for 0.014571 each.
REWARD: -0.001744830550309051
BALANCE: 141.48188669030637
==================================
TICK: 1746 / TRADE: 10
--------------------------------
BUY: 9314.146589223592 LTCBTC for 0.01519 each.
SELL: 9314.146589223592 LTCBTC for 0.014856 each.
REWARD: -0.024431651579986724
BALANCE: 138.02525052980965
==================================
TICK: 1830 / TRADE: 11
--------------------------------
BUY: 9228.754381506395 LTCBTC for 0.014956 each.
SELL: 9228.754381506395 LTCBTC for 0.014821 each.
REWARD: -0.011502363077527278
BALANCE: 136.4376339843491
==================================
TICK: 2195 / TRADE: 12
--------------------------------
BUY: 7862.481068653783 LTCBTC for 0.017353 each.
SELL: 7862.481068653783 LTCBTC for 0.018183 each.
REWARD: 0.04521240770688095
BALANCE: 142.6063079186117
==================================
TICK: 2338 / TRADE: 13
--------------------------------
BUY: 8459.767925408536 LTCBTC for 0.016857 each.
SELL: 8459.767925408536 LTCBTC for 0.015406 each.
REWARD: -0.08836038014623004
BALANCE: 130.00556033967283
==================================
TICK: 2541 / TRADE: 14
--------------------------------
BUY: 8280.081545103676 LTCBTC for 0.015701 each.
SELL: 8280.081545103676 LTCBTC for 0.01548 each.
REWARD: -0.016538807241576747
BALANCE: 127.85542343688181
==================================
TICK: 2582 / TRADE: 15
--------------------------------
BUY: 8363.670009608282 LTCBTC for 0.015287 each.
SELL: 8363.670009608282 LTCBTC for 0.014046000000000001 each.
REWARD: -0.08347570178092478
BALANCE: 117.1826022389908
==================================
TICK: 2714 / TRADE: 16
--------------------------------
BUY: 8473.073191539464 LTCBTC for 0.01383 each.
[0.19731364]

reward_try_buy
--------------
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = (current_price * 0.1 /100)

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 2
    elif percent_change < 5 and percent_change > 0 :
        reward = reward / 10

else:
    action = 2
    reward = -(current_price * 0.01 /100)

retraining done.
TICK: 27 / TRADE: 0
--------------------------------
BUY: 11920.371915603768 LTCBTC for 0.008388999999999999 each.
SELL: 11920.371915603768 LTCBTC for 0.008603999999999999 each.
REWARD: 0.023066330164501103
BALANCE: 102.3066330164501
==================================
TICK: 91 / TRADE: 1
--------------------------------
BUY: 10632.57462237062 LTCBTC for 0.009622 each.
SELL: 10632.57462237062 LTCBTC for 0.008862 each.
REWARD: -0.08128675463780921
BALANCE: 93.99045884062154
==================================
TICK: 317 / TRADE: 2
--------------------------------
BUY: 10897.44450326047 LTCBTC for 0.008624999999999999 each.
SELL: 10897.44450326047 LTCBTC for 0.008811 each.
REWARD: 0.01901290054347826
BALANCE: 95.77749008659417
==================================
TICK: 787 / TRADE: 3
--------------------------------
BUY: 9677.426501626167 LTCBTC for 0.009897 each.
SELL: 9677.426501626167 LTCBTC for 0.012022 each.
REWARD: 0.21167664791098328
BALANCE: 116.05134813345185
==================================
TICK: 1021 / TRADE: 4
--------------------------------
BUY: 10114.288664236696 LTCBTC for 0.011474 each.
SELL: 10114.288664236696 LTCBTC for 0.011596 each.
REWARD: 0.0081077321553078
BALANCE: 116.99226138038026
==================================
TICK: 1200 / TRADE: 5
--------------------------------
BUY: 9418.90841159168 LTCBTC for 0.012421 each.
SELL: 9418.90841159168 LTCBTC for 0.012349 each.
REWARD: -0.00828058970191592
BALANCE: 116.02349646559003
==================================
TICK: 1238 / TRADE: 6
--------------------------------
BUY: 9432.804590698377 LTCBTC for 0.0123 each.
SELL: 9432.804590698377 LTCBTC for 0.011661 each.
REWARD: -0.05431986013719503
BALANCE: 109.72111636495083
==================================
TICK: 1360 / TRADE: 7
--------------------------------
BUY: 9188.603665099306 LTCBTC for 0.011941 each.
SELL: 9188.603665099306 LTCBTC for 0.012048 each.
REWARD: 0.0064398982497277935
BALANCE: 110.42770919018766
==================================
TICK: 1403 / TRADE: 8
--------------------------------
BUY: 8709.496741871413 LTCBTC for 0.012679000000000001 each.
SELL: 8709.496741871413 LTCBTC for 0.012285 each.
REWARD: -0.033495804455201394
BALANCE: 106.72884423671728
==================================
TICK: 1641 / TRADE: 9
--------------------------------
BUY: 7390.682379109291 LTCBTC for 0.014441 each.
SELL: 7390.682379109291 LTCBTC for 0.014682 each.
REWARD: 0.014148462061145617
BALANCE: 108.2388932402304
==================================
TICK: 1892 / TRADE: 10
--------------------------------
BUY: 7270.210454072434 LTCBTC for 0.014888 each.
SELL: 7270.210454072434 LTCBTC for 0.015161 each.
REWARD: 0.015792664499093556
BALANCE: 109.94827376692656
==================================
TICK: 2086 / TRADE: 11
--------------------------------
BUY: 7459.177324757568 LTCBTC for 0.01474 each.
SELL: 7459.177324757568 LTCBTC for 0.015770000000000003 each.
REWARD: 0.0672048602866353
BALANCE: 117.33733214418959
==================================
TICK: 2545 / TRADE: 12
--------------------------------
BUY: 7616.3398769433725 LTCBTC for 0.015406 each.
SELL: 7616.3398769433725 LTCBTC for 0.013897 each.
REWARD: -0.10020256951431261
BALANCE: 105.57982996338744
==================================
[0.0878639]
REWARD SUM: 0.0


reward_min_notells
-------------

if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = 0

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 2

else:
    action = 2
    reward = -(current_price * 0.1 /100)

Pretraining done.
TICK: 66 / TRADE: 0
--------------------------------
BUY: 10939.722131057872 LTCBTC for 0.009141 each.
SELL: 10939.722131057872 LTCBTC for 0.009503 each.
REWARD: 0.037004414006946984
BALANCE: 103.7004414006947
==================================
TICK: 178 / TRADE: 1
--------------------------------
BUY: 11481.448339315179 LTCBTC for 0.009032 each.
SELL: 11481.448339315179 LTCBTC for 0.008620000000000001 each.
REWARD: -0.04800005881864455
BALANCE: 98.72281411394195
==================================
TICK: 815 / TRADE: 2
--------------------------------
BUY: 9976.032145709576 LTCBTC for 0.009895999999999999 each.
SELL: 9976.032145709576 LTCBTC for 0.009741 each.
REWARD: -0.018122198836651005
BALANCE: 96.93373964685536
==================================
TICK: 1064 / TRADE: 3
--------------------------------
BUY: 8054.319870947682 LTCBTC for 0.012035 each.
SELL: 8054.319870947682 LTCBTC for 0.012480000000000002 each.
REWARD: 0.03438466971333631
BALANCE: 100.26677426869101
==================================
TICK: 1295 / TRADE: 4
--------------------------------
BUY: 8454.909711501055 LTCBTC for 0.011859 each.
SELL: 8454.909711501055 LTCBTC for 0.014436000000000001 each.
REWARD: 0.21426195769036194
BALANCE: 121.75012961479835
==================================
TICK: 1657 / TRADE: 5
--------------------------------
BUY: 8367.706502735282 LTCBTC for 0.01455 each.
SELL: 8367.706502735282 LTCBTC for 0.014294 each.
REWARD: -0.020048980455326437
BALANCE: 119.3091636457178
==================================
TICK: 1811 / TRADE: 6
--------------------------------
BUY: 8076.710238675724 LTCBTC for 0.014772 each.
SELL: 8076.710238675724 LTCBTC for 0.014946000000000001 each.
REWARD: 0.009251174730909861
BALANCE: 120.41291356560306
==================================
TICK: 1863 / TRADE: 7
--------------------------------
BUY: 8187.455875814447 LTCBTC for 0.014707 each.
SELL: 8187.455875814447 LTCBTC for 0.014832 each.
REWARD: 0.00597968144421035
BALANCE: 121.1329444304946
==================================
TICK: 2106 / TRADE: 8
--------------------------------
BUY: 8226.904674714384 LTCBTC for 0.014724000000000001 each.
SELL: 8226.904674714384 LTCBTC for 0.014882 each.
REWARD: 0.00820553199707974
BALANCE: 122.12690468191951
==================================
TICK: 2156 / TRADE: 9
--------------------------------
BUY: 8031.494454946699 LTCBTC for 0.015206 each.
SELL: 8031.494454946699 LTCBTC for 0.017324000000000003 each.
REWARD: 0.13644068583125102
BALANCE: 138.78998331516843
==================================
TICK: 2308 / TRADE: 10
--------------------------------
BUY: 8395.232477326908 LTCBTC for 0.016531999999999998 each.
SELL: 8395.232477326908 LTCBTC for 0.015426 each.
REWARD: -0.06923184713736974
BALANCE: 129.1812964060946
==================================
TICK: 2655 / TRADE: 11
--------------------------------
BUY: 9259.64421232131 LTCBTC for 0.013951 each.
SELL: 9259.64421232131 LTCBTC for 0.013201 each.
REWARD: -0.056123709657909804
BALANCE: 121.93116283336654
==================================
TICK: 2781 / TRADE: 12
--------------------------------
BUY: 9319.816772404381 LTCBTC for 0.013083000000000001 each.
REWARD SUM: [0.23400134]
TICK: 23 / TRADE: 0
--------------------------------
BUY: 11994.722322178242 LTCBTC for 0.008336999999999999 each.
SELL: 11994.722322178242 LTCBTC for 0.008447 each.
REWARD: 0.010662792183939285
BALANCE: 101.06627921839393
==================================
------------------------------------------------------------------------------------------------------------
TICK: 18 / TRADE: 0
--------------------------------
BUY: 12132.977432661975 LTCBTC for 0.008242 each.
SELL: 12132.977432661975 LTCBTC for 0.009112 each.
REWARD: 0.10279473883766088
BALANCE: 110.27947388376609
==================================
TICK: 141 / TRADE: 1
--------------------------------
BUY: 11311.87546248498 LTCBTC for 0.009749 each.
SELL: 11311.87546248498 LTCBTC for 0.008794999999999999 each.
REWARD: -0.1001101403028517
BALANCE: 99.23938028073759
==================================
TICK: 346 / TRADE: 2
--------------------------------
BUY: 11643.714687403213 LTCBTC for 0.008523000000000001 each.
SELL: 11643.714687403213 LTCBTC for 0.009135 each.
REWARD: 0.06912786265839488
BALANCE: 106.09958653108865
==================================
TICK: 538 / TRADE: 3
--------------------------------
BUY: 11714.650163529715 LTCBTC for 0.009057 each.
SELL: 11714.650163529715 LTCBTC for 0.00913 each.
REWARD: 0.005541488972617747
BALANCE: 106.68753621984997
==================================
TICK: 715 / TRADE: 4
--------------------------------
BUY: 11239.732007990937 LTCBTC for 0.009492 each.
SELL: 11239.732007990937 LTCBTC for 0.009538 each.
REWARD: 0.0023356408686263652
BALANCE: 106.93671998961811
==================================
TICK: 823 / TRADE: 5
--------------------------------
BUY: 11093.020745811009 LTCBTC for 0.00964 each.
SELL: 11093.020745811009 LTCBTC for 0.011368000000000001 each.
REWARD: 0.17630682183609991
BALANCE: 125.79039322856461
==================================
TICK: 940 / TRADE: 6
--------------------------------
BUY: 10335.255379883709 LTCBTC for 0.012171 each.
SELL: 10335.255379883709 LTCBTC for 0.012443000000000001 each.
REWARD: 0.019793931656191033
BALANCE: 128.28027967513623
==================================
TICK: 1213 / TRADE: 7
--------------------------------
BUY: 10290.412295454535 LTCBTC for 0.012466 each.
SELL: 10290.412295454535 LTCBTC for 0.012329999999999999 each.
REWARD: -0.01338085467471517
BALANCE: 126.56377989517141
==================================
TICK: 1251 / TRADE: 8
--------------------------------
BUY: 10061.51362550055 LTCBTC for 0.012579 each.
SELL: 10061.51362550055 LTCBTC for 0.011750000000000002 each.
REWARD: -0.06823727169290061
BALANCE: 117.92741285998413
==================================
TICK: 1362 / TRADE: 9
--------------------------------
BUY: 9826.465532870938 LTCBTC for 0.012001000000000001 each.
SELL: 9826.465532870938 LTCBTC for 0.014472 each.
REWARD: 0.20288664382134836
BALANCE: 141.85330986968083
==================================
TICK: 1552 / TRADE: 10
--------------------------------
BUY: 9821.595919800651 LTCBTC for 0.014443000000000001 each.
SELL: 9821.595919800651 LTCBTC for 0.014897 each.
REWARD: 0.028856939455964792
BALANCE: 145.94676224421843
==================================
TICK: 2032 / TRADE: 11
--------------------------------
BUY: 9715.5346987231 LTCBTC for 0.015022 each.
SELL: 9715.5346987231 LTCBTC for 0.014928 each.
REWARD: -0.008740292570895924
BALANCE: 144.671144842429
==================================
TICK: 2288 / TRADE: 12
--------------------------------
BUY: 8492.08410674037 LTCBTC for 0.017036000000000003 each.
SELL: 8492.08410674037 LTCBTC for 0.016966 each.
REWARD: -0.006597117317739043
BALANCE: 143.71673232741188
==================================
TICK: 2326 / TRADE: 13
--------------------------------
BUY: 8599.612992305643 LTCBTC for 0.016711999999999998 each.
SELL: 8599.612992305643 LTCBTC for 0.016059999999999998 each.
REWARD: -0.04141484599389644
BALANCE: 137.7647259913261
==================================
TICK: 2471 / TRADE: 14
--------------------------------
BUY: 8868.022271730037 LTCBTC for 0.015534999999999997 each.
SELL: 8868.022271730037 LTCBTC for 0.015246000000000001 each.
REWARD: -0.021055112850015822
BALANCE: 134.86407413882722
==================================
[0.34810838]
REWARD SUM: 0.0
TICK: 28 / TRADE: 0
--------------------------------
BUY: 11863.803535413455 LTCBTC for 0.008428999999999999 each.

reward_min_not
-------------
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = 0
    reward = 0

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = 1
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = profit
    if percent_change > 5:
        reward = reward * 2
    elif percent_change < 5 and percent_change > 0 :
        reward = reward / 10

else:
    action = 2
    reward = -(current_price * 0.1 /100)


TICK: 111 / TRADE: 0
--------------------------------
BUY: 10628.122010840683 LTCBTC for 0.009409 each.
SELL: 10628.122010840683 LTCBTC for 0.009021 each.
REWARD: -0.04363252255154637
BALANCE: 95.63674774484537
==================================
TICK: 301 / TRADE: 1
--------------------------------
BUY: 10862.874573471758 LTCBTC for 0.008804000000000001 each.
SELL: 10862.874573471758 LTCBTC for 0.008558 each.
REWARD: -0.03037047116367564
BALANCE: 92.73221465527281
==================================
TICK: 358 / TRADE: 2
--------------------------------
BUY: 10745.331941514809 LTCBTC for 0.00863 each.
SELL: 10745.331941514809 LTCBTC for 0.009272 each.
REWARD: 0.07170735660486693
BALANCE: 99.38179664031753
==================================
TICK: 789 / TRADE: 3
--------------------------------
BUY: 10032.485023250307 LTCBTC for 0.009906 each.
SELL: 10032.485023250307 LTCBTC for 0.009768 each.
REWARD: -0.016394582828588633
BALANCE: 97.7524735436439
==================================
TICK: 863 / TRADE: 4
--------------------------------
BUY: 9993.096866044152 LTCBTC for 0.009782 each.
SELL: 9993.096866044152 LTCBTC for 0.009741 each.
REWARD: -0.0066793375268350275
BALANCE: 97.09955177876289
==================================
TICK: 868 / TRADE: 5
--------------------------------
BUY: 9910.140005997435 LTCBTC for 0.009798000000000001 each.
SELL: 9910.140005997435 LTCBTC for 0.011967 each.
REWARD: 0.218320187633956
BALANCE: 118.29834414227543
==================================
TICK: 953 / TRADE: 6
--------------------------------
BUY: 9999.860028932833 LTCBTC for 0.01183 each.
SELL: 9999.860028932833 LTCBTC for 0.011968000000000001 each.
REWARD: 0.009137675401521772
BALANCE: 119.37931601158505
==================================
TICK: 1000 / TRADE: 7
--------------------------------
BUY: 10343.931722691712 LTCBTC for 0.011541 each.
SELL: 10343.931722691712 LTCBTC for 0.011753 each.
REWARD: 0.015824960060869975
BALANCE: 121.26848891956236
==================================
TICK: 1225 / TRADE: 8
--------------------------------
BUY: 9783.661873300714 LTCBTC for 0.012395 each.
SELL: 9783.661873300714 LTCBTC for 0.012483 each.
REWARD: 0.004583461451190152
BALANCE: 121.82431836376925
==================================
TICK: 1246 / TRADE: 9
--------------------------------
BUY: 9761.563971455867 LTCBTC for 0.012480000000000002 each.
SELL: 9761.563971455867 LTCBTC for 0.011661 each.
REWARD: -0.06795947753906251
BALANCE: 113.54520133621507
==================================
TICK: 1285 / TRADE: 10
--------------------------------
BUY: 9670.005223659944 LTCBTC for 0.011742 each.
SELL: 9670.005223659944 LTCBTC for 0.011880000000000002 each.
REWARD: 0.009224881834440701
BALANCE: 114.59264240140944
==================================
TICK: 1523 / TRADE: 11
--------------------------------
BUY: 7930.286671377816 LTCBTC for 0.01445 each.
SELL: 7930.286671377816 LTCBTC for 0.014119 each.
REWARD: -0.025347781249999923
BALANCE: 111.68797316895905
==================================
TICK: 1622 / TRADE: 12
--------------------------------
BUY: 7879.777985675112 LTCBTC for 0.014174 each.
SELL: 7879.777985675112 LTCBTC for 0.014516 each.
REWARD: 0.02156996481233242
BALANCE: 114.09707882017422
==================================
TICK: 1710 / TRADE: 13
--------------------------------
BUY: 7746.949947051481 LTCBTC for 0.014728 each.
SELL: 7746.949947051481 LTCBTC for 0.015263 each.
REWARD: 0.03373617249032468
BALANCE: 117.94627755189379
==================================
TICK: 1923 / TRADE: 14
--------------------------------
BUY: 7880.9486537413995 LTCBTC for 0.014966 each.
SELL: 7880.9486537413995 LTCBTC for 0.014983000000000002 each.
REWARD: -0.0013653674370236457
BALANCE: 117.78523754520627
==================================
TICK: 2030 / TRADE: 15
--------------------------------
BUY: 7837.718761325943 LTCBTC for 0.015028 each.
SELL: 7837.718761325943 LTCBTC for 0.014745 each.
REWARD: -0.021282902644230606
BALANCE: 115.27842580160407
==================================
TICK: 2204 / TRADE: 16
--------------------------------
BUY: 6764.768839950946 LTCBTC for 0.017041 each.
SELL: 6764.768839950946 LTCBTC for 0.018183 each.
REWARD: 0.06434897664089578
BALANCE: 122.69647453071073
==================================
TICK: 2322 / TRADE: 17
--------------------------------
BUY: 7308.581994919628 LTCBTC for 0.016788 each.
SELL: 7308.581994919628 LTCBTC for 0.015352000000000001 each.
REWARD: -0.08782201647009757
BALANCE: 111.92102272365175
==================================
TICK: 2467 / TRADE: 18
--------------------------------
BUY: 7330.9112938790695 LTCBTC for 0.015267 each.
SELL: 7330.9112938790695 LTCBTC for 0.01551 each.
REWARD: 0.013378478704067609
BALANCE: 113.41835574269759
==================================
TICK: 2580 / TRADE: 19
--------------------------------
BUY: 7389.780801583111 LTCBTC for 0.015348 each.
SELL: 7389.780801583111 LTCBTC for 0.015287 each.
REWARD: -0.006462966774986922
BALANCE: 112.68533667785888
==================================
TICK: 2688 / TRADE: 20
--------------------------------
BUY: 8334.714251320924 LTCBTC for 0.013519999999999999 each.
SELL: 8334.714251320924 LTCBTC for 0.013145 each.
REWARD: -0.030165825513128408
BALANCE: 109.28609047374647
==================================
[0.12434885]
????????
REWARD SUM: 0.0
-------------
Pretraining done.
TICK: 59 / TRADE: 0
--------------------------------
BUY: 11279.043537108055 LTCBTC for 0.008865999999999999 each.
SELL: 11279.043537108055 LTCBTC for 0.009737 each.
REWARD: 0.09549658403592409
BALANCE: 109.5496584035924
==================================
TICK: 238 / TRADE: 1
--------------------------------
BUY: 12464.405325246604 LTCBTC for 0.008789 each.
SELL: 12464.405325246604 LTCBTC for 0.008858 each.
REWARD: 0.005332670454545552
BALANCE: 110.13385063026679
==================================
TICK: 317 / TRADE: 2
--------------------------------
BUY: 12769.14210205992 LTCBTC for 0.008624999999999999 each.
SELL: 12769.14210205992 LTCBTC for 0.008667 each.
REWARD: 0.002358961413043703
BALANCE: 110.39365213417351
==================================
TICK: 352 / TRADE: 3
--------------------------------
BUY: 12949.402009873726 LTCBTC for 0.008525 each.
SELL: 12949.402009873726 LTCBTC for 0.008964999999999999 each.
REWARD: 0.048985514112903195
BALANCE: 115.801341938767
==================================
TICK: 679 / TRADE: 4
--------------------------------
BUY: 12602.170196840461 LTCBTC for 0.009189 each.
SELL: 12602.170196840461 LTCBTC for 0.009863 each.
REWARD: 0.07066687462591159
BALANCE: 123.98466085106617
==================================
TICK: 809 / TRADE: 5
--------------------------------
BUY: 12632.161064805518 LTCBTC for 0.009815 each.
SELL: 12632.161064805518 LTCBTC for 0.01199 each.
REWARD: 0.21854750222873176
BALANCE: 151.0811987947431
==================================
TICK: 1095 / TRADE: 6
--------------------------------
BUY: 12741.94136752493 LTCBTC for 0.011857 each.
SELL: 12741.94136752493 LTCBTC for 0.012679000000000001 each.
REWARD: 0.06665449194041506
BALANCE: 161.15143934215556
==================================
TICK: 1465 / TRADE: 7
--------------------------------
BUY: 13153.07209779265 LTCBTC for 0.012252 each.
SELL: 13153.07209779265 LTCBTC for 0.014747 each.
REWARD: 0.2006330021374061
BALANCE: 193.4837364161363
==================================
TICK: 1542 / TRADE: 8
--------------------------------
BUY: 13361.213757070389 LTCBTC for 0.014481 each.
SELL: 13361.213757070389 LTCBTC for 0.014444 each.
REWARD: -0.005047125975416011
BALANCE: 192.5071996242499
==================================
TICK: 1668 / TRADE: 9
--------------------------------
BUY: 13467.692711924577 LTCBTC for 0.014294 each.
SELL: 13467.692711924577 LTCBTC for 0.015174000000000002 each.
REWARD: 0.058912040672660204
BALANCE: 203.84819159829362
==================================
TICK: 1775 / TRADE: 10
--------------------------------
BUY: 13608.931944608694 LTCBTC for 0.014979 each.
SELL: 13608.931944608694 LTCBTC for 0.014991 each.
REWARD: -0.0016993174819744938
BALANCE: 203.50178880264176
==================================
TICK: 2107 / TRADE: 11
--------------------------------
BUY: 13828.607556580711 LTCBTC for 0.014716 each.
SELL: 13828.607556580711 LTCBTC for 0.017242 each.
REWARD: 0.16872261080626538
BALANCE: 237.8371419131687
==================================
TICK: 2235 / TRADE: 12
--------------------------------
BUY: 13636.668878686354 LTCBTC for 0.017440999999999998 each.
SELL: 13636.668878686354 LTCBTC for 0.01694 each.
REWARD: -0.031152085961240528
BALANCE: 230.4280188235139
==================================
TICK: 2495 / TRADE: 13
--------------------------------
BUY: 14857.696745342313 LTCBTC for 0.015508999999999997 each.
SELL: 14857.696745342313 LTCBTC for 0.015475 each.
REWARD: -0.004685235689760536
BALANCE: 229.34840924580115
==================================
TICK: 2570 / TRADE: 14
--------------------------------
BUY: 14751.93987559022 LTCBTC for 0.015547 each.
SELL: 14751.93987559022 LTCBTC for 0.015526 each.
REWARD: -0.003845805661863877
BALANCE: 228.46637983498417
==================================
TICK: 2622 / TRADE: 15
--------------------------------
BUY: 15861.31490106805 LTCBTC for 0.014403999999999998 each.
SELL: 15861.31490106805 LTCBTC for 0.014470000000000004 each.
REWARD: 0.0020721750468624123
BALANCE: 228.93980216632522
==================================
TICK: 2709 / TRADE: 16
--------------------------------
BUY: 16973.59150106207 LTCBTC for 0.013488 each.
SELL: 16973.59150106207 LTCBTC for 0.013668000000000001 each.
REWARD: 0.010813416092082084
BALANCE: 231.41542350718865
==================================
[0.9027663]
REWARD SUM: 0.0
TICK: 32 / TRADE: 0
--------------------------------
BUY: 11838.522552385462 LTCBTC for 0.008447 each.

reward_neg_5
-----------
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = np.array([0], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = np.array([1], dtype=np.float32)
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = np.array([profit], dtype=np.float32)
    if percent_change > 5:
        reward = reward * 2
    elif percent_change < 5 and percent_change > 0 :
        reward = reward / 10

else:
    action = np.array([2], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)

TICK: 40 / TRADE: 0
--------------------------------
BUY: 11936.022917164 LTCBTC for 0.008378 each.
SELL: 11936.022917164 LTCBTC for 0.008728 each.
REWARD: 0.039173267784674115
BALANCE: 103.91732677846741
==================================
TICK: 343 / TRADE: 1
--------------------------------
BUY: 12156.917030705124 LTCBTC for 0.008548 each.
SELL: 12156.917030705124 LTCBTC for 0.009243000000000001 each.
REWARD: 0.07860399417261377
BALANCE: 112.08564372699567
==================================
TICK: 686 / TRADE: 2
--------------------------------
BUY: 12330.653875357058 LTCBTC for 0.00909 each.
SELL: 12330.653875357058 LTCBTC for 0.009868 each.
REWARD: 0.08287628369086919
BALANCE: 121.37488533418785
==================================
TICK: 747 / TRADE: 3
--------------------------------
BUY: 12322.323384181509 LTCBTC for 0.00985 each.
SELL: 12322.323384181509 LTCBTC for 0.012916999999999998 each.
REWARD: 0.3080941809961928
BALANCE: 158.76978122473128
==================================
TICK: 1201 / TRADE: 4
--------------------------------
BUY: 12664.096771534758 LTCBTC for 0.012537000000000001 each.
SELL: 12664.096771534758 LTCBTC for 0.012483 each.
REWARD: -0.006794926642139321
BALANCE: 157.6909522083207
==================================
TICK: 1335 / TRADE: 5
--------------------------------
BUY: 13443.388935065705 LTCBTC for 0.011729999999999999 each.
SELL: 13443.388935065705 LTCBTC for 0.012284 each.
REWARD: 0.04461288949275377
BALANCE: 164.72600123319765
==================================
TICK: 1467 / TRADE: 6
--------------------------------
BUY: 13355.440346456759 LTCBTC for 0.012334 each.
SELL: 13355.440346456759 LTCBTC for 0.014668 each.
REWARD: 0.1862617900721586
BALANCE: 195.40816109432166
==================================
TICK: 1561 / TRADE: 7
--------------------------------
BUY: 13317.532958108202 LTCBTC for 0.014673 each.
SELL: 13317.532958108202 LTCBTC for 0.014474 each.
REWARD: -0.016026878237238362
BALANCE: 192.2763782899003
==================================
TICK: 1578 / TRADE: 8
--------------------------------
BUY: 13199.449323120774 LTCBTC for 0.014566999999999998 each.
SELL: 13199.449323120774 LTCBTC for 0.014521000000000001 each.
REWARD: -0.0056483703533669605
BALANCE: 191.19033009511486
==================================
TICK: 1598 / TRADE: 9
--------------------------------
BUY: 13206.48822926814 LTCBTC for 0.014477 each.
SELL: 13206.48822926814 LTCBTC for 0.014639 each.
REWARD: 0.008663768283311502
BALANCE: 192.84675881306876
==================================
TICK: 1902 / TRADE: 10
--------------------------------
BUY: 12753.571775217826 LTCBTC for 0.015121 each.
SELL: 12753.571775217826 LTCBTC for 0.014746 each.
REWARD: -0.027236423475629823
BALANCE: 187.59430282413336
==================================
TICK: 2132 / TRADE: 11
--------------------------------
BUY: 12876.26486540829 LTCBTC for 0.014569 each.
SELL: 12876.26486540829 LTCBTC for 0.015582 each.
REWARD: 0.06685903952742134
BALANCE: 200.13667773177116
==================================
TICK: 2402 / TRADE: 12
--------------------------------
BUY: 12684.540355670628 LTCBTC for 0.015778 each.
SELL: 12684.540355670628 LTCBTC for 0.016215999999999998 each.
REWARD: 0.025192377836227742
BALANCE: 205.1785965360773
==================================
TICK: 2580 / TRADE: 13
--------------------------------
BUY: 13368.42562783928 LTCBTC for 0.015348 each.
SELL: 13368.42562783928 LTCBTC for 0.014518000000000001 each.
REWARD: -0.05644203255310121
BALANCE: 193.5978995111884
==================================
TICK: 2668 / TRADE: 14

reward_x_2
----------
if buy_signal == True and buy_mode==True:
    entry_price = current_price
    buy_mode = False
    action = np.array([0], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)

elif sell_signal == True and buy_mode == False:
    exit_price = current_price
    buy_mode = True
    action = np.array([1], dtype=np.float32)
    profit = ((exit_price - entry_price)/entry_price + 1)*(1-transaction_fee)**2 - 1
    percent_change = pct_change(entry_price, exit_price)
    reward = np.array([profit], dtype=np.float32)
    if percent_change > 5
        reward = reward * 2

else:
    action = np.array([2], dtype=np.float32)
    reward = np.array([0], dtype=np.float32)


###############################
#        CODE COPIES          #
###############################
binances pairs
=============
            "NAS/BTC",
            "ARDR/BTC",
            "GXS/BTC",
            "BCD/BTC",
            "HC/BTC",
            "TNT/BTC",
            "BTG/BTC",
            "ATOM/BTC",
            "WAN/BTC",
            "EOS/BTC",
            "SKY/BTC",
            "RDN/BTC",
            "LTC/BTC",
            "REP/BTC",
            "QKC/BTC",
            "IOTA/BTC",
            "ZEC/BTC",
            "DLT/BTC",
            "ENJ/BTC",
            "GO/BTC",
            "LINK/BTC",
            "EDO/BTC",
            "GRS/BTC",
            "APPC/BTC",
            "ARK/BTC",
            "NULS/BTC",
            "SNGLS/BTC",
            "WAVES/BTC",
            "VET/BTC",
            "BAT/BTC",
            "QTUM/BTC",
            "DCR/BTC",
            "HOT/BTC",
            "RVN/BTC",
            "LSK/BTC",
            "OMG/BTC",
            "ZIL/BTC",
            "ZRX/BTC",
            "BCN/BTC",
            "PAX/BTC",
            "BTS/BTC",
            "NPXS/BTC",
            "ICX/BTC",
            "XVG/BTC",
            "DENT/BTC",
            "STEEM/BTC",
            "THETA/BTC",
            "SNT/BTC",
            "ELF/BTC",
            "MCO/BTC",
            "STRAT/BTC",
            "GNT/BTC",
            "MATIC/BTC",
            "TFUEL/BTC",
            "PPT/BTC",
            "LRC/BTC",
            "LOOM/BTC",
            "MANA/BTC",
            "AION/BTC",
            "POWR/BTC",
            "ARN/BTC",
            "WABI/BTC"
patterns
========
[
    {
        "symbol": "TNTBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-01-13 07:00", "end":"2019-01-15 07:00"},
                        { "start": "2019-05-19 16:30", "end":"2019-05-21 16:30"}
                    ]
            }

    },
    {
        "symbol": "BCDBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-03-09 16:00", "end": "2019-03-12 16:00" },
                        { "start": "2019-05-27 13:30", "end": "2019-05-29 13:00" }

                    ]
            }

    },
    {
        "symbol": "ARDRBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-03-10 08:30", "end": "2019-03-12 08:30" },
                        { "start": "2019-06-05 06:30", "end": "2019-06-07 06:30" }

                    ]
            }

    },
    {
        "symbol": "WANBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-05-31 06:30", "end": "2019-06-02 06:30" }
                    ]
            }

    },
    {
        "symbol": "GXSBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-02-15 00:00", "end": "2019-02-17 00:00" },
                        { "start": "2019-03-15 12:30", "end": "2019-03-17 12:30" },
                        { "start": "2019-06-02 11:00", "end": "2019-06-04 11:00" }
                    ]
            }

    },
    {
        "symbol": "GASBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-02-15 00:00", "end": "2019-02-17 00:00" }
                    ]
            }

    },
    {
        "symbol": "KMDBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-03-11 02:00", "end": "2019-03-13 02:00" },
                        { "start": "2019-04-16 14:30", "end": "2019-04-17 11:30" }

                    ]
            }

    },
    {
        "symbol": "HCBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-02-06 08:30", "end": "2019-02-08 08:30" },
                        { "start": "2019-03-29 15:30", "end": "2019-03-31 15:30" },
                        { "start": "2019-05-28 03:00", "end": "2019-05-30 03:00" }


                    ]
            }

    },
    {
        "symbol": "RVNBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-01-20 13:00", "end": "2019-01-22 10:30" }
                    ]
            }

    },
    {
        "symbol": "REPBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-01-13 17:30", "end": "2019-01-14 15:30" },
                        { "start": "2019-03-27 23:30", "end": "2019-03-29 23:30" }

                    ]
            }

    },
    {
        "symbol": "NASBTC",
        "patterns":
            {
                "hunter":
                    [
                        { "start": "2019-06-07 02:00", "end": "2019-06-09 02:00" }

                    ]
            }

    }
]
generate expert trajectories
============================
def generate_expert_traj_custom():
    pair = "LTCBTC"
    interval ="1h"
    df = pd.read_csv(base_path+"/data/validate/Binance_"+pair+"-"+interval+".csv")
    df['fast_ma'] = talib.SMA(df.close,15)
    df['slow_ma'] = talib.SMA(df.close,50)
    df.dropna(inplace=True)
    buy_mode = True
    entry_price = 0
    total_reward = 0
    balance = 10000
    trans_fee_perc = 0.00125
    actions, obs, rewards, episode_returns, episode_starts = (np.array([], dtype=np.float32),) * 5
    for _ in range(2):
        for index, row in df.iterrows():
            if index == df.index[0]:
                episode_start = True
                prev_fast_ma = df.loc[[index]]['fast_ma'].values[0]
                prev_slow_ma = df.loc[[index]]['slow_ma'].values[0]
            else:
                episode_start = False
                prev_fast_ma = df.loc[[index-1]]['fast_ma'].values[0]
                prev_slow_ma = df.loc[[index-1]]['slow_ma'].values[0]
            buy_signal = (row.fast_ma <= row.slow_ma) & (prev_fast_ma >= prev_slow_ma)
            sell_signal = (row.fast_ma >= row.slow_ma) & (prev_fast_ma <= prev_slow_ma)
            previous_balance = balance
            if buy_signal == True and buy_mode==True:
                entry_price = row.close
                buy_mode = False
                action = 0
                transaction_fee = ((balance * trans_fee_perc) / 100)
                balance = balance - transaction_fee
                reward = transaction_fee
            elif sell_signal == True and buy_mode == False:
                exit_price = row.close
                buy_mode = True
                action = 1
                target_price = (entry_price + (entry_price * 5 / 100))
                percent_change = pd.Series([entry_price,exit_price]).pct_change()[1]
                balance_before_fee = previous_balance + ((previous_balance * percent_change) / 100)
                transaction_fee = ((balance_before_fee * trans_fee_perc) / 100)
                balance = balance_before_fee - transaction_fee
                profit = balance - previous_balance
                if exit_price > target_price:
                    reward = profit
                else:
                    if profit >= 0:
                        reward = -(profit/10)
                    else:
                        reward = -profit
            else:
                action = 2
                reward = 0

            total_reward += reward
            actions = np.append(actions,[action])
            rewards = np.append(rewards,[reward])
            obs = np.append(obs,[row.close,row.fast_ma,row.slow_ma])
            episode_starts = np.append(episode_starts,episode_start)
            if index == len(df):
                episode_returns = np.append(episode_returns,total_reward)
    obs = obs.reshape(len(df)*2,3)
    np.savez('expert_projectlife.npz', obs=obs, actions=actions, rewards=rewards, episode_starts=episode_starts, episode_returns=episode_returns)

Peak Detection
=============
def detect_peak_start():
    #https://stackoverflow.com/questions/22583391/peak-signal-detection-in-realtime-timeseries-data
    df = pd.read_csv(base_path+"/data/train/Binance_"+pair+"-"+interval+".csv")
    y =  df.close.values
    x = np.array([1,1,1.1,1,0.9,1,1,1.1,1,0.9,1,1.1,1,1,0.9,1,1,1.1,1,1,1,1,1.1,0.9,1,1.1,1,1,0.9,
           1,1.1,1,1,1.1,1,0.8,0.9,1,1.2,0.9,1,1,1.1,1.2,1,1.5,1,3,2,5,3,2,1,1,1,0.9,1,1,3,
           2.6,4,3,3.2,2,1,1,0.8,4,4,2,2.5,1,1,1])

    # Settings: lag = 30, threshold = 5, influence = 0
    lag = 30
    threshold = 5
    influence = 0

    # Run algo with settings from above
    result = thresholding_algo(y, lag=lag, threshold=threshold, influence=influence)

    # Plot result
    plt.subplot(211)
    plt.plot(np.arange(1, len(y)+1), y)

    plt.plot(np.arange(1, len(y)+1),
               result["avgFilter"], color="cyan", lw=2)

    plt.plot(np.arange(1, len(y)+1),
               result["avgFilter"] + threshold * result["stdFilter"], color="green", lw=2)

    plt.plot(np.arange(1, len(y)+1),
               result["avgFilter"] - threshold * result["stdFilter"], color="green", lw=2)

    plt.subplot(212)
    plt.step(np.arange(1, len(y)+1), result["signals"], color="red", lw=2)
    plt.ylim(-1.5, 1.5)
    plt.show()


def thresholding_algo(y, lag, threshold, influence):
    signals = np.zeros(len(y))
    filteredY = np.array(y)
    avgFilter = [0]*len(y)
    stdFilter = [0]*len(y)
    avgFilter[lag - 1] = np.mean(y[0:lag])
    stdFilter[lag - 1] = np.std(y[0:lag])
    for i in range(lag, len(y) - 1):
        if abs(y[i] - avgFilter[i-1]) > threshold * stdFilter [i-1]:
            if y[i] > avgFilter[i-1]:
                signals[i] = 1
            else:
                signals[i] = -1

            filteredY[i] = influence * y[i] + (1 - influence) * filteredY[i-1]
            avgFilter[i] = np.mean(filteredY[(i-lag):i])
            stdFilter[i] = np.std(filteredY[(i-lag):i])
        else:
            signals[i] = 0
            filteredY[i] = y[i]
            avgFilter[i] = np.mean(filteredY[(i-lag):i])
            stdFilter[i] = np.std(filteredY[(i-lag):i])

    return dict(signals = np.asarray(signals),
                avgFilter = np.asarray(avgFilter),
                stdFilter = np.asarray(stdFilter))


Renko live trading
==================
    def evaluate_trades(self,df,symbol):
        self.balance = self.initial_balance
        trade_count = 0
        profit = 0
        action = 0
        trade_history = []
        current_tick = 0
        entry_tick = 0
        buy_mode = True
        entry_price = 0
        buy_index = 0
        for ix, row in df.iterrows():
            if ix > 20:
                fragment = df.head(ix)
                renko_df = self.populate_renko(fragment)
                if len(renko_df) > 25:
                    last = renko_df.iloc[-1]
                    current_price = last['close']
                    current_tick += 1
                    prev1,prev2,prev3,prev4,prev5 = renko_df.iloc[-2],renko_df.iloc[-3],renko_df.iloc[-4],renko_df.iloc[-5],renko_df.iloc[-6]
                    cross_up = last.sma5 > last.sma10 and prev5.sma10 > prev5.sma5
                    cross_down = last.sma5 < last.sma10 and prev5.sma10 < prev5.sma5
                    stable_up_sma5 = last.sma5 > prev1.sma5 and prev1.sma5 > prev2.sma5 and prev2.sma5 > prev3.sma5
                    stable_up_sma10 = last.sma10 > prev1.sma10 and prev1.sma10 > prev2.sma10 and prev2.sma10 > prev3.sma10

                    #### BUY CONDITIONS #####
                    buy_cond = (cross_up and stable_up_sma10 and stable_up_sma5)

                    #### SELL CONDITIONS #####
                    sell_cond = cross_down
                    if buy_cond and buy_mode:
                        buy_index = ix
                        action = 1
                        entry_price =  current_price
                        entry_tick = current_tick
                        quantity = self.balance / entry_price
                        buy_mode = False
                        print("##### TRADE " +  str(trade_count) + " #####")
                        print("BUY: " + str(quantity) + " " +symbol+" for "+ str(entry_price) + " at " +  str(last.date))
                        print(renko_df.tail(20))
                        pdb.set_trace()
                    elif not buy_mode and sell_cond:
                        action = 2
                        exit_price = current_price
                        profit = ((exit_price - entry_price)/entry_price + 1)*(1-self.transaction_fee)**2 - 1
                        self.balance = self.balance * (1.0 + profit)
                        entry_price = 0
                        trade_count += 1
                        buy_mode = True
                        print("buy at: "+str(buy_index))
                        print("sell at: "+str(ix))
                        print("SELL: " + str(quantity) + " " +symbol+" for "+ str(exit_price)  + " at " +  str(last.date) )
                        print("PROFIT: " + str(profit*100))
                        print("BALANCE: " + str(self.balance))
                        print("==================================")
                    else:
                        action = 0

                    trade_history.append((action, current_tick, current_price, self.balance, profit))

                    if (current_tick > len(df)-1):
                        self.results[symbol] = {'balance':np.array([self.balance]), "trade_history":trade_history, "trade_count":trade_count }
                        print("**********************************")
                        print("TOTAL BALANCE FOR "+symbol +": "+ str(self.balance))
                        print("**********************************")

        # ax =self.symbols[-1]
        # if (symbol == ax):
        #     print("#########FINAL BALANCES#####################")
        #     final_balance = 0
        #     for symbol in self.symbols:
        #         xbalance = self.results[symbol]['balance'][0]
        #         print(symbol + ": "+str(xbalance))
        #         final_balance +=xbalance
        #     print("============================================")
        #     print("Trade count: " + str(trade_count))
        #     print("Investment: " + str(len(self.symbols)*self.initial_balance))
        #     print("FINAL BALANCE: " + str(final_balance))


Renko Strategy
==============
mport talib.abstract as ta
from pandas import DataFrame
import pandas as pd
import numpy as np
import pdb
import freqtrade.vendor.qtpylib.indicators as qtpylib
from freqtrade.strategy.interface import IStrategy
pd.set_option("display.precision", 8)


class renko_strategy(IStrategy):

    minimal_roi = {
        "0": 100
    }
    stoploss = -100
    order_types = {
        'buy': 'limit',
        'sell': 'limit',
        'stoploss': 'limit',
        'stoploss_on_exchange': False
    }
    order_time_in_force = {
        'buy': 'gtc',
        'sell': 'gtc',
    }

    ticker_interval = '15m'

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        dataframe['atr'] = ta.ATR(dataframe)
        brick_size = np.mean(dataframe['atr'])
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr']
        df = dataframe[columns]
        cdf = pd.DataFrame(
            columns=columns,
            data=[],
        )
        cdf.loc[0] = df.loc[0]
        close = df.loc[0]['close']
        volume = df.loc[0]['volume']
        cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
        cdf['uptrend'] = True
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr', 'uptrend']
        for index, row in df.iterrows():
            #if not np.isnan(row['atr']): brick_size = row['atr']
            close = row['close']
            date = row['date']
            volume = row['volume']
            row_p1 = cdf.iloc[-1]
            uptrend = row_p1['uptrend']
            close_p1 = row_p1['close']
            bricks = int((close - close_p1) / brick_size)
            data = []
            if uptrend and bricks >= 1:
                for i in range(bricks):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 += brick_size
            elif uptrend and bricks <= -2:
                uptrend = not uptrend
                bricks += 1
                close_p1 -= brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not uptrend and bricks <= -1:
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not uptrend and bricks >= 2:
                uptrend = not uptrend
                bricks -= 1
                close_p1 += brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 += brick_size
            else:
                continue

            sdf = pd.DataFrame(data=data, columns=columns)
            cdf = pd.concat([cdf, sdf])

        renko_df = cdf.reset_index()
        renko_df['uptrend-previous'] = renko_df.uptrend.shift(1)
        macd = ta.MACD(renko_df)
        renko_df['macd'] = macd['macd']
        renko_df['macdsignal'] = macd['macdsignal']
        renko_df['macdhist'] = macd['macdhist']

        return renko_df

    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        for index, row in dataframe.iterrows():
            if row['uptrend-previous'] == False and row['uptrend'] == True:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                dataframe.loc[dataframe.index== last_row.index.values[0], 'buy'] = 1

        return dataframe

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        for index, row in dataframe.iterrows():
            if row['uptrend-previous'] == True and row['uptrend'] == False:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                dataframe.loc[dataframe.index== last_row.index.values[0], 'sell'] = 1

        return dataframe


PLOT RENKO
============
import json
import logging
import sys
from argparse import Namespace
from pathlib import Path
from typing import Dict, List, Any
import pdb
import pandas as pd
import plotly.graph_objs as go
import pytz

from plotly import tools
from plotly.offline import plot
from plotly.tools import FigureFactory as FF

from freqtrade import persistence
from freqtrade.arguments import Arguments, TimeRange
from freqtrade.data import history
from freqtrade.exchange import Exchange
from freqtrade.optimize.backtesting import setup_configuration
from freqtrade.persistence import Trade
from freqtrade.resolvers import StrategyResolver


logger = logging.getLogger(__name__)
_CONF: Dict[str, Any] = {}

timeZone = pytz.UTC


def load_trades(args: Namespace, pair: str, timerange: TimeRange) -> pd.DataFrame:
    trades: pd.DataFrame = pd.DataFrame()
    if args.db_url:
        persistence.init(_CONF)
        columns = ["pair", "profit", "opents", "closets", "open_rate", "close_rate", "duration"]

        for x in Trade.query.all():
            print("date: {}".format(x.open_date))

        trades = pd.DataFrame([(t.pair, t.calc_profit(),
                                t.open_date.replace(tzinfo=timeZone),
                                t.close_date.replace(tzinfo=timeZone) if t.close_date else None,
                                t.open_rate, t.close_rate,
                                t.close_date.timestamp() - t.open_date.timestamp()
                                if t.close_date else None)
                               for t in Trade.query.filter(Trade.pair.is_(pair)).all()],
                              columns=columns)

    elif args.exportfilename:
        file = Path(args.exportfilename)
        # must align with columns in backtest.py
        columns = ["pair", "profit", "opents", "closets", "index", "duration",
                   "open_rate", "close_rate", "open_at_end", "sell_reason"]
        if file.exists():
            with file.open() as f:
                data = json.load(f)
                trades = pd.DataFrame(data, columns=columns)
            trades = trades.loc[trades["pair"] == pair]
            if timerange:
                if timerange.starttype == 'date':
                    trades = trades.loc[trades["opents"] >= timerange.startts]
                if timerange.stoptype == 'date':
                    trades = trades.loc[trades["opents"] <= timerange.stopts]

            trades['opents'] = pd.to_datetime(
                                            trades['opents'],
                                            unit='s',
                                            utc=True,
                                            infer_datetime_format=True)
            trades['closets'] = pd.to_datetime(
                                            trades['closets'],
                                            unit='s',
                                            utc=True,
                                            infer_datetime_format=True)
        else:
            trades = pd.DataFrame([], columns=columns)

    return trades


def generate_plot_file(fig, pair, tick_interval, is_last) -> None:
    """
    Generate a plot html file from pre populated fig plotly object
    :return: None
    """
    logger.info('Generate plot file for %s', pair)

    pair_name = pair.replace("/", "_")
    file_name = 'freqtrade-plot-' + pair_name + '-' + tick_interval + '.html'

    Path("user_data/plots").mkdir(parents=True, exist_ok=True)

    plot(fig, filename=str(Path('user_data/plots').joinpath(file_name)), auto_open=False)
    if is_last:
        plot(fig, filename=str(Path('user_data').joinpath('freqtrade-plot.html')), auto_open=False)


def get_trading_env(args: Namespace):
    """
    Initalize freqtrade Exchange and Strategy, split pairs recieved in parameter
    :return: Strategy
    """
    global _CONF

    # Load the configuration
    _CONF.update(setup_configuration(args))
    print(_CONF)

    pairs = args.pairs.split(',')
    if pairs is None:
        logger.critical('Parameter --pairs mandatory;. E.g --pairs ETH/BTC,XRP/BTC')
        exit()

    # Load the strategy
    try:
        strategy = StrategyResolver(_CONF).strategy
        exchange = Exchange(_CONF)
    except AttributeError:
        logger.critical(
            'Impossible to load the strategy. Please check the file "user_data/strategies/%s.py"',
            args.strategy
        )
        exit()

    return [strategy, exchange, pairs]


def get_tickers_data(strategy, exchange, pairs: List[str], args):
    """
    Get tickers data for each pairs on live or local, option defined in args
    :return: dictinnary of tickers. output format: {'pair': tickersdata}
    """

    tick_interval = strategy.ticker_interval
    timerange = Arguments.parse_timerange(args.timerange)

    tickers = {}
    if args.live:
        logger.info('Downloading pairs.')
        exchange.refresh_latest_ohlcv([(pair, tick_interval) for pair in pairs])
        for pair in pairs:
            tickers[pair] = exchange.klines((pair, tick_interval))
    else:
        tickers = history.load_data(
            datadir=Path(_CONF.get("datadir")),
            pairs=pairs,
            ticker_interval=tick_interval,
            refresh_pairs=_CONF.get('refresh_pairs', False),
            timerange=timerange,
            exchange=Exchange(_CONF)
        )

    # No ticker found, impossible to download, len mismatch
    for pair, data in tickers.copy().items():
        logger.debug("checking tickers data of pair: %s", pair)
        logger.debug("data.empty: %s", data.empty)
        logger.debug("len(data): %s", len(data))
        if data.empty:
            del tickers[pair]
            logger.info(
                'An issue occured while retreiving datas of %s pair, please retry '
                'using -l option for live or --refresh-pairs-cached', pair)
    return tickers


def generate_dataframe(strategy, tickers, pair) -> pd.DataFrame:
    """
    Get tickers then Populate strategy indicators and signals, then return the full dataframe
    :return: the DataFrame of a pair
    """

    dataframes = strategy.tickerdata_to_dataframe(tickers)
    dataframe = dataframes[pair]
    dataframe = strategy.advise_buy(dataframe, {'pair': pair})
    dataframe = strategy.advise_sell(dataframe, {'pair': pair})

    return dataframe


def extract_trades_of_period(dataframe, trades) -> pd.DataFrame:
    """
    Compare trades and backtested pair DataFrames to get trades performed on backtested period
    :return: the DataFrame of a trades of period
    """
    trades = trades.loc[trades['opents'] >= dataframe.iloc[0]['date']]
    return trades


def generate_graph(
                    pair: str,
                    trades: pd.DataFrame,
                    data: pd.DataFrame,
                    indicators1: str,
                    indicators2: str
                ) -> tools.make_subplots:

    #Define the graph
    fig = tools.make_subplots(
        rows=3,
        cols=1,
        shared_xaxes=True,
        row_width=[1, 1, 4],
        vertical_spacing=0.0001,
    )
    fig['layout'].update(title=pair)
    fig['layout']['yaxis1'].update(title='Price')
    fig['layout']['yaxis2'].update(title='Volume')
    fig['layout']['yaxis3'].update(title='Other')
    fig['layout']['xaxis']['rangeslider'].update(visible=False)
    fig['layout']['xaxis'].update(ticktext=data.date, tickvals=[i for i in range(len(data.index))])
    fig['layout']['xaxis'].update(showticklabels=False, showspikes=True, spikemode="toaxis+across")

    # Common information
    candles = go.Candlestick(
        x=data.index,
        open=data.open,
        high=data.high,
        low=data.low,
        close=data.close,
        name='Price'
    )

    df_buy = data[data['buy'] == 1]
    buys = go.Scattergl(
        x=df_buy.index,
        y=df_buy.close,
        mode='markers',
        name='buy',
        marker=dict(
            symbol='triangle-up-dot',
            size=9,
            line=dict(width=1),
            color='green',
        )
    )
    df_sell = data[data['sell'] == 1]
    sells = go.Scattergl(
        x=df_sell.index,
        y=df_sell.close,
        mode='markers',
        name='sell',
        marker=dict(
            symbol='triangle-down-dot',
            size=9,
            line=dict(width=1),
            color='red',
        )
    )

    trade_buys = go.Scattergl(
        x=trades["opents"],
        y=trades["open_rate"],
        mode='markers',
        name='trade_buy',
        marker=dict(
            symbol='square-open',
            size=11,
            line=dict(width=2),
            color='green'
        )
    )
    trade_sells = go.Scattergl(
        x=trades["closets"],
        y=trades["close_rate"],
        mode='markers',
        name='trade_sell',
        marker=dict(
            symbol='square-open',
            size=11,
            line=dict(width=2),
            color='red'
        )
    )

    # Row 1
    fig.append_trace(candles, 1, 1)

    fig = generate_row(fig=fig, row=1, raw_indicators=indicators1, data=data)
    fig.append_trace(buys, 1, 1)
    fig.append_trace(sells, 1, 1)
    fig.append_trace(trade_buys, 1, 1)
    fig.append_trace(trade_sells, 1, 1)

    #Row 2
    volume = go.Bar(
        x=data.index,
        y=data['volume'],
        name='Volume'
    )
    fig.append_trace(volume, 2, 1)

    # Row 3
    fig = generate_row(fig=fig, row=3, raw_indicators=indicators2, data=data)

    return fig


def generate_row(fig, row, raw_indicators, data) -> tools.make_subplots:
    """
    Generator all the indicator selected by the user for a specific row
    """
    for indicator in raw_indicators.split(','):
        if indicator in data:
            scattergl = go.Scattergl(
                x=data.index,
                y=data[indicator],
                name=indicator
            )
            fig.append_trace(scattergl, row, 1)
        else:
            logger.info(
                'Indicator "%s" ignored. Reason: This indicator is not found '
                'in your strategy.',
                indicator
            )

    return fig


def plot_parse_args(args: List[str]) -> Namespace:
    """
    Parse args passed to the script
    :param args: Cli arguments
    :return: args: Array with all arguments
    """
    arguments = Arguments(args, 'Graph dataframe')
    arguments.scripts_options()
    arguments.parser.add_argument(
        '--indicators1',
        help='Set indicators from your strategy you want in the first row of the graph. Separate '
             'them with a coma. E.g: ema3,ema5 (default: %(default)s)',
        type=str,
        default='sma,ema3,ema5',
        dest='indicators1',
    )

    arguments.parser.add_argument(
        '--indicators2',
        help='Set indicators from your strategy you want in the third row of the graph. Separate '
             'them with a coma. E.g: fastd,fastk (default: %(default)s)',
        type=str,
        default='macd,macdsignal',
        dest='indicators2',
    )
    arguments.parser.add_argument(
        '--plot-limit',
        help='Specify tick limit for plotting - too high values cause huge files - '
             'Default: %(default)s',
        dest='plot_limit',
        default=750,
        type=int,
    )
    arguments.common_args_parser()
    arguments.optimizer_shared_options(arguments.parser)
    arguments.backtesting_options(arguments.parser)
    return arguments.parse_args()


def analyse_and_plot_pairs(args: Namespace):
    """
    From arguments provided in cli:
    -Initialise backtest env
    -Get tickers data
    -Generate Dafaframes populated with indicators and signals
    -Load trades excecuted on same periods
    -Generate Plotly plot objects
    -Generate plot files
    :return: None
    """
    strategy, exchange, pairs = get_trading_env(args)
    # Set timerange to use
    timerange = Arguments.parse_timerange(args.timerange)
    tick_interval = strategy.ticker_interval

    tickers = get_tickers_data(strategy, exchange, pairs, args)
    pair_counter = 0
    for pair, data in tickers.items():
        pair_counter += 1
        logger.info("analyse pair %s", pair)
        tickers = {}
        tickers[pair] = data
        dataframe = generate_dataframe(strategy, tickers, pair)

        trades = load_trades(args, pair, timerange)
        trades = extract_trades_of_period(dataframe, trades)

        fig = generate_graph(
            pair=pair,
            trades=trades,
            data=dataframe,
            indicators1=args.indicators1,
            indicators2=args.indicators2
        )

        is_last = (False, True)[pair_counter == len(tickers)]
        generate_plot_file(fig, pair, tick_interval, is_last)

    logger.info('End of ploting process %s plots generated', pair_counter)


def main(sysargv: List[str]) -> None:
    """
    This function will initiate the bot and start the trading loop.
    :return: None
    """
    logger.info('Starting Plot Dataframe')
    analyse_and_plot_pairs(
        plot_parse_args(sysargv)
    )
    exit()



RAY
========
if __name__ == '__main__':
    main(sys.argv[1:])

train single ray train.py
-------------------------
#!/usr/bin/env python

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
import yaml
import ray
from ray.tune import run_experiments, grid_search
from ray.tune.registry import register_env
from environment import Environment
import ray
from ray.tests.cluster_utils import Cluster
from ray.tune.config_parser import make_parser
from ray.tune.trial import resources_to_json
from ray.tune.tune import _make_scheduler, run_experiments

EXAMPLE_USAGE = """
Training example via RLlib CLI:
    rllib train --run DQN --env CartPole-v0

Grid search example via RLlib CLI:
    rllib train -f tuned_examples/cartpole-grid-search-example.yaml

Grid search example via executable:
    ./train.py -f tuned_examples/cartpole-grid-search-example.yaml

Note that -f overrides all other trial-specific command-line options.
"""


def create_parser(parser_creator=None):
    parser = make_parser(
        parser_creator=parser_creator,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="Train a reinforcement learning agent.",
        epilog=EXAMPLE_USAGE)

    # See also the base parser definition in ray/tune/config_parser.py
    parser.add_argument(
        "--redis-address",
        default=None,
        type=str,
        help="Connect to an existing Ray cluster at this address instead "
        "of starting a new one.")
    parser.add_argument(
        "--ray-num-cpus",
        default=None,
        type=int,
        help="--num-cpus to use if starting a new cluster.")
    parser.add_argument(
        "--ray-num-gpus",
        default=None,
        type=int,
        help="--num-gpus to use if starting a new cluster.")
    parser.add_argument(
        "--ray-num-nodes",
        default=None,
        type=int,
        help="Emulate multiple cluster nodes for debugging.")
    parser.add_argument(
        "--ray-redis-max-memory",
        default=None,
        type=int,
        help="--redis-max-memory to use if starting a new cluster.")
    parser.add_argument(
        "--ray-object-store-memory",
        default=None,
        type=int,
        help="--object-store-memory to use if starting a new cluster.")
    parser.add_argument(
        "--experiment-name",
        default="default",
        type=str,
        help="Name of the subdirectory under `local_dir` to put results in.")
    parser.add_argument(
        "--resume",
        action="store_true",
        help="Whether to attempt to resume previous Tune experiments.")
    parser.add_argument(
        "--env", default=None, type=str, help="The gym environment to use.")
    parser.add_argument(
        "--queue-trials",
        action="store_true",
        help=(
            "Whether to queue trials when the cluster does not currently have "
            "enough resources to launch one. This should be set to True when "
            "running on an autoscaling cluster to enable automatic scale-up."))
    parser.add_argument(
        "-f",
        "--config-file",
        default= base_path+ "yaml/rainbow.yaml",#"/Users/apple/Desktop/dev/projectlife/rainbow.yaml",
        type=str,
        help="If specified, use config options from this file. Note that this "
        "overrides any trial-specific options set via flags above.")
    return parser


def run(args, parser):
    if args.config_file:
        with open(args.config_file) as f:
            experiments = yaml.load(f)
    else:
        # Note: keep this in sync with tune/config_parser.py
        experiments = {
            args.experiment_name: {  # i.e. log to ~/ray_results/default
                "run": args.run,
                "checkpoint_freq": args.checkpoint_freq,
                "keep_checkpoints_num": args.keep_checkpoints_num,
                "checkpoint_score_attr": args.checkpoint_score_attr,
                "local_dir": args.local_dir,
                "resources_per_trial": (
                    args.resources_per_trial and
                    resources_to_json(args.resources_per_trial)),
                "stop": args.stop,
                "config": dict(args.config, env=args.env),
                "restore": args.restore,
                "num_samples": args.num_samples,
                "upload_dir": args.upload_dir,
            }
        }

    for exp in experiments.values():
        if not exp.get("run"):
            parser.error("the following arguments are required: --run")
        if not exp.get("env") and not exp.get("config", {}).get("env"):
            parser.error("the following arguments are required: --env")

    if args.ray_num_nodes:
        cluster = Cluster()
        for _ in range(args.ray_num_nodes):
            cluster.add_node(
                num_cpus=args.ray_num_cpus or 1,
                num_gpus=args.ray_num_gpus or 0,
                object_store_memory=args.ray_object_store_memory,
                redis_max_memory=args.ray_redis_max_memory)
        ray.init(redis_address=cluster.redis_address)
    else:
        ray.init(
            redis_address=args.redis_address,
            object_store_memory=args.ray_object_store_memory,
            redis_max_memory=args.ray_redis_max_memory,
            num_cpus=args.ray_num_cpus,
            num_gpus=args.ray_num_gpus)
    run_experiments(
        experiments,
        scheduler=_make_scheduler(args),
        queue_trials=args.queue_trials,
        resume=args.resume)


if __name__ == "__main__":
    pair = "IOTABTC"
    interval ="15m"
    algo = "RAINBOW"
    features = ["close","sma20"]
    ENV_NAME = "Projectlife-v1"
    register_env(ENV_NAME, lambda config: Environment(mode="train", pair=pair, interval=interval, algo=algo, data_features=features))
    parser = create_parser()
    args = parser.parse_args()
    run(args, parser)

rainbow:
    env: Projectlife-v1
    run: DQN
    stop:
        episode_reward_mean: 20
    config:
        num_atoms: 51
        noisy: True
        gamma: 0.99
        lr: .0001
        hiddens: [512]
        learning_starts: 10000
        buffer_size: 50000
        sample_batch_size: 4
        train_batch_size: 32
        schedule_max_timesteps: 2000000
        exploration_final_eps: 0.0
        exploration_fraction: .000001
        target_network_update_freq: 500
        prioritized_replay: True
        prioritized_replay_alpha: 0.5
        beta_annealing_fraction: 0.2
        final_prioritized_replay_beta: 1.0
        n_step: 3
        num_gpus: 0
        model:
          grayscale: True
          zero_mean: False
          dim: 42








volume = np.asarray(df['volumefrom'], dtype='float') #np.array(df['volumefrom'])

#!/usr/bin/env python

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
import collections
import json
import os
import pickle

import gym
import ray
from ray.rllib.agents.registry import get_agent_class
from ray.rllib.env import MultiAgentEnv
from ray.rllib.env.base_env import _DUMMY_AGENT_ID
from ray.rllib.evaluation.sample_batch import DEFAULT_POLICY_ID
from ray.tune.util import merge_dicts
from ray.tune.registry import register_env
from environment import Environment

EXAMPLE_USAGE = """
Example Usage via RLlib CLI:
    rllib rollout /tmp/ray/checkpoint_dir/checkpoint-0 --run DQN
    --env CartPole-v0 --steps 1000000 --out rollouts.pkl

Example Usage via executable:
    ./rollout.py /tmp/ray/checkpoint_dir/checkpoint-0 --run DQN
    --env CartPole-v0 --steps 1000000 --out rollouts.pkl
"""

# Note: if you use any custom models or envs, register them here first, e.g.:
#
# ModelCatalog.register_custom_model("pa_model", ParametricActionsModel)
# register_env("pa_cartpole", lambda _: ParametricActionCartpole(10))


def create_parser(parser_creator=None):
    parser_creator = parser_creator or argparse.ArgumentParser
    parser = parser_creator(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="Roll out a reinforcement learning agent "
        "given a checkpoint.",
        epilog=EXAMPLE_USAGE)

    parser.add_argument(
        "checkpoint", type=str, help="Checkpoint from which to roll out.")
    required_named = parser.add_argument_group("required named arguments")
    required_named.add_argument(
        "--run",
        type=str,
        required=True,
        help="The algorithm or model to train. This may refer to the name "
        "of a built-on algorithm (e.g. RLLib's DQN or PPO), or a "
        "user-defined trainable function or class registered in the "
        "tune registry.")
    required_named.add_argument(
        "--env", type=str, help="The gym environment to use.")
    parser.add_argument(
        "--no-render",
        default=False,
        action="store_const",
        const=True,
        help="Surpress rendering of the environment.")
    parser.add_argument(
        "--steps", default=10000, help="Number of steps to roll out.")
    parser.add_argument("--out", default=None, help="Output filename.")
    parser.add_argument(
        "--config",
        default="{}",
        type=json.loads,
        help="Algorithm-specific configuration (e.g. env, hyperparams). "
        "Surpresses loading of configuration from checkpoint.")
    return parser


def run(args, parser):
    config = {}
    # Load configuration from file
    config_dir = os.path.dirname(args.checkpoint)
    config_path = os.path.join(config_dir, "params.pkl")
    if not os.path.exists(config_path):
        config_path = os.path.join(config_dir, "../params.pkl")
    if not os.path.exists(config_path):
        if not args.config:
            raise ValueError(
                "Could not find params.pkl in either the checkpoint dir or "
                "its parent directory.")
    else:
        with open(config_path, "rb") as f:
            config = pickle.load(f)
    if "num_workers" in config:
        config["num_workers"] = min(2, config["num_workers"])
    config = merge_dicts(config, args.config)
    if not args.env:
        if not config.get("env"):
            parser.error("the following arguments are required: --env")
        args.env = config.get("env")

    ray.init()

    cls = get_agent_class(args.run)
    agent = cls(env=args.env, config=config)
    agent.restore(args.checkpoint)
    num_steps = int(args.steps)
    rollout(agent, args.env, num_steps, args.out, args.no_render)


class DefaultMapping(collections.defaultdict):
    """default_factory now takes as an argument the missing key."""

    def __missing__(self, key):
        self[key] = value = self.default_factory(key)
        return value


def default_policy_agent_mapping(unused_agent_id):
    return DEFAULT_POLICY_ID


def rollout(agent, env_name, num_steps, out=None, no_render=True):
    policy_agent_mapping = default_policy_agent_mapping

    if hasattr(agent, "local_evaluator"):
        env = agent.local_evaluator.env
        multiagent = isinstance(env, MultiAgentEnv)
        if agent.local_evaluator.multiagent:
            policy_agent_mapping = agent.config["multiagent"][
                "policy_mapping_fn"]

        policy_map = agent.local_evaluator.policy_map
        state_init = {p: m.get_initial_state() for p, m in policy_map.items()}
        use_lstm = {p: len(s) > 0 for p, s in state_init.items()}
        action_init = {
            p: m.action_space.sample()
            for p, m in policy_map.items()
        }
    else:
        env = gym.make(env_name)
        multiagent = False
        use_lstm = {DEFAULT_POLICY_ID: False}

    if out is not None:
        rollouts = []
    steps = 0
    while steps < (num_steps or steps + 1):
        mapping_cache = {}  # in case policy_agent_mapping is stochastic
        if out is not None:
            rollout = []
        obs = env.reset()
        agent_states = DefaultMapping(
            lambda agent_id: state_init[mapping_cache[agent_id]])
        prev_actions = DefaultMapping(
            lambda agent_id: action_init[mapping_cache[agent_id]])
        prev_rewards = collections.defaultdict(lambda: 0.)
        done = False
        reward_total = 0.0
        while not done and steps < (num_steps or steps + 1):
            multi_obs = obs if multiagent else {_DUMMY_AGENT_ID: obs}
            action_dict = {}
            for agent_id, a_obs in multi_obs.items():
                if a_obs is not None:
                    policy_id = mapping_cache.setdefault(
                        agent_id, policy_agent_mapping(agent_id))
                    p_use_lstm = use_lstm[policy_id]
                    if p_use_lstm:
                        a_action, p_state, _ = agent.compute_action(
                            a_obs,
                            state=agent_states[agent_id],
                            prev_action=prev_actions[agent_id],
                            prev_reward=prev_rewards[agent_id],
                            policy_id=policy_id)
                        agent_states[agent_id] = p_state
                    else:
                        a_action = agent.compute_action(
                            a_obs,
                            prev_action=prev_actions[agent_id],
                            prev_reward=prev_rewards[agent_id],
                            policy_id=policy_id)
                    action_dict[agent_id] = a_action
                    prev_actions[agent_id] = a_action
            action = action_dict

            action = action if multiagent else action[_DUMMY_AGENT_ID]
            next_obs, reward, done, _ = env.step(action)
            if multiagent:
                for agent_id, r in reward.items():
                    prev_rewards[agent_id] = r
            else:
                prev_rewards[_DUMMY_AGENT_ID] = reward

            if multiagent:
                done = done["__all__"]
                reward_total += sum(reward.values())
            else:
                reward_total += reward
            if not no_render:
                env.render()
            if out is not None:
                rollout.append([obs, action, next_obs, reward, done])
            steps += 1
            obs = next_obs
        if out is not None:
            rollouts.append(rollout)
        print("Episode reward", reward_total)

    if out is not None:
        pickle.dump(rollouts, open(out, "wb"))


if __name__ == "__main__":
    pair = "DLTBTC"
    algo = "DQN"
    ENV_NAME = "Projectlife-v0"
    register_env(ENV_NAME, lambda config: Environment(mode="validate", pair=pair, algo=algo,input_dim="2d"))
    parser = create_parser()
    args = parser.parse_args()
    run(args, parser)


#######################################################################################################################################






#!/usr/bin/env python

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
import yaml
import pdb
import ray
from ray.tests.cluster_utils import Cluster
from ray.tune.config_parser import make_parser
from ray.tune.trial import resources_to_json
from ray.tune.tune import _make_scheduler, run_experiments
from ray.tune import run_experiments, grid_search
from ray.tune.registry import register_env
from environment import Environment

EXAMPLE_USAGE = """
Training example via RLlib CLI:
    rllib train --run DQN --env CartPole-v0

Grid search example via RLlib CLI:
    rllib train -f tuned_examples/cartpole-grid-search-example.yaml

Grid search example via executable:
    ./train.py -f tuned_examples/cartpole-grid-search-example.yaml

Note that -f overrides all other trial-specific command-line options.
"""

def create_parser(parser_creator=None):
    parser = make_parser(
        parser_creator=parser_creator,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="Train a reinforcement learning agent.",
        epilog=EXAMPLE_USAGE)

    # See also the base parser definition in ray/tune/config_parser.py
    parser.add_argument(
        "--redis-address",
        default=None,
        type=str,
        help="Connect to an existing Ray cluster at this address instead "
        "of starting a new one.")
    parser.add_argument(
        "--ray-num-cpus",
        default=None,
        type=int,
        help="--num-cpus to use if starting a new cluster.")
    parser.add_argument(
        "--ray-num-gpus",
        default=None,
        type=int,
        help="--num-gpus to use if starting a new cluster.")
    parser.add_argument(
        "--ray-num-nodes",
        default=None,
        type=int,
        help="Emulate multiple cluster nodes for debugging.")
    parser.add_argument(
        "--ray-redis-max-memory",
        default=None,
        type=int,
        help="--redis-max-memory to use if starting a new cluster.")
    parser.add_argument(
        "--ray-object-store-memory",
        default=None,
        type=int,
        help="--object-store-memory to use if starting a new cluster.")
    parser.add_argument(
        "--experiment-name",
        default="default",
        type=str,
        help="Name of the subdirectory under `local_dir` to put results in.")
    parser.add_argument(
        "--resume",
        action="store_true",
        help="Whether to attempt to resume previous Tune experiments.")
    parser.add_argument(
        "--env", default=None, type=str, help="The gym environment to use.")
    parser.add_argument(
        "--queue-trials",
        action="store_true",
        help=(
            "Whether to queue trials when the cluster does not currently have "
            "enough resources to launch one. This should be set to True when "
            "running on an autoscaling cluster to enable automatic scale-up."))
    parser.add_argument(
        "-f",
        "--config-file",
        default=None,
        type=str,
        help="If specified, use config options from this file. Note that this "
        "overrides any trial-specific options set via flags above.")
    return parser


def run(args, parser):
    if args.config_file:
        with open(args.config_file) as f:
            experiments = yaml.load(f)
    else:
        # Note: keep this in sync with tune/config_parser.py
        experiments = {
            args.experiment_name: {  # i.e. log to ~/ray_results/default
                "run": args.run,
                "checkpoint_freq": args.checkpoint_freq,
                "keep_checkpoints_num": args.keep_checkpoints_num,
                "checkpoint_score_attr": args.checkpoint_score_attr,
                "local_dir": args.local_dir,
                "resources_per_trial": (
                    args.resources_per_trial and
                    resources_to_json(args.resources_per_trial)),
                "stop": args.stop,
                "config": dict(args.config, env=args.env),
                "restore": args.restore,
                "num_samples": args.num_samples,
                "upload_dir": args.upload_dir,
            }
        }

    for exp in experiments.values():
        if not exp.get("run"):
            parser.error("the following arguments are required: --run")
        if not exp.get("env") and not exp.get("config", {}).get("env"):
            parser.error("the following arguments are required: --env")

    if args.ray_num_nodes:
        cluster = Cluster()
        for _ in range(args.ray_num_nodes):
            cluster.add_node(
                num_cpus=args.ray_num_cpus or 1,
                num_gpus=args.ray_num_gpus or 0,
                object_store_memory=args.ray_object_store_memory,
                redis_max_memory=args.ray_redis_max_memory)
        ray.init(redis_address=cluster.redis_address)
    else:
        ray.init(
            redis_address=args.redis_address,
            object_store_memory=args.ray_object_store_memory,
            redis_max_memory=args.ray_redis_max_memory,
            num_cpus=args.ray_num_cpus,
            num_gpus=args.ray_num_gpus)
    run_experiments(
        experiments,
        scheduler=_make_scheduler(args),
        queue_trials=args.queue_trials,
        resume=args.resume)


if __name__ == "__main__":
    pair = "DLTBTC"
    algo = "DDPG"
    env_name = "TradeDdpg-v0" #algo+"-Env"
    register_env(env_name,lambda config: Environment(mode="train", pair=pair, algo=algo,input_dim="2d"))
    parser = create_parser()
    args = parser.parse_args()
    run(args, parser)




==================
evaluate.py

import numpy as np
from keras.models import Sequential, load_model
from keras.layers import Dense, Activation, Flatten, LSTM, CuDNNLSTM
from keras.optimizers import Adam
from rl.agents.dqn import DQNAgent
from rl.policy import BoltzmannQPolicy, EpsGreedyQPolicy
from rl.memory import SequentialMemory
import pdb
from TradingEnv import TradingEnv
from util import NormalizerProcessor
import matplotlib.pyplot as plt
base_path = "/Users/apple/Desktop/dev/Trading"
model_name = "duel_dqn_Trading-v0_weights_94_27_-0.057929847917748134_ADABTC.h5"
db_name=projectlife
db_uri=127.0.0.1:27017

def main():
    ENV_NAME = 'Trading-v0'
    TIME_STEP = 30
    env_trade = TradingEnv(TIME_STEP,path=None,live=True, pair=pair)
    nb_actions = env_trade.action_space.n
    policy = EpsGreedyQPolicy()
    memory = SequentialMemory(limit=50000, window_length=TIME_STEP)
    model = Sequential()
    model.add(LSTM(64, input_shape=env_trade.shape, return_sequences=True))
    model.add(LSTM(64))
    model.add(Dense(32))
    model.add(Activation('relu'))
    model.add(Dense(nb_actions, activation='linear'))
    agent = DQNAgent(model, processor=NormalizerProcessor(),  target_model_update=1e-2,policy=policy, nb_actions=nb_actions, test_policy=None, enable_double_dqn=True, enable_dueling_network=True, memory=memory,dueling_type='avg')
    agent.compile(Adam(lr=1e-3), metrics=['mae'])
    agent.load_weights(base_path+"model/" + model_name)

    #dqnAgent.model.predict()
    #https://www.datacamp.com/community/tutorials/lstm-python-stock-market
    #https://medium.com/infosimples/predicting-stock-prices-with-lstm-349f5a0974d4
    #pdb.set_trace()
    info = agent.test(env_backtest, nb_episodes=1, visualize=True)
    visualize_backtest(info)

def visualize_backtest(info):
    closes = [data[2] for data in info['history']]
    closes_index = [data[1] for data in info['history']]
    buy_tick = np.array([data[1] for data in info['history'] if data[0] == 0])
    buy_price = np.array([data[2] for data in info['history'] if data[0] == 0])
    sell_tick = np.array([data[1] for data in info['history'] if data[0] == 1])
    sell_price = np.array([data[2] for data in info['history'] if data[0] == 1])
    plt.plot(closes_index, closes)
    plt.scatter(buy_tick, buy_price, c='g', marker="^", s=20)
    plt.scatter(sell_tick, sell_price , c='r', marker="v", s=20)
    plt.show(block=True)


if __name__ == '__main__':
    main()





ct store.
2019-04-28 22:08:45,746 ERROR worker.py:1609 -- Possible unhandled error from worker: ray_worker (pid=61305, host=canermac-3.local)
  File "/Users/apple/miniconda3/envs/projectlife/lib/python3.6/site-packages/ray/utils.py", line 475, in _wrapper
    return orig_attr(*args, **kwargs)
  File "pyarrow/_plasma.pyx", line 497, in pyarrow._plasma.PlasmaClient.put
  File "pyarrow/_plasma.pyx", line 327, in pyarrow._plasma.PlasmaClient.create
  File "pyarrow/error.pxi", line 99, in pyarrow.lib.check_status
pyarrow.lib.PlasmaStoreFull: object does not fit in the plasma store


draichi
-------
#
# cd python3 config/functions.py
# python train_trading_bot.py
#python3 rollout.py /Users/apple/ray_results/trading_DLTBTC/PPO_TradingEnv-v1_0_lr=1e-05_2019-04-28_12-58-01ypb9tjy2/checkpoint_200 --run PPO --symbol DLTBTC

======================

"""Script to train an agent to operate into the market according to the pair

Example:
    python train_single_pair.py \
        --algo PPO \
        --symbol XRP \
        --to_symbol USDT \
        --histo day \
        --limit 180

Lucas Draichi 2019
"""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import numpy as np
import pandas as pd
import gym
import os
import ray
from gym.spaces import Discrete, Box
from sklearn.preprocessing import normalize
from configs.vars import *
from configs.functions import init_data, get_datasets
from trading_env import SimpleTradingEnv
from ray.tune import run_experiments, grid_search
from ray.tune.registry import register_env

if __name__ == "__main__":
    import argparse
<<<<<<< HEAD:train_trading_bot.py
    #parser = argparse.ArgumentParser(description='\n')
    #parser.add_argument('--symbol', type=str, help='Choose coin to train')
    #parser.add_argument('--algo', type=str, help='Choose algorithm to train')
    #FLAGS = parser.parse_args()
    #keys, symbols = init_data(FLAGS.symbol, 'train')
    keys, symbols = init_data("DLTBTC", 'train')
=======
    parser = argparse.ArgumentParser(description='\n')
    parser.add_argument('--symbol', type=str, help='Choose coin to train')
    parser.add_argument('--to_symbol', type=str, help='Choose coin to train')
    parser.add_argument('--histo', type=str, help='Daily or hourly data')
    parser.add_argument('--limit', type=int, help='How many data points')
    parser.add_argument('--algo', type=str, help='Choose algorithm to train')
    FLAGS = parser.parse_args()
    _ = get_datasets(FLAGS.symbol, FLAGS.to_symbol, FLAGS.histo, FLAGS.limit)
    keys, symbols = init_data(FLAGS.symbol + FLAGS.to_symbol, 'train')
>>>>>>> 02388f654f70fbe391b63fad34711322f05b06fd:train_single_pair.py
    # Can also register the env creator function explicitly with:
    register_env("TradingEnv-v1", lambda config: SimpleTradingEnv(config))
    ray.init()
    run_experiments({
<<<<<<< HEAD:train_trading_bot.py
        "trading_DLTBTC": {
            "run": "PPO",
=======
        "tradingv2_{}".format(FLAGS.symbol + FLAGS.to_symbol): {
            "run": FLAGS.algo,
>>>>>>> 02388f654f70fbe391b63fad34711322f05b06fd:train_single_pair.py
            # "env": TradingEnv,  # or "corridor" if registered above
            "env": "TradingEnv-v1",  # or "corridor" if registered above
            "stop": {
                "timesteps_total": 1.2e6, #1e6 = 1M
            },
            "checkpoint_freq": 100,
            "checkpoint_at_end": True,
            "config": {
                "lr": grid_search([
                    1e-5,
                    3e-5,
                    6e-5
                ]),
                "num_workers": 3,  # parallelism
                'observation_filter': 'MeanStdFilter',
                "env_config": {
                    'keys': keys,
                    'symbols': symbols
                },
            }
        }
    })


===============

"""Functions used to preprocess the timeseries

Lucas Draichi
2019
"""

import datetime
import talib
import colorama
import requests
import pandas as pd
import numpy as np
import plotly.graph_objs as go
from termcolor import colored
<<<<<<< HEAD
import pdb
colorama.init()

def main():
    get_datasets("DLTBTC", "train", 1000)
=======
from configs.vars import WALLET_BTC, WALLET_SYMBOL

colorama.init()

def get_datasets(symbol, to_symbol, mode, limit):
    """Fetch the API and precess the desired pair

    Arguments:
        symbol {str} -- First pair
        to_symbol {str} -- Second pair
        mode {str ['day', 'hour']} -- Granularity
        limit {int [100 - 2000]} -- [description]

    Returns:
        pandas.Dataframe -- The OHLCV and indicators dataframe
    """
    headers = {'User-Agent': 'Mozilla/5.0', 'authorization': 'Apikey 3d7d3e9e6006669ac00584978342451c95c3c78421268ff7aeef69995f9a09ce'}

    # OHLC
    url = 'https://min-api.cryptocompare.com/data/histo{}?fsym={}&tsym={}&e=Binance&limit={}'.format(mode, symbol, to_symbol, limit)
    print(colored('> downloading ' + symbol + ' OHLCV', 'green'))
    response = requests.get(url, headers=headers)
    json_response = response.json()
    result = json_response['Data']
    df = pd.DataFrame(result)
    df['Date'] = pd.to_datetime(df['time'], utc=True, unit='s')
    df.drop('time', axis=1, inplace=True)
>>>>>>> 02388f654f70fbe391b63fad34711322f05b06fd

def get_datasets(symbol, mode, limit):
    # headers = {'User-Agent': 'Mozilla/5.0', 'authorization': 'Apikey 3d7d3e9e6006669ac00584978342451c95c3c78421268ff7aeef69995f9a09ce'}

    # # OHLC
    # url = 'https://min-api.cryptocompare.com/data/histo{}?fsym={}&tsym=BTC&e=Binance&limit={}'.format(mode, symbol, limit)
    # print(colored('> downloading ' + symbol + ' OHLCV', 'green'))
    # response = requests.get(url, headers=headers)
    # json_response = response.json()
    # result = json_response['Data']
    # df = pd.DataFrame(result)
    df = pd.read_csv("/Users/apple/Desktop/dev/projectlife/data/train/Binance_"+"DLTBTC"+".csv")
    df['Date'] = df['date']
    col_name =df.columns[5]
    df=df.rename(columns = {col_name:'volume'})
    df.drop('date', axis=1, inplace=True)

    # indicators
    # https://github.com/mrjbq7/ta-lib/blob/master/docs/func.md
    open_price, high, low, close = np.array(df['open']), np.array(df['high']), np.array(df['low']), np.array(df['close'])

    volume = np.asarray(df['volume'], dtype='float')  # np.array(df['vol'])
    # cycle indicators
    df.loc[:, 'HT_DCPERIOD'] = talib.HT_DCPERIOD(close)
    df.loc[:, 'HT_DCPHASE'] = talib.HT_DCPHASE(close)
    df.loc[:, 'HT_PHASOR_inphase'], df.loc[:, 'HT_PHASOR_quadrature'] = talib.HT_PHASOR(close)
    df.loc[:, 'HT_SINE_sine'], df.loc[:, 'HT_SINE_leadsine'] = talib.HT_SINE(close)
    df.loc[:, 'HT_TRENDMODE'] = talib.HT_TRENDMODE(close)
    # momemtum indicators
    df.loc[:, 'ADX'] = talib.ADX(high, low, close, timeperiod=14)
    df.loc[:, 'ADXR'] = talib.ADXR(high, low, close, timeperiod=14)
    df.loc[:, 'APO'] = talib.APO(close, fastperiod=12, slowperiod=26, matype=0)
    df.loc[:, 'AROON_down'], df.loc[:, 'AROON_up'] = talib.AROON(high, low, timeperiod=14)
    df.loc[:, 'AROONOSC'] = talib.AROONOSC(high, low, timeperiod=14)
    df.loc[:, 'BOP'] = talib.BOP(open_price, high, low, close)
    df.loc[:, 'CCI'] = talib.CCI(high, low, close, timeperiod=14)
    df.loc[:, 'CMO'] = talib.CMO(close, timeperiod=14)
    df.loc[:, 'DX'] = talib.DX(high, low, close, timeperiod=14)
    df['MACD'], df['MACD_signal'], df['MACD_hist'] = talib.MACD(close, fastperiod=12, slowperiod=26, signalperiod=9)
    df.loc[:, 'MFI'] = talib.MFI(high, low, close, volume, timeperiod=14)
    df.loc[:, 'MINUS_DI'] = talib.MINUS_DI(high, low, close, timeperiod=14)
    df.loc[:, 'MINUS_DM'] = talib.MINUS_DM(high, low, timeperiod=14)
    df.loc[:, 'MOM'] = talib.MOM(close, timeperiod=10)
    df.loc[:, 'PPO'] = talib.PPO(close, fastperiod=12, slowperiod=26, matype=0)
    df.loc[:, 'ROC'] = talib.ROC(close, timeperiod=10)
    df.loc[:, 'RSI'] = talib.RSI(close, timeperiod=14)
    df.loc[:, 'STOCH_k'], df.loc[:, 'STOCH_d'] = talib.STOCH(high, low, close, fastk_period=5, slowk_period=3, slowk_matype=0, slowd_period=3, slowd_matype=0)
    df.loc[:, 'STOCHF_k'], df.loc[:, 'STOCHF_d'] = talib.STOCHF(high, low, close, fastk_period=5, fastd_period=3, fastd_matype=0)
    df.loc[:, 'STOCHRSI_K'], df.loc[:, 'STOCHRSI_D'] = talib.STOCHRSI(close, timeperiod=30, fastk_period=14, fastd_period=10, fastd_matype=1)
    df.loc[:, 'TRIX'] = talib.TRIX(close, timeperiod=30)
    df.loc[:, 'ULTOSC'] = talib.ULTOSC(high, low, close, timeperiod1=7, timeperiod2=14, timeperiod3=28)
    df.loc[:, 'WILLR'] = talib.WILLR(high, low, close, timeperiod=14)
    # overlap studies
    df.loc[:, 'BBANDS_upper'], df.loc[:, 'BBANDS_middle'], df.loc[:, 'BBANDS_lower'] = talib.BBANDS(close, timeperiod=5, nbdevup=2, nbdevdn=2, matype=0)
    df.loc[:, 'DEMA'] = talib.DEMA(close, timeperiod=30)
    df.loc[:, 'EMA'] = talib.EMA(close, timeperiod=30)
    df.loc[:, 'HT_TRENDLINE'] = talib.HT_TRENDLINE(close)
    df.loc[:, 'KAMA'] = talib.KAMA(close, timeperiod=30)
    df.loc[:, 'MA'] = talib.MA(close, timeperiod=30, matype=0)
    df.loc[:, 'MIDPOINT'] = talib.MIDPOINT(close, timeperiod=14)
    df.loc[:, 'WMA'] = talib.WMA(close, timeperiod=30)
    df.loc[:, 'SMA'] = talib.SMA(close)
    # pattern recoginition
    df.loc[:, 'CDL2CROWS'] = talib.CDL2CROWS(open_price, high, low, close)
    df.loc[:, 'CDL3BLACKCROWS'] = talib.CDL3BLACKCROWS(open_price, high, low, close)
    df.loc[:, 'CDL3INSIDE'] = talib.CDL3INSIDE(open_price, high, low, close)
    df.loc[:, 'CDL3LINESTRIKE'] = talib.CDL3LINESTRIKE(open_price, high, low, close)
    # price transform
    df.loc[:, 'WCLPRICE'] = talib.WCLPRICE(high, low, close)
    # statistic funcitons
    df.loc[:, 'BETA'] = talib.BETA(high, low, timeperiod=5)
    df.loc[:, 'CORREL'] = talib.CORREL(high, low, timeperiod=30)
    df.loc[:, 'STDDEV'] = talib.STDDEV(close, timeperiod=5, nbdev=1)
    df.loc[:, 'TSF'] = talib.TSF(close, timeperiod=14)
    df.loc[:, 'VAR'] = talib.VAR(close, timeperiod=5, nbdev=1)
    # volatility indicators
    df.loc[:, 'ATR'] = talib.ATR(high, low, close, timeperiod=14)
    df.loc[:, 'NATR'] = talib.NATR(high, low, close, timeperiod=14)
    df.loc[:, 'TRANGE'] = talib.TRANGE(high, low, close)
    # volume indicators
    df.loc[:, 'AD'] = talib.AD(high, low, close, volume)
    df.loc[:, 'ADOSC'] = talib.ADOSC(high, low, close, volume, fastperiod=3, slowperiod=10)
    df.loc[:, 'OBV'] = talib.OBV(close, volume)
    # wallet indicator to trading bot
    # df.loc[:, 'wallet_{}'.format(symbol)] = 1.0
    df.loc[:, 'wallet_btc'] = WALLET_SYMBOL
    df.loc[:, 'wallet_symbol'] = WALLET_SYMBOL
    # df.loc[:, 'wallet_{}'.format(to_symbol)] = 0.0

    # df.fillna(df.mean(), inplace=True)
    df.dropna(inplace=True)
    df.set_index('Date', inplace=True)
    train_size = round(len(df) * 0.5) # 50% to train -> test with different value
    df_train = df[:train_size]
    df_rollout = df[train_size:]
<<<<<<< HEAD
    df_train.to_csv('/Users/apple/Desktop/dev/projectlife/algorithms/PPO/cryptocurrency_prediction/datasets/bot_train_{}.csv'.format(symbol))
    df_rollout.to_csv('/Users/apple/Desktop/dev/projectlife/algorithms/PPO/cryptocurrency_prediction/datasets/bot_rollout_{}.csv'.format(symbol))
=======
    df_train.to_csv('datasets/bot_train_{}.csv'.format(symbol + to_symbol))
    df_rollout.to_csv('datasets/bot_rollout_{}.csv'.format(symbol + to_symbol))
>>>>>>> 02388f654f70fbe391b63fad34711322f05b06fd

    return df

#------------------------------------------------------------->

<<<<<<< HEAD
def init_data(symbol, mode):
    df = pd.read_csv('/Users/apple/Desktop/dev/projectlife/algorithms/PPO/cryptocurrency_prediction/datasets/bot_{}_{}.csv'.format(mode, symbol))
=======
def init_data(pair, mode):
    """Tranform the data from pandas.DataFrame to list to improve Ray's performance

    Arguments:
        pair {str} -- Pair
        mode {str ['train', 'rollout]} -- Select the correct dataset,
        train or rollout one.

    Returns:
        list, list -- The dataframe divided in two lists
    """
    df = pd.read_csv('datasets/bot_{}_{}.csv'.format(mode, pair))
>>>>>>> 02388f654f70fbe391b63fad34711322f05b06fd
    df.drop('Date', axis=1, inplace=True)
    df_array = df.values.tolist()
    keys = df.keys()
    return keys, df_array


def build_layout(title, x_axis_title, y_axis_title):
    """Create the plotly's layout with custom configuration

    Arguments:
        title {str} -- Layout's central title
        x_axis_title {str} -- Axis x title
        y_axis_title {str} -- Axis y title

    Returns:
        Object -- Plotly object from plotly.graph_objs
    """

    layout = go.Layout(plot_bgcolor='#2d2929',
                       paper_bgcolor='#2d2929',
                       title=title,
                       font=dict(color='rgb(255, 255, 255)', size=17),
                       legend=dict(orientation="h"),
                       yaxis=dict(title=y_axis_title),
                       xaxis=dict(title=x_axis_title))
    return layout

def var_cov_matrix(df, weigths):
    """Compute covariance matrix with respect of given weigths

    Arguments:
        df {pandas.DataFrame} -- The timeseries object
        weigths {list} -- List of weights to be used

    Returns:
        numpy.array -- The covariance matrix
    """

    sigma = np.cov(np.array(df).T, ddof=0)
    var = (np.array(weigths) * sigma * np.array(weigths).T).sum()
    return var

def calc_exp_returns(avg_return, weigths):
    """Compute the expected returns

    Arguments:
        avg_return {pandas.DataFrame} -- The average of returns
        weigths {list} -- A list of weigths

    Returns:
        array -- N dimensions array
    """

    exp_returns = avg_return.dot(weigths.T)
    return exp_returns


if __name__ == '__main__':
    main()


def print_dollar():
    print(chr(27) + "[2J")
    print(colored("""
||====================================================================||
||//$\\\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\//$\\\||
||(100)==================| FEDERAL RESERVE NOTE |================(100)||
||\\\$//        ~         '------========--------'                \\\$//||
||<< /        /$\              // ____ \\\                         \ >>||
||>>|  12    //L\\\            // ///..) \\\         L38036133B   12 |<<||
||<<|        \\\ //           || <||  >\  ||                        |>>||
||>>|         \$/            ||  $$ --/  ||        One Hundred     |<<||
||====================================================================||>||
||//$\\\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\//$\\\||<||
||(100)==================| FEDERAL RESERVE NOTE |================(100)||>||
||\\\$//        ~         '------========--------'                \\\$//||\||
||<< /        /$\              // ____ \\\                         \ >>||)||
||>>|  12    //L\\\            // ///..) \\\         L38036133B   12 |<<||/||
||<<|        \\\ //           || <||  >\  ||                        |>>||=||
||>>|         \$/            ||  $$ --/  ||        One Hundred     |<<||
||<<|      L38036133B        *\\\  |\_/  //* series                 |>>||
||>>|  12                     *\\\/___\_//*   1989                  |<<||
||<<\      Treasurer     ______/Franklin\________     Secretary 12 />>||
||//$\                 ~|UNITED STATES OF AMERICA|~               /$\\\||
||(100)===================  ONE HUNDRED DOLLARS =================(100)||
||\\\$//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\\\$//||
||====================================================================||
    """, 'green', attrs=['bold']))







import sys
sys.path.append('/Users/apple/Desktop/dev/projectlife/tools')
import gym
import gym.spaces as spaces
from gym.utils import seeding
import pandas as pd
import numpy as np
import ccxt
import pdb
from features import Features

continuous_algos=["DDPG"]

LONG = 0
FLAT = 1

BUY = 0
SELL = 1
HOLD = 2

class Environment(gym.Env):

    def __init__(self, pair,  algo, mode):

        self.mode = mode
        self.pair = pair
        self.algo = algo
        self.load_data()
        self.actions = ["LONG", "FLAT"]
        self.n_features = self.df.shape[1]
        self.window_size = window_size
        self.shape = (self.n_features,) #(self.window_size, self.n_features)
        self.observation_space = spaces.Box(low=-self.n_features, high=self.n_features, shape=self.shape, dtype=np.float16)
        if self.algo in continuous_algos:
            self.action_space = spaces.Box(low=np.array([-2, -1]), high=np.array([2, 1]),  dtype=np.float16)
        else:
            self.action_space = spaces.Discrete(len(self.actions))

    def load_data(self):
        self.fee = 0.00125
        if self.mode == "train":
            raw_df = pd.read_csv("/Users/apple/Desktop/dev/projectlife/data/train/Binance_"+self.pair+".csv")
        elif self.mode == "validate":
            raw_df = pd.read_csv("/Users/apple/Desktop/dev/projectlife/data/validate/Binance_"+self.pair+".csv")
        else:
            exchange = ccxt.binance({'apiKey': "x", 'secret': "y"})
            data = exchange.fetch_ohlcv(self.pair, '1h')
            raw_df = DataFrame(data, columns=['date', 'open', 'high', 'low', 'close', 'volume'])

        extractor = Features(raw_df)
        feature_list = ['close', 'sma20']
        self.df = extractor.add_bar_features()
        self.df = extractor.add_mv_avg_features()
        self.df.dropna(inplace=True)
        self.closingPrices = self.df['close'].values
        self.df = self.df[feature_list].values

    def reset(self):
        self.current_tick = 0
        self.trade_count = 0
        self.history = []
        self.balance = 100
        self.profit = 0
        self.action = HOLD
        self.position = FLAT
        self.done = False
        self.updateState()

        return self.state

    def step(self, action):

        if self.done:
            return self.state, self.reward, self.done, {}

        self.reward = 0
        profit = 0
        self.action = HOLD
        if self.algo == "DDPG":
            action = np.argmax(action)

        if action == BUY:
            if self.position == FLAT:
                self.position = LONG
                self.action = BUY
                self.entry_price = self.closingPrice
                self.quantity = self.balance / self.closingPrice
                self.report_trade("buy")

        elif action == SELL:
            if self.position == LONG:
                self.position = FLAT
                self.action = SELL
                self.exit_price = self.closingPrice
                profit = ((self.exit_price - self.entry_price)/self.entry_price + 1)*(1-self.fee)**2 - 1
                self.reward += profit
                self.balance = self.balance * (1.0 + profit)
                self.entry_price = 0
                self.trade_count += 1
                self.report_trade("sell")

        self.current_tick += 1
        self.history.append((self.action, self.current_tick, self.closingPrice, self.balance, self.reward))
        self.updateState()
        self.results = {'balance':np.array([self.balance]), "history":self.history, "trade_count":self.trade_count }

        if (self.current_tick > (self.df.shape[0]) - self.window_size-1):
            self.done = True
            self.reward = profit
            self.report_trade("done")

        return self.state, self.reward, self.done, self.results

    def report_trade(self, side):
        if side == "buy":
            print("TICK: {0} / TRADE: {1}".format(self.current_tick, self.trade_count))
            print("--------------------------------")
            print("BUY: " + str(self.quantity) + " " +self.pair+" for "+ str(self.entry_price) + " each." )
        elif side == "sell":
            print("SELL: " + str(self.quantity) + " " +self.pair+" for "+ str(self.exit_price) + " each." )
            print("REWARD: {0}".format(self.reward))
            print("BALANCE: " + str(self.balance))
            print("==================================")
        else:
            print("**********************************")
            print("TOTAL: " + str(self.balance))


    def updateState(self):
        def one_hot_encode(x, n_classes):
            return np.eye(n_classes)[x]
        self.closingPrice = float(self.closingPrices[self.current_tick])
        prev_position = self.position
        one_hot_position = one_hot_encode(prev_position,3)
        profit = self.get_profit()
        self.state = np.concatenate((self.df[self.current_tick], one_hot_position, [profit]))
        return self.state

    def get_profit(self):
        if(self.position == LONG):
            profit = ((self.closingPrice - self.entry_price)/self.entry_price + 1)*(1-self.fee)**2 - 1
        else:
            profit = 0
        return profit

    def render(self, mode='human', verbose=False):
        return None

    def seed(self, seed=None):
        self.np_random, seed = seeding.np_random(seed)
        return [seed]











Tried Repos
-----------
gym-stock-exchange
stock-exchange-pytorch

Just note that when I evaluate the checkpoint I got this error when I run python rollout.py /Users/apple/ray_results/trading_DASHBTC/PPO_TradingEnv-v1_1_lr=2e-05_2019-04-27_21-56-39xligtocs/checkpoint_300  --run PPO --env TradingEnv-v1 --steps 200 --symbol DASHBTC


File "/Users/apple/miniconda3/envs/projectlife/lib/python3.6/site-packages/ray/tune/trainable.py", line 315, in restore
    with open(checkpoint_path + ".tune_metadata", "rb") as f:
FileNotFoundError: [Errno 2] No such file or directory: '/Users/apple/ray_results/trading_DASHBTC/PPO_TradingEnv-v1_1_lr=2e-05_2019-04-27_21-56-39xligtocs/checkpoint_300.tune_metadata'

I check the the args you provide and everything looked ok so I guess how checkpoint directory created was the problem but could not find where..

(Pdb) args.checkpoint
args = Namespace(checkpoint='/Users/apple/ray_results/trading_DASHBTC/PPO_TradingEnv-v1_1_lr=2e-05_2019-04-27_21-56-39xligtocs/checkpoint_300', config={}, env='TradingEnv-v1', no_render=False, out=None, run='PPO', steps='200', symbol='DASHBTC')
parser = ArgumentParser(prog='rollout.py', usage=None, description='Roll out a reinforcement learning agent given a checkpoint.', formatter_class=<class 'argparse.RawDescriptionHelpFormatter'>, conflict_handler='error', add_help=True)


so I had to hardcode the line in ray's trainable.py line 315
----------
with open(checkpoint_path + "/checkpoint300.tune_metadata", "rb") as f:
    metadata = pickle.load(f)

then got this error
------
Traceback (most recent call last):
  File "rollout.py", line 241, in <module>
    run(args, parser)
  File "rollout.py", line 124, in run
    agent.restore(args.checkpoint)
  File "/Users/apple/miniconda3/envs/projectlife/lib/python3.6/site-packages/ray/tune/trainable.py", line 328, in restore
    self._restore(checkpoint_path)
  File "/Users/apple/miniconda3/envs/projectlife/lib/python3.6/site-packages/ray/rllib/agents/trainer.py", line 421, in _restore
    extra_data = pickle.load(open(checkpoint_path, "rb"))
IsADirectoryError: [Errno 21] Is a directory: '/Users/apple/ray_results/trading_DASHBTC/PPO_TradingEnv-v1_1_lr=2e-05_2019-04-27_21-56-39xligtocs/checkpoint_300'


so I had to hardcode line 328

self._restore(checkpoint_path + "/checkpoint-300")










# env_params = GymVectorEnvironment(level='Trading-v0')
# env_params.additional_simulator_parameters={"algo": algo, "pair": pair, 'window_size': window_size, "mode": mode}
# env_params.observation_space_type=2 #vector

env_params = GymVectorEnvironment(level="/Users/apple/Desktop/dev/projectlife/environment.py:Environment")
env_params.additional_simulator_parameters={"algo": algo, "pair": pair, 'window_size': window_size, "mode": mode}
env_params.observation_space_type=2 #vector


#	env_params = GymEnvironment(level="/Users/apple/Desktop/dev/projectlife/environment.py:Environment",
# 							observation_space_type=0,
# 							additional_simulator_parameters={"algo": algo, "pair": pair, 'window_size': window_size, "mode": mode},
# 							frame_skip=1,
# 							visualization_parameters=VisualizationParameters())


# env_params.default_input_filter = NoInputFilter()
# env_params.default_output_filter = NoOutputFilter()
# env_params.path="/Users/apple/Desktop/dev/projectlife/environment.py:Environment",
#env_params = GymEnvironmentParameters(level="/Users/apple/Desktop/dev/projectlife/environment.py:Environment")



‎⁨Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨apple⁩ ▸ ⁨miniconda3⁩ ▸ ⁨envs⁩ ▸ ⁨gym_trading⁩ ▸ ⁨lib⁩ ▸ ⁨python3.7⁩ ▸ ⁨site-packages⁩ ▸ ⁨gym⁩ ▸ ⁨envs⁩









İNNAMIYORSAN BUNA BAK!!!!!1

==================================
TICK: 76 / TRADE: 9
--------------------------------
BUY: 6072583.145141297 DLTBTC for 2.219e-05 each.
SELL: 6072583.145141297 DLTBTC for 2.471e-05 each.
REWARD: 0.1107824970425868
BALANCE: 149.6786301512902
==================================
TICK: 79 / TRADE: 10
--------------------------------
BUY: 6888109.993156473 DLTBTC for 2.1730000000000007e-05 each.
SELL: 6888109.993156473 DLTBTC for 2.5990000000000007e-05 each.
REWARD: 0.19305410075356644
BALANCE: 178.5747034971732
==================================
TICK: 85 / TRADE: 11
--------------------------------
BUY: 7760743.307134861 DLTBTC for 2.3010000000000005e-05 each.
SELL: 7760743.307134861 DLTBTC for 2.3020000000000007e-05 each.
REWARD: -0.0020649296501518144
BALANCE: 178.20595929715483
==================================
TICK: 88 / TRADE: 12
--------------------------------
BUY: 8096590.608684908 DLTBTC for 2.201e-05 each.
SELL: 8096590.608684908 DLTBTC for 2.6010000000000007e-05 each.
REWARD: 0.17878308226374418
BALANCE: 210.0661699780675
==================================
TICK: 93 / TRADE: 13
--------------------------------
BUY: 9173195.1955488 DLTBTC for 2.2899999999999998e-05 each.
SELL: 9173195.1955488 DLTBTC for 2.479e-05 each.
REWARD: 0.07982811067139783
BALANCE: 226.83535544339335
==================================
TICK: 101 / TRADE: 14
--------------------------------
BUY: 9451473.143474722 DLTBTC for 2.4e-05 each.
SELL: 9451473.143474722 DLTBTC for 2.4590000000000007e-05 each.
REWARD: 0.022023475911458812
BALANCE: 231.83105842986814
==================================
TICK: 109 / TRADE: 15
--------------------------------
BUY: 10863685.962036934 DLTBTC for 2.134e-05 each.
SELL: 10863685.962036934 DLTBTC for 2.134e-05 each.
REWARD: -0.002498437499999895
BALANCE: 231.25184301982227
==================================
TICK: 111 / TRADE: 16
--------------------------------
BUY: 10836543.721641157 DLTBTC for 2.134e-05 each.
SELL: 10836543.721641157 DLTBTC for 2.085e-05 each.
REWARD: -0.025402643949156478
BALANCE: 225.3774347890035
==================================
TICK: 133 / TRADE: 17
--------------------------------
BUY: 10809469.294436619 DLTBTC for 2.085e-05 each.
SELL: 10809469.294436619 DLTBTC for 2.085e-05 each.
REWARD: -0.002498437499999895
BALANCE: 224.81434335427286
==================================
TICK: 138 / TRADE: 18
--------------------------------
BUY: 12165278.320036411 DLTBTC for 1.848e-05 each.
SELL: 12165278.320036411 DLTBTC for 2.121e-05 each.
REWARD: 0.14485974786931832
BALANCE: 257.38089244997917
==================================
TICK: 144 / TRADE: 19
--------------------------------
BUY: 12672619.027571594 DLTBTC for 2.0310000000000007e-05 each.
SELL: 12672619.027571594 DLTBTC for 2.187e-05 each.
REWARD: 0.0741191123522893
BALANCE: 276.45773573481165
==================================
TICK: 157 / TRADE: 20
--------------------------------
BUY: 13815978.797341911 DLTBTC for 2.001e-05 each.
SELL: 13815978.797341911 DLTBTC for 2.187e-05 each.
REWARD: 0.09022284717016493
BALANCE: 301.4005397750234
==================================
TICK: 165 / TRADE: 21
--------------------------------
BUY: 15070026.988751167 DLTBTC for 2e-05 each.
SELL: 15070026.988751167 DLTBTC for 2.1660000000000006e-05 each.
REWARD: 0.08029419218750022
BALANCE: 325.60125264113543
==================================
TICK: 168 / TRADE: 22
--------------------------------
BUY: 15351308.46964335 DLTBTC for 2.121e-05 each.
SELL: 15351308.46964335 DLTBTC for 2.121e-05 each.
REWARD: -0.002498437499999895
BALANCE: 324.7877582614899
==================================
TICK: 170 / TRADE: 23
--------------------------------
BUY: 16239387.913074493 DLTBTC for 2e-05 each.
SELL: 16239387.913074493 DLTBTC for 2e-05 each.
REWARD: -0.002498437499999895
BALANCE: 323.97629634670847
==================================
TICK: 172 / TRADE: 24
--------------------------------
BUY: 16280215.896819515 DLTBTC for 1.9900000000000006e-05 each.
SELL: 16280215.896819515 DLTBTC for 1.9900000000000006e-05 each.
REWARD: -0.002498437499999895
BALANCE: 323.16686181880476
==================================
TICK: 174 / TRADE: 25
--------------------------------
BUY: 17993700.54670405 DLTBTC for 1.796e-05 each.
SELL: 17993700.54670405 DLTBTC for 1.968e-05 each.
REWARD: 0.0930306653674835
BALANCE: 353.23128999852975
==================================
TICK: 181 / TRADE: 26
--------------------------------
BUY: 18455135.31862746 DLTBTC for 1.9140000000000006e-05 each.
SELL: 18455135.31862746 DLTBTC for 2.002e-05 each.
REWARD: 0.04336370330459749
BALANCE: 368.54870685592624
==================================
TICK: 198 / TRADE: 27
--------------------------------
BUY: 18263067.733197533 DLTBTC for 2.018e-05 each.
SELL: 18263067.733197533 DLTBTC for 1.974e-05 each.
REWARD: -0.024247728258176338
BALANCE: 359.61223796218144
==================================
TICK: 204 / TRADE: 28
--------------------------------
BUY: 21241124.51046553 DLTBTC for 1.6930000000000002e-05 each.
SELL: 21241124.51046553 DLTBTC for 1.856e-05 each.
REWARD: 0.0935398109864145
BALANCE: 393.25029872956543
==================================
TICK: 206 / TRADE: 29
--------------------------------
BUY: 21188054.888446417 DLTBTC for 1.856e-05 each.
SELL: 21188054.888446417 DLTBTC for 1.994e-05 each.
REWARD: 0.07166924333243552
BALANCE: 421.4342500797676
==================================
TICK: 253 / TRADE: 30
--------------------------------
BUY: 22007010.448029637 DLTBTC for 1.915e-05 each.
SELL: 22007010.448029637 DLTBTC for 2.025e-05 each.
REWARD: 0.05479930238250663
BALANCE: 444.52855298423367
==================================
TICK: 271 / TRADE: 31
--------------------------------
BUY: 22182063.522167347 DLTBTC for 2.004e-05 each.
SELL: 22182063.522167347 DLTBTC for 2.053e-05 each.
REWARD: 0.021891570764720703
BALANCE: 454.25998125882694
==================================
TICK: 274 / TRADE: 32
--------------------------------
BUY: 24488408.69319822 DLTBTC for 1.855e-05 each.
SELL: 24488408.69319822 DLTBTC for 2.3020000000000007e-05 each.
REWARD: 0.23786986354447492
BALANCE: 562.3147410145798
==================================
TICK: 283 / TRADE: 33
--------------------------------
BUY: 27429987.366564866 DLTBTC for 2.05e-05 each.
SELL: 27429987.366564866 DLTBTC for 2.136e-05 each.
REWARD: 0.03934796951219521
BALANCE: 584.4406843002794
==================================
TICK: 300 / TRADE: 34
--------------------------------
BUY: 27896930.03819948 DLTBTC for 2.0950000000000008e-05 each.
SELL: 27896930.03819948 DLTBTC for 2.429e-05 each.
REWARD: 0.15653045122315
BALANCE: 675.9234483269687
==================================
TICK: 303 / TRADE: 35
--------------------------------
BUY: 28447956.579417873 DLTBTC for 2.376e-05 each.
SELL: 28447956.579417873 DLTBTC for 2.377e-05 each.
REWARD: -0.002078613610058788
BALANCE: 674.5184646479183
==================================
TICK: 307 / TRADE: 36
--------------------------------
BUY: 28093230.514282316 DLTBTC for 2.401e-05 each.
SELL: 28093230.514282316 DLTBTC for 2.384e-05 each.
REWARD: -0.00956113077884202
BALANCE: 668.0693053946759
==================================
TICK: 309 / TRADE: 37
--------------------------------
BUY: 27146253.77467192 DLTBTC for 2.461e-05 each.
SELL: 27146253.77467192 DLTBTC for 2.3910000000000007e-05 each.
REWARD: -0.030871094702356383
BALANCE: 647.4452746000994
==================================
TICK: 314 / TRADE: 38
--------------------------------
BUY: 32004215.254577324 DLTBTC for 2.0230000000000005e-05 each.
SELL: 32004215.254577324 DLTBTC for 2.167e-05 each.
REWARD: 0.06850513392857116
BALANCE: 691.7985998479998
==================================
TICK: 317 / TRADE: 39
--------------------------------
BUY: 31924254.723027214 DLTBTC for 2.167e-05 each.
SELL: 31924254.723027214 DLTBTC for 2.3010000000000005e-05 each.
REWARD: 0.059183708035302596
BALANCE: 732.7418062006349
==================================
TICK: 327 / TRADE: 40
--------------------------------
BUY: 34208300.94307352 DLTBTC for 2.142e-05 each.
SELL: 34208300.94307352 DLTBTC for 2.1730000000000007e-05 each.
REWARD: 0.01193785962301619
BALANCE: 741.4891750229734
==================================
TICK: 336 / TRADE: 41
--------------------------------
BUY: 34746446.81457233 DLTBTC for 2.134e-05 each.
SELL: 34746446.81457233 DLTBTC for 2.105e-05 each.
REWARD: -0.016053988255623097
BALANCE: 729.585316515483
==================================
TICK: 341 / TRADE: 42
--------------------------------
BUY: 35887128.21030413 DLTBTC for 2.033e-05 each.
SELL: 35887128.21030413 DLTBTC for 2.133e-05 each.
REWARD: 0.046567059917609566
BALANCE: 763.5599596646676
==================================
TICK: 351 / TRADE: 43
--------------------------------
BUY: 35780691.64314281 DLTBTC for 2.134e-05 each.
SELL: 35780691.64314281 DLTBTC for 2.137e-05 each.
REWARD: -0.0010961391459698433
BALANCE: 762.7229917025841
==================================
TICK: 353 / TRADE: 44
--------------------------------
BUY: 35019421.10663839 DLTBTC for 2.178e-05 each.
SELL: 35019421.10663839 DLTBTC for 2.178e-05 each.
REWARD: -0.002498437499999895
BALANCE: 760.8173759780022
==================================
TICK: 356 / TRADE: 45
--------------------------------
BUY: 35337546.49224349 DLTBTC for 2.153e-05 each.
SELL: 35337546.49224349 DLTBTC for 2.153e-05 each.
REWARD: -0.002498437499999895
BALANCE: 758.9165213152073
==================================
TICK: 358 / TRADE: 46
--------------------------------
BUY: 35764209.298548885 DLTBTC for 2.122e-05 each.
SELL: 35764209.298548885 DLTBTC for 2.129e-05 each.
REWARD: 0.0007920954582942841
BALANCE: 759.5176556449655
==================================
TICK: 368 / TRADE: 47
--------------------------------
BUY: 39373647.25997747 DLTBTC for 1.9290000000000007e-05 each.
SELL: 39373647.25997747 DLTBTC for 1.96e-05 each.
REWARD: 0.013531914204250484
BALANCE: 769.7953833977667
==================================
TICK: 393 / TRADE: 48
--------------------------------
BUY: 41165528.52394473 DLTBTC for 1.8700000000000007e-05 each.
SELL: 41165528.52394473 DLTBTC for 2.013e-05 each.
REWARD: 0.07378109374999964
BALANCE: 826.5917287485543
==================================
TICK: 396 / TRADE: 49
--------------------------------
BUY: 41453948.28227454 DLTBTC for 1.994e-05 each.
SELL: 41453948.28227454 DLTBTC for 1.983e-05 each.
REWARD: -0.00800120439443297
BALANCE: 819.9779993760894
==================================
TICK: 411 / TRADE: 50
--------------------------------
BUY: 41350378.18336306 DLTBTC for 1.983e-05 each.
SELL: 41350378.18336306 DLTBTC for 1.9840000000000007e-05 each.
REWARD: -0.0019954109934439135
BALANCE: 818.3418062617523
==================================
TICK: 418 / TRADE: 51
--------------------------------
BUY: 41330394.25564405 DLTBTC for 1.98e-05 each.
SELL: 41330394.25564405 DLTBTC for 1.98e-05 each.
REWARD: -0.002498437499999895
BALANCE: 816.2972304051702
==================================
TICK: 431 / TRADE: 52
--------------------------------
BUY: 41690359.060529634 DLTBTC for 1.958e-05 each.
SELL: 41690359.060529634 DLTBTC for 1.9290000000000007e-05 each.
REWARD: -0.01727246472803834
BALANCE: 802.1977652854016
==================================
TICK: 437 / TRADE: 53
--------------------------------
BUY: 42875348.224767596 DLTBTC for 1.871e-05 each.
SELL: 42875348.224767596 DLTBTC for 1.854e-05 each.
REWARD: -0.01156178681186526
BALANCE: 792.9229257422171
==================================
TICK: 454 / TRADE: 54
--------------------------------
BUY: 42087204.126444645 DLTBTC for 1.884e-05 each.
SELL: 42087204.126444645 DLTBTC for 1.925e-05 each.
REWARD: 0.019209399051220988
BALANCE: 808.154498639661
==================================
TICK: 457 / TRADE: 55
--------------------------------
BUY: 44017129.55553709 DLTBTC for 1.836e-05 each.
SELL: 44017129.55553709 DLTBTC for 1.915e-05 each.
REWARD: 0.040422381365740945
BALANCE: 840.8220279861126
==================================
TICK: 461 / TRADE: 56
--------------------------------
BUY: 44370555.566549465 DLTBTC for 1.8950000000000007e-05 each.
SELL: 44370555.566549465 DLTBTC for 1.9e-05 each.
REWARD: 0.00013349274406304623
BALANCE: 840.9342716258972
==================================
TICK: 474 / TRADE: 57
--------------------------------
BUY: 44659281.552092254 DLTBTC for 1.883e-05 each.
SELL: 44659281.552092254 DLTBTC for 2e-05 each.
REWARD: 0.05948121348911317
BALANCE: 890.954062566789
==================================
TICK: 503 / TRADE: 58
--------------------------------
BUY: 46646809.558470614 DLTBTC for 1.9100000000000007e-05 each.
SELL: 46646809.558470614 DLTBTC for 2.019e-05 each.
REWARD: 0.05442704433900514
BALANCE: 939.4460588341284
==================================
TICK: 509 / TRADE: 59
--------------------------------
BUY: 47566889.05489258 DLTBTC for 1.975e-05 each.
SELL: 47566889.05489258 DLTBTC for 2.0520000000000007e-05 each.
REWARD: 0.036391496835443515
BALANCE: 973.6339071112604
==================================
TICK: 519 / TRADE: 60
--------------------------------
BUY: 50552123.94139463 DLTBTC for 1.926e-05 each.
SELL: 50552123.94139463 DLTBTC for 1.947e-05 each.
REWARD: 0.008377747760903498
BALANCE: 981.7907663965016
==================================
TICK: 527 / TRADE: 61
--------------------------------
BUY: 52334262.60109284 DLTBTC for 1.876e-05 each.
SELL: 52334262.60109284 DLTBTC for 2.012e-05 each.
REWARD: 0.06981510860874218
BALANCE: 1050.3345953835335
==================================
TICK: 536 / TRADE: 62
--------------------------------
BUY: 53643237.76218251 DLTBTC for 1.958e-05 each.
SELL: 53643237.76218251 DLTBTC for 3.2000000000000005e-05 each.
REWARD: 0.6302374872318699
BALANCE: 1712.2948315307544
==================================
TICK: 545 / TRADE: 63
--------------------------------
BUY: 67307186.77400762 DLTBTC for 2.5440000000000007e-05 each.
SELL: 67307186.77400762 DLTBTC for 2.651e-05 each.
REWARD: 0.03945622727496034
BALANCE: 1779.8555255653719
==================================
TICK: 549 / TRADE: 64
--------------------------------
BUY: 75067715.12295958 DLTBTC for 2.371e-05 each.
SELL: 75067715.12295958 DLTBTC for 2.354e-05 each.
REWARD: -0.009650494253479414
BALANCE: 1762.6790400438797
==================================
TICK: 560 / TRADE: 65
--------------------------------
BUY: 88133952.00219397 DLTBTC for 2e-05 each.
SELL: 88133952.00219397 DLTBTC for 2.393e-05 each.
REWARD: 0.19351061953124993
BALANCE: 2103.7761531175197
==================================
TICK: 562 / TRADE: 66
--------------------------------
BUY: 91033152.4499143 DLTBTC for 2.311e-05 each.
SELL: 91033152.4499143 DLTBTC for 2.475e-05 each.
REWARD: 0.06828921124513188
BALANCE: 2247.441367250233
==================================
TICK: 573 / TRADE: 67
--------------------------------
BUY: 102156425.78410146 DLTBTC for 2.2000000000000006e-05 each.
SELL: 102156425.78410146 DLTBTC for 2.161e-05 each.
REWARD: -0.020181419744318307
BALANCE: 2202.084809667011
==================================
TICK: 585 / TRADE: 68
--------------------------------
BUY: 103384263.36464842 DLTBTC for 2.13e-05 each.
SELL: 103384263.36464842 DLTBTC for 2.408e-05 each.
REWARD: 0.1276919072769953
BALANCE: 2483.273218999091
==================================
TICK: 595 / TRADE: 69
--------------------------------
BUY: 107874596.82880497 DLTBTC for 2.3020000000000007e-05 each.
SELL: 107874596.82880497 DLTBTC for 2.416e-05 each.
REWARD: 0.04689998913987803
BALANCE: 2599.7387060014985
==================================
TICK: 605 / TRADE: 70
--------------------------------
BUY: 113575303.8882262 DLTBTC for 2.2890000000000006e-05 each.
SELL: 113575303.8882262 DLTBTC for 2.3020000000000007e-05 each.
REWARD: 0.0031667089886413535
BALANCE: 2607.9713219299124
==================================
TICK: 620 / TRADE: 71
--------------------------------
BUY: 110930298.67843097 DLTBTC for 2.351e-05 each.
SELL: 110930298.67843097 DLTBTC for 2.344e-05 each.
REWARD: -0.005468454912803011
BALANCE: 2593.7097483420553
==================================
TICK: 624 / TRADE: 72
--------------------------------
BUY: 115122492.15899044 DLTBTC for 2.2530000000000006e-05 each.
SELL: 115122492.15899044 DLTBTC for 2.15e-05 each.
REWARD: -0.048101038892587766
BALANCE: 2468.94961486097
==================================
TICK: 627 / TRADE: 73
--------------------------------
BUY: 117513070.67401095 DLTBTC for 2.101e-05 each.
SELL: 117513070.67401095 DLTBTC for 2.1899999999999997e-05 each.
REWARD: 0.03975650731794378
BALANCE: 2567.1064282918246
==================================
TICK: 634 / TRADE: 74
--------------------------------
BUY: 116792831.13247606 DLTBTC for 2.1980000000000006e-05 each.
SELL: 116792831.13247606 DLTBTC for 2.283e-05 each.
REWARD: 0.03607646368858042
BALANCE: 2659.718550136816
==================================
TICK: 642 / TRADE: 75
--------------------------------
BUY: 124285913.55779514 DLTBTC for 2.14e-05 each.
SELL: 124285913.55779514 DLTBTC for 2.17e-05 each.
REWARD: 0.011485229264018848
BALANCE: 2690.266027462901
==================================
TICK: 646 / TRADE: 76
--------------------------------
BUY: 127079169.93211626 DLTBTC for 2.117e-05 each.
SELL: 127079169.93211626 DLTBTC for 2.174e-05 each.
REWARD: 0.024359186053377613
BALANCE: 2755.798718158951
==================================
TICK: 649 / TRADE: 77
--------------------------------
BUY: 125263578.0981341 DLTBTC for 2.2000000000000006e-05 each.
SELL: 125263578.0981341 DLTBTC for 2.21e-05 each.
REWARD: 0.0020356605113633908
BALANCE: 2761.408588786773
==================================
TICK: 667 / TRADE: 78
--------------------------------
BUY: 130872444.96619777 DLTBTC for 2.11e-05 each.
SELL: 130872444.96619777 DLTBTC for 2.159e-05 each.
REWARD: 0.02066629072867321
BALANCE: 2818.476661503296
==================================
TICK: 670 / TRADE: 79
--------------------------------
BUY: 130605962.0715151 DLTBTC for 2.158e-05 each.
SELL: 130605962.0715151 DLTBTC for 2.101e-05 each.
REWARD: -0.02884579109708041
BALANCE: 2737.175472513575
==================================
TICK: 675 / TRADE: 80
--------------------------------
BUY: 131721630.0535888 DLTBTC for 2.078e-05 each.
SELL: 131721630.0535888 DLTBTC for 2.255e-05 each.
REWARD: 0.08246680627406167
BALANCE: 2962.9015919434655
==================================
TICK: 702 / TRADE: 81
--------------------------------
BUY: 136350740.54042634 DLTBTC for 2.1730000000000007e-05 each.
SELL: 136350740.54042634 DLTBTC for 2.4670000000000006e-05 each.
REWARD: 0.13246035650598253
BALANCE: 3355.36859310444
==================================
TICK: 712 / TRADE: 82
--------------------------------
BUY: 141636496.12091348 DLTBTC for 2.369e-05 each.
SELL: 141636496.12091348 DLTBTC for 2.3570000000000006e-05 each.
REWARD: -0.007551210294427624
BALANCE: 3330.0314992425906
==================================
TICK: 714 / TRADE: 83
--------------------------------
BUY: 144532617.15462634 DLTBTC for 2.304e-05 each.
SELL: 144532617.15462634 DLTBTC for 2.332e-05 each.
REWARD: 0.009623977322048782
BALANCE: 3362.0796468730096
==================================
TICK: 729 / TRADE: 84
--------------------------------
BUY: 142884812.8717811 DLTBTC for 2.353e-05 each.
SELL: 142884812.8717811 DLTBTC for 2.36e-05 each.
REWARD: 0.0004690554611137543
BALANCE: 3363.6566486920747
==================================
TICK: 732 / TRADE: 85
--------------------------------
BUY: 142527824.0971218 DLTBTC for 2.36e-05 each.
SELL: 142527824.0971218 DLTBTC for 2.3870000000000007e-05 each.
REWARD: 0.008913656647246304
BALANCE: 3393.639129137743
==================================
TICK: 737 / TRADE: 86
--------------------------------
BUY: 143131131.5536796 DLTBTC for 2.371e-05 each.
SELL: 143131131.5536796 DLTBTC for 2.490000000000001e-05 each.
REWARD: 0.0475659597743574
BALANCE: 3555.060831442994
==================================
TICK: 739 / TRADE: 87
--------------------------------
BUY: 148747315.12313783 DLTBTC for 2.3899999999999998e-05 each.
SELL: 148747315.12313783 DLTBTC for 2.449e-05 each.
REWARD: 0.022126078059623744
BALANCE: 3633.720384906213
==================================
TICK: 745 / TRADE: 88
--------------------------------
BUY: 153063200.71214035 DLTBTC for 2.3740000000000006e-05 each.
SELL: 153063200.71214035 DLTBTC for 2.4990000000000006e-05 each.
REWARD: 0.05002375934604042
BALANCE: 3815.4927389715626
==================================
TICK: 760 / TRADE: 89
--------------------------------
BUY: 152436785.41636282 DLTBTC for 2.5030000000000006e-05 each.
SELL: 152436785.41636282 DLTBTC for 2.5150000000000005e-05 each.
REWARD: 0.0022838312774671188
BALANCE: 3824.2066806277744
==================================
TICK: 774 / TRADE: 90
--------------------------------
BUY: 149383073.46202245 DLTBTC for 2.56e-05 each.
SELL: 149383073.46202245 DLTBTC for 2.721e-05 each.
REWARD: 0.06023505920410166
BALANCE: 4054.5579964441094
==================================
TICK: 781 / TRADE: 91
--------------------------------
BUY: 150168814.68311518 DLTBTC for 2.7e-05 each.
SELL: 150168814.68311518 DLTBTC for 2.775e-05 each.
REWARD: 0.025209939236111367
BALANCE: 4156.773157163755
==================================
TICK: 784 / TRADE: 92
--------------------------------
BUY: 148934903.51715353 DLTBTC for 2.791e-05 each.
SELL: 148934903.51715353 DLTBTC for 2.767e-05 each.
REWARD: -0.011076021699211513
BALANCE: 4110.7326474763095
==================================
TICK: 832 / TRADE: 93
--------------------------------
BUY: 167579806.25667793 DLTBTC for 2.453e-05 each.
SELL: 167579806.25667793 DLTBTC for 2.5140000000000007e-05 each.
REWARD: 0.02230694175499437
BALANCE: 4202.430521213917
==================================
TICK: 854 / TRADE: 94
--------------------------------
BUY: 162884903.92302 DLTBTC for 2.5800000000000007e-05 each.
SELL: 162884903.92302 DLTBTC for 2.63e-05 each.
REWARD: 0.016832988129844573
BALANCE: 4273.169984294007
==================================
TICK: 861 / TRADE: 95
--------------------------------
BUY: 164352691.70361567 DLTBTC for 2.6e-05 each.
SELL: 164352691.70361567 DLTBTC for 2.6480000000000007e-05 each.
REWARD: 0.01591697596153896
BALANCE: 4341.185928213585
==================================
TICK: 865 / TRADE: 96
--------------------------------
BUY: 165567731.8159262 DLTBTC for 2.622e-05 each.
SELL: 165567731.8159262 DLTBTC for 2.638e-05 each.
REWARD: 0.003588528556445647
BALANCE: 4356.76439788582
==================================
TICK: 900 / TRADE: 97
--------------------------------
BUY: 173714688.91091785 DLTBTC for 2.508e-05 each.
SELL: 173714688.91091785 DLTBTC for 2.5350000000000006e-05 each.
REWARD: 0.008240215684808927
BALANCE: 4392.665076212295
==================================
TICK: 909 / TRADE: 98
--------------------------------
BUY: 171655532.48191848 DLTBTC for 2.5590000000000007e-05 each.
SELL: 171655532.48191848 DLTBTC for 2.554000000000001e-05 each.
REWARD: -0.004447444069949014
BALANCE: 4373.128943967823
==================================
TICK: 914 / TRADE: 99
--------------------------------
BUY: 175627668.43244264 DLTBTC for 2.490000000000001e-05 each.
SELL: 175627668.43244264 DLTBTC for 2.4820000000000006e-05 each.
REWARD: -0.005703261797188719
BALANCE: 4348.187844727511
==================================
TICK: 924 / TRADE: 100
--------------------------------
BUY: 184323350.77267954 DLTBTC for 2.3590000000000006e-05 each.
SELL: 184323350.77267954 DLTBTC for 2.4140000000000006e-05 each.
REWARD: 0.02075827548749487
BALANCE: 4438.448725879742
==================================
TICK: 930 / TRADE: 101
--------------------------------
BUY: 183862830.40098345 DLTBTC for 2.4140000000000006e-05 each.
SELL: 183862830.40098345 DLTBTC for 2.403e-05 each.
REWARD: -0.00704380501760582
BALANCE: 4407.185158474003
==================================
TICK: 935 / TRADE: 102
--------------------------------
BUY: 184942725.91162413 DLTBTC for 2.383e-05 each.
SELL: 184942725.91162413 DLTBTC for 2.575e-05 each.
REWARD: 0.07787097080885452
BALANCE: 4750.376945298749
==================================
TICK: 941 / TRADE: 103
--------------------------------
BUY: 193655806.98323476 DLTBTC for 2.453e-05 each.
SELL: 193655806.98323476 DLTBTC for 2.485e-05 each.
REWARD: 0.010514220469832969
BALANCE: 4800.323455816431
==================================
TICK: 947 / TRADE: 104
--------------------------------
BUY: 192012938.23265725 DLTBTC for 2.5e-05 each.
SELL: 192012938.23265725 DLTBTC for 2.614e-05 each.
REWARD: 0.04298763374999992
BALANCE: 5006.678002416602
==================================
TICK: 961 / TRADE: 105
--------------------------------
BUY: 189503330.90146106 DLTBTC for 2.642e-05 each.
SELL: 189503330.90146106 DLTBTC for 2.5990000000000007e-05 each.
REWARD: -0.018733322885124637
BALANCE: 4912.886286815481
==================================
TICK: 965 / TRADE: 106
--------------------------------
BUY: 189029868.67316198 DLTBTC for 2.5990000000000007e-05 each.
SELL: 189029868.67316198 DLTBTC for 2.7080000000000005e-05 each.
REWARD: 0.039335987398999794
BALANCE: 5106.139519886374
==================================
TICK: 972 / TRADE: 107
--------------------------------
BUY: 190883720.36958408 DLTBTC for 2.675e-05 each.
SELL: 190883720.36958408 DLTBTC for 2.77e-05 each.
REWARD: 0.03292685163551412
BALANCE: 5274.268618287908
==================================
TICK: 981 / TRADE: 108
--------------------------------
BUY: 195923797.1132209 DLTBTC for 2.6920000000000007e-05 each.
SELL: 195923797.1132209 DLTBTC for 2.8000000000000003e-05 each.
REWARD: 0.03752019873699841
BALANCE: 5472.160225038384
==================================
TICK: 985 / TRADE: 109
--------------------------------
BUY: 197550910.6512052 DLTBTC for 2.77e-05 each.
SELL: 197550910.6512052 DLTBTC for 2.77e-05 each.
REWARD: -0.002498437499999895
BALANCE: 5458.48837472614
==================================
TICK: 987 / TRADE: 110
--------------------------------
BUY: 197057342.0478751 DLTBTC for 2.77e-05 each.
SELL: 197057342.0478751 DLTBTC for 2.738e-05 each.
REWARD: -0.014021921254512626
BALANCE: 5381.949880567057
==================================
TICK: 992 / TRADE: 111
--------------------------------
BUY: 198230198.17926547 DLTBTC for 2.715e-05 each.
SELL: 198230198.17926547 DLTBTC for 2.738e-05 each.
REWARD: 0.005951851979742351
BALANCE: 5413.982449618585
==================================
TICK: 1003 / TRADE: 112
--------------------------------
BUY: 198241759.41481453 DLTBTC for 2.731e-05 each.
SELL: 198241759.41481453 DLTBTC for 2.755e-05 each.
REWARD: 0.006267596004211118
BALANCE: 5447.915104386683
==================================
TICK: 1013 / TRADE: 113
--------------------------------
BUY: 194568396.58523867 DLTBTC for 2.8000000000000003e-05 each.
SELL: 194568396.58523867 DLTBTC for 2.8260000000000007e-05 each.
REWARD: 0.006764077008928782
BALANCE: 5484.765221690861
==================================
TICK: 1020 / TRADE: 114
--------------------------------
BUY: 206972272.51663625 DLTBTC for 2.65e-05 each.
SELL: 206972272.51663625 DLTBTC for 2.65e-05 each.
REWARD: -0.002498437499999895
BALANCE: 5471.0618785822935
==================================
TICK: 1023 / TRADE: 115
--------------------------------
BUY: 211564651.1439402 DLTBTC for 2.586e-05 each.
SELL: 211564651.1439402 DLTBTC for 2.721e-05 each.
REWARD: 0.04957530996229709
BALANCE: 5742.291467035918
==================================
TICK: 1031 / TRADE: 116
--------------------------------
BUY: 216608504.980608 DLTBTC for 2.651e-05 each.
SELL: 216608504.980608 DLTBTC for 2.7690000000000008e-05 each.
REWARD: 0.041901858378914136
BALANCE: 5982.904150858104
==================================
TICK: 1043 / TRADE: 117
--------------------------------
BUY: 222330143.1013788 DLTBTC for 2.691e-05 each.
SELL: 222330143.1013788 DLTBTC for 2.702e-05 each.
REWARD: 0.0015790493775547088
BALANCE: 5992.351451933486
==================================
TICK: 1055 / TRADE: 118
--------------------------------
BUY: 218778804.3787326 DLTBTC for 2.739e-05 each.
SELL: 218778804.3787326 DLTBTC for 2.869e-05 each.
REWARD: 0.044845557799379376
BALANCE: 6261.081795325364
==================================
TICK: 1060 / TRADE: 119
--------------------------------
BUY: 231720273.6982 DLTBTC for 2.702e-05 each.
SELL: 231720273.6982 DLTBTC for 2.799e-05 each.
REWARD: 0.03331120408493726
BALANCE: 6469.645968801932
==================================
TICK: 1067 / TRADE: 120
--------------------------------
BUY: 232386708.64949468 DLTBTC for 2.784e-05 each.
SELL: 232386708.64949468 DLTBTC for 2.77e-05 each.
REWARD: -0.007514609150502838
BALANCE: 6421.02910800426
==================================
TICK: 1080 / TRADE: 121
--------------------------------
BUY: 234344128.02935252 DLTBTC for 2.7400000000000005e-05 each.
SELL: 234344128.02935252 DLTBTC for 2.803e-05 each.
REWARD: 0.020436817404197116
BALANCE: 6552.254507431578
==================================
TICK: 1086 / TRADE: 122
--------------------------------
BUY: 232679492.45140544 DLTBTC for 2.816e-05 each.
SELL: 232679492.45140544 DLTBTC for 2.864e-05 each.
REWARD: 0.014504430042613814
BALANCE: 6647.29122455602
==================================
TICK: 1118 / TRADE: 123
--------------------------------
BUY: 252844854.49052948 DLTBTC for 2.629e-05 each.
SELL: 252844854.49052948 DLTBTC for 2.6050000000000006e-05 each.
REWARD: -0.011604575765499892
BALANCE: 6570.152229905318
==================================
TICK: 1137 / TRADE: 124
--------------------------------
BUY: 252309993.46794614 DLTBTC for 2.604e-05 each.
SELL: 252309993.46794614 DLTBTC for 2.6050000000000006e-05 each.
REWARD: -0.0021153723838321925
BALANCE: 6556.253911320602
==================================
TICK: 1148 / TRADE: 125
--------------------------------
BUY: 255206458.20632932 DLTBTC for 2.5690000000000006e-05 each.
SELL: 255206458.20632932 DLTBTC for 2.6310000000000007e-05 each.
REWARD: 0.021575169691514295
BALANCE: 6697.7062019979985
==================================
TICK: 1151 / TRADE: 126
--------------------------------
BUY: 257307191.77863997 DLTBTC for 2.603e-05 each.
SELL: 257307191.77863997 DLTBTC for 2.5830000000000005e-05 each.
REWARD: -0.010162683082020396
BALANCE: 6629.63953649061
==================================
TICK: 1174 / TRADE: 127
--------------------------------
BUY: 259883948.90202308 DLTBTC for 2.5510000000000005e-05 each.
SELL: 259883948.90202308 DLTBTC for 2.59e-05 each.
REWARD: 0.012751488386906873
BALANCE: 6714.177308049549
==================================
TICK: 1177 / TRADE: 128
--------------------------------
BUY: 263507743.64401674 DLTBTC for 2.5480000000000007e-05 each.
SELL: 263507743.64401674 DLTBTC for 2.622e-05 each.
REWARD: 0.026471388098508575
BALANCE: 6891.910901333128
==================================
TICK: 1200 / TRADE: 129
--------------------------------
BUY: 266508542.20159042 DLTBTC for 2.586e-05 each.
SELL: 266508542.20159042 DLTBTC for 2.7850000000000006e-05 each.
REWARD: 0.07426212357405282
BALANCE: 7403.718840349291
==================================
TICK: 1212 / TRADE: 130
--------------------------------
BUY: 262450153.85853562 DLTBTC for 2.8210000000000006e-05 each.
SELL: 262450153.85853562 DLTBTC for 2.88e-05 each.
REWARD: 0.018363878057426453
BALANCE: 7539.679830304936
==================================
TICK: 1214 / TRADE: 131
--------------------------------
BUY: 270627416.73743486 DLTBTC for 2.786e-05 each.
SELL: 270627416.73743486 DLTBTC for 2.8290000000000005e-05 each.
REWARD: 0.012897315259332576
BALANCE: 7636.92145803081
==================================
TICK: 1219 / TRADE: 132
--------------------------------
BUY: 269570118.53267944 DLTBTC for 2.8330000000000005e-05 each.
SELL: 269570118.53267944 DLTBTC for 2.88e-05 each.
REWARD: 0.01405030003529828
BALANCE: 7744.22249586215
==================================
TICK: 1224 / TRADE: 133
--------------------------------
BUY: 280080379.5971844 DLTBTC for 2.7650000000000005e-05 each.
SELL: 280080379.5971844 DLTBTC for 2.885e-05 each.
REWARD: 0.040792769552441266
BALANCE: 8060.130779498686
==================================
TICK: 1232 / TRADE: 134
--------------------------------
BUY: 305423674.85785085 DLTBTC for 2.6390000000000007e-05 each.
SELL: 305423674.85785085 DLTBTC for 2.6880000000000007e-05 each.
REWARD: 0.016022811671087656
BALANCE: 8189.27673702293
==================================
TICK: 1248 / TRADE: 135
--------------------------------
BUY: 310317420.8799897 DLTBTC for 2.6390000000000007e-05 each.
SELL: 310317420.8799897 DLTBTC for 2.884e-05 each.
REWARD: 0.09010780835543741
BALANCE: 8927.194515812234
==================================
TICK: 1258 / TRADE: 136
--------------------------------
BUY: 305307609.9798986 DLTBTC for 2.924e-05 each.
SELL: 305307609.9798986 DLTBTC for 3.176e-05 each.
REWARD: 0.08346954941860463
BALANCE: 9672.34341961932
==================================
TICK: 1272 / TRADE: 137
--------------------------------
BUY: 323381592.09693474 DLTBTC for 2.9910000000000007e-05 each.
SELL: 323381592.09693474 DLTBTC for 3.286e-05 each.
REWARD: 0.09588436455198912
BALANCE: 10599.769922138132
==================================
TICK: 1282 / TRADE: 138
--------------------------------
BUY: 335117607.40240693 DLTBTC for 3.163e-05 each.
SELL: 335117607.40240693 DLTBTC for 3.706e-05 each.
REWARD: 0.16874511243281698
BALANCE: 12388.429289411322
==================================
TICK: 1291 / TRADE: 139
--------------------------------
BUY: 330270042.37300235 DLTBTC for 3.751000000000001e-05 each.
SELL: 330270042.37300235 DLTBTC for 4.122e-05 each.
REWARD: 0.0961614077912556
BALANCE: 13579.71809020354
==================================
TICK: 1293 / TRADE: 140
--------------------------------
BUY: 352079805.2943618 DLTBTC for 3.857000000000001e-05 each.
SELL: 352079805.2943618 DLTBTC for 3.992e-05 each.
REWARD: 0.03241541029297368
BALANCE: 14019.910223760404
==================================
TICK: 1295 / TRADE: 141
--------------------------------
BUY: 388793960.7254688 DLTBTC for 3.606e-05 each.
SELL: 388793960.7254688 DLTBTC for 3.9470000000000013e-05 each.
REWARD: 0.0918299132522189
BALANCE: 15307.357363412219
==================================
TICK: 1297 / TRADE: 142
--------------------------------
BUY: 405707854.84792507 DLTBTC for 3.773000000000001e-05 each.
SELL: 405707854.84792507 DLTBTC for 3.6630000000000014e-05 each.
REWARD: -0.031580115706996925
BALANCE: 14823.949246707309
==================================
TICK: 1302 / TRADE: 143
--------------------------------
BUY: 423299521.60786146 DLTBTC for 3.502e-05 each.
SELL: 423299521.60786146 DLTBTC for 3.138e-05 each.
REWARD: -0.10617935376213583
BALANCE: 13249.951895489226
==================================
TICK: 1311 / TRADE: 144
--------------------------------
BUY: 423727275.19952756 DLTBTC for 3.127e-05 each.
SELL: 423727275.19952756 DLTBTC for 3.054e-05 each.
REWARD: -0.02578517049088558
BALANCE: 12908.299626868004
==================================
TICK: 1314 / TRADE: 145
--------------------------------
BUY: 461010700.9595715 DLTBTC for 2.8000000000000003e-05 each.
SELL: 461010700.9595715 DLTBTC for 3.109e-05 each.
REWARD: 0.10758298493303586
BALANCE: 14297.013031136456
==================================
TICK: 1320 / TRADE: 146
--------------------------------
BUY: 464188734.7771577 DLTBTC for 3.0799999999999996e-05 each.
SELL: 464188734.7771577 DLTBTC for 2.475e-05 each.
REWARD: -0.1984362444196427
BALANCE: 11459.967458819045
==================================
TICK: 1359 / TRADE: 147
--------------------------------
BUY: 451891461.3098992 DLTBTC for 2.536e-05 each.
SELL: 451891461.3098992 DLTBTC for 2.3910000000000007e-05 each.
REWARD: -0.05953224134956592
BALANCE: 10777.729910202457
==================================
TICK: 1369 / TRADE: 148
--------------------------------
BUY: 501289763.26523054 DLTBTC for 2.15e-05 each.
SELL: 501289763.26523054 DLTBTC for 2.268e-05 each.
REWARD: 0.052248159883721
BALANCE: 11340.846465734277
==================================
TICK: 1372 / TRADE: 149
--------------------------------
BUY: 495017305.3572359 DLTBTC for 2.2910000000000006e-05 each.
SELL: 495017305.3572359 DLTBTC for 2.283e-05 each.
REWARD: -0.0059816380674379
BALANCE: 11273.009626797873
==================================
TICK: 1383 / TRADE: 150
--------------------------------
BUY: 479294626.9897055 DLTBTC for 2.352e-05 each.
SELL: 479294626.9897055 DLTBTC for 2.752e-05 each.
REWARD: 0.16714468537415006
BALANCE: 13157.233274088769
==================================
TICK: 1398 / TRADE: 151
--------------------------------
BUY: 480366311.5768079 DLTBTC for 2.739e-05 each.
SELL: 480366311.5768079 DLTBTC for 2.465e-05 each.
REWARD: -0.10228501220792252
BALANCE: 11811.445508026114
==================================
TICK: 1434 / TRADE: 152
--------------------------------
BUY: 483679177.2328465 DLTBTC for 2.4420000000000007e-05 each.
SELL: 483679177.2328465 DLTBTC for 2.443e-05 each.
REWARD: -0.002089960201679064
BALANCE: 11786.760056990039
==================================
TICK: 1459 / TRADE: 153
--------------------------------
BUY: 518555215.88165575 DLTBTC for 2.2730000000000008e-05 each.
SELL: 518555215.88165575 DLTBTC for 2.2800000000000005e-05 each.
REWARD: 0.0005734986801584352
BALANCE: 11793.519748326067
==================================
TICK: 1462 / TRADE: 154
--------------------------------
BUY: 509659453.255232 DLTBTC for 2.314e-05 each.
SELL: 509659453.255232 DLTBTC for 2.34e-05 each.
REWARD: 0.00870944522471917
BALANCE: 11896.234762580756
==================================
TICK: 1466 / TRADE: 155
--------------------------------
BUY: 500472644.6184584 DLTBTC for 2.377e-05 each.
SELL: 500472644.6184584 DLTBTC for 2.307e-05 each.
REWARD: -0.031873746450357565
BALANCE: 11517.057192044327
==================================
TICK: 1504 / TRADE: 156
--------------------------------
BUY: 479278285.14541525 DLTBTC for 2.403e-05 each.
SELL: 479278285.14541525 DLTBTC for 2.4020000000000007e-05 each.
REWARD: -0.0029135442675817247
BALANCE: 11483.501736083035
==================================
TICK: 1518 / TRADE: 157
--------------------------------
BUY: 495619410.2754869 DLTBTC for 2.3170000000000007e-05 each.
SELL: 495619410.2754869 DLTBTC for 2.3170000000000007e-05 each.
REWARD: -0.002498437499999895
BALANCE: 11454.810924714291
==================================
TICK: 1521 / TRADE: 158
--------------------------------
BUY: 494381136.1551268 DLTBTC for 2.3170000000000007e-05 each.
SELL: 494381136.1551268 DLTBTC for 2.46e-05 each.
REWARD: 0.05906510304272761
BALANCE: 12131.390512317503
==================================
TICK: 1524 / TRADE: 159
--------------------------------
BUY: 494351691.61848015 DLTBTC for 2.454e-05 each.
SELL: 494351691.61848015 DLTBTC for 2.4620000000000005e-05 each.
REWARD: 0.0007534013345562585
BALANCE: 12140.530318119507
==================================
TICK: 1526 / TRADE: 160
--------------------------------
BUY: 501882195.8710005 DLTBTC for 2.4190000000000007e-05 each.
SELL: 501882195.8710005 DLTBTC for 2.549e-05 each.
REWARD: 0.05110850881045881
BALANCE: 12761.01471884676
==================================
TICK: 1543 / TRADE: 161
--------------------------------
BUY: 571730050.1275429 DLTBTC for 2.2320000000000007e-05 each.
SELL: 571730050.1275429 DLTBTC for 2.1899999999999997e-05 each.
REWARD: -0.021268628192204653
BALANCE: 12489.605441436357
==================================
TICK: 1573 / TRADE: 162
--------------------------------
BUY: 562594839.7043402 DLTBTC for 2.2200000000000008e-05 each.
SELL: 562594839.7043402 DLTBTC for 2.233e-05 each.
REWARD: 0.0033427878659906263
BALANCE: 12531.355542957
==================================
TICK: 1591 / TRADE: 163
--------------------------------
BUY: 566260982.5104834 DLTBTC for 2.2130000000000007e-05 each.
SELL: 566260982.5104834 DLTBTC for 2.1800000000000005e-05 each.
REWARD: -0.01737306540894712
BALANCE: 12313.647483446437
==================================
TICK: 1604 / TRADE: 164
--------------------------------
BUY: 576211861.649342 DLTBTC for 2.137e-05 each.
SELL: 576211861.649342 DLTBTC for 2.117e-05 each.
REWARD: -0.011833969203322359
BALANCE: 12167.928158346764
==================================
TICK: 1613 / TRADE: 165
--------------------------------
BUY: 562029014.2423447 DLTBTC for 2.165e-05 each.
SELL: 562029014.2423447 DLTBTC for 2.121e-05 each.
REWARD: -0.02277098657621257
BALANCE: 11890.852429592731
==================================
TICK: 1618 / TRADE: 166
--------------------------------
BUY: 565961562.5698587 DLTBTC for 2.101e-05 each.
SELL: 565961562.5698587 DLTBTC for 2.076e-05 each.
REWARD: -0.014367804021894193
BALANCE: 11720.006992231078
==================================
TICK: 1660 / TRADE: 167
--------------------------------
BUY: 590428563.8403565 DLTBTC for 1.985e-05 each.
SELL: 590428563.8403565 DLTBTC for 1.994e-05 each.
REWARD: 0.002024239609571765
BALANCE: 11743.73109460921
==================================
TICK: 1668 / TRADE: 168
--------------------------------
BUY: 585430263.9386445 DLTBTC for 2.006e-05 each.
SELL: 585430263.9386445 DLTBTC for 2.004e-05 each.
REWARD: -0.0034929555084745045
BALANCE: 11702.71076439225
==================================
TICK: 1677 / TRADE: 169
--------------------------------
BUY: 592842490.5973784 DLTBTC for 1.974e-05 each.
SELL: 592842490.5973784 DLTBTC for 1.992e-05 each.
REWARD: 0.006597321428571279
BALANCE: 11779.917308890546
==================================
TICK: 1725 / TRADE: 170
--------------------------------
BUY: 599486885.9486283 DLTBTC for 1.965e-05 each.
SELL: 599486885.9486283 DLTBTC for 1.9860000000000006e-05 each.
REWARD: 0.008161884541985076
BALANCE: 11876.063633879843
==================================
TICK: 1729 / TRADE: 171
--------------------------------
BUY: 589382810.6143843 DLTBTC for 2.015e-05 each.
SELL: 589382810.6143843 DLTBTC for 2.009e-05 each.
REWARD: -0.005468665477667334
BALANCE: 11811.117414674663
==================================
TICK: 1733 / TRADE: 172
--------------------------------
BUY: 590851296.3819239 DLTBTC for 1.9990000000000007e-05 each.
SELL: 590851296.3819239 DLTBTC for 2.004e-05 each.
REWARD: -3.4360930467602913e-06
BALANCE: 11811.076830576241
==================================
TICK: 1735 / TRADE: 173
--------------------------------
BUY: 591441003.0333622 DLTBTC for 1.997e-05 each.
SELL: 591441003.0333622 DLTBTC for 1.974e-05 each.
REWARD: -0.013986938219829548
BALANCE: 11645.87602863731
==================================
TICK: 1741 / TRADE: 174
--------------------------------
BUY: 595696983.5620108 DLTBTC for 1.955e-05 each.
SELL: 595696983.5620108 DLTBTC for 1.9460000000000007e-05 each.
REWARD: -0.007090516304347427
BALANCE: 11563.300754777849
==================================
TICK: 1748 / TRADE: 175
--------------------------------
BUY: 597586602.3141005 DLTBTC for 1.9350000000000006e-05 each.
SELL: 597586602.3141005 DLTBTC for 1.912e-05 each.
REWARD: -0.014355045219638374
BALANCE: 11397.309049554735
==================================
TICK: 1752 / TRADE: 176
--------------------------------
BUY: 595470692.2442389 DLTBTC for 1.9140000000000006e-05 each.
SELL: 595470692.2442389 DLTBTC for 1.904e-05 each.
REWARD: -0.007710044409613537
BALANCE: 11309.435290632578
==================================
TICK: 1757 / TRADE: 177
--------------------------------
BUY: 593671143.8652272 DLTBTC for 1.905e-05 each.
SELL: 593671143.8652272 DLTBTC for 1.866e-05 each.
REWARD: -0.022919729330708405
BALANCE: 11050.226094888118
==================================
TICK: 1766 / TRADE: 178
--------------------------------
BUY: 585287399.0936503 DLTBTC for 1.888e-05 each.
SELL: 585287399.0936503 DLTBTC for 1.8970000000000006e-05 each.
REWARD: 0.0022566017280196693
BALANCE: 11075.16205418885
==================================
TICK: 1774 / TRADE: 179
--------------------------------
BUY: 659235836.5588601 DLTBTC for 1.6800000000000002e-05 each.
SELL: 659235836.5588601 DLTBTC for 1.734e-05 each.
REWARD: 0.029564112723214242
BALANCE: 11402.589393586753
==================================
TICK: 1778 / TRADE: 180
--------------------------------
BUY: 669952373.3012193 DLTBTC for 1.702e-05 each.
SELL: 669952373.3012193 DLTBTC for 1.734e-05 each.
REWARD: 0.016255998457696874
BALANCE: 11587.94986918265
==================================
TICK: 1783 / TRADE: 181
--------------------------------
BUY: 668664158.6371984 DLTBTC for 1.7330000000000002e-05 each.
SELL: 668664158.6371984 DLTBTC for 1.698e-05 each.
REWARD: -0.02264417015291398
BALANCE: 11325.55036062144
==================================
TICK: 1799 / TRADE: 182
--------------------------------
BUY: 647544331.6535984 DLTBTC for 1.7490000000000007e-05 each.
SELL: 647544331.6535984 DLTBTC for 1.7290000000000002e-05 each.
REWARD: -0.013904973377644625
BALANCE: 11168.068884369826
==================================
TICK: 1808 / TRADE: 183
--------------------------------
BUY: 639637393.148329 DLTBTC for 1.7460000000000002e-05 each.
SELL: 639637393.148329 DLTBTC for 1.755e-05 each.
REWARD: 0.0026433231314431094
BALANCE: 11197.589699185432
==================================
TICK: 1810 / TRADE: 184
--------------------------------
BUY: 636588385.3999677 DLTBTC for 1.759e-05 each.
SELL: 636588385.3999677 DLTBTC for 1.7970000000000002e-05 each.
REWARD: 0.01905077192296778
BALANCE: 11410.912426631587
==================================
TICK: 1812 / TRADE: 185
--------------------------------
BUY: 648715885.5390328 DLTBTC for 1.759e-05 each.
SELL: 648715885.5390328 DLTBTC for 1.759e-05 each.
REWARD: -0.002498437499999895
BALANCE: 11382.402975115676
==================================
TICK: 1820 / TRADE: 186
--------------------------------
BUY: 666417036.0137982 DLTBTC for 1.7080000000000002e-05 each.
SELL: 666417036.0137982 DLTBTC for 1.773e-05 each.
REWARD: 0.03546268753659243
BALANCE: 11786.053575237784
==================================
TICK: 1826 / TRADE: 187
--------------------------------
BUY: 659175255.885782 DLTBTC for 1.788e-05 each.
SELL: 659175255.885782 DLTBTC for 1.8380000000000007e-05 each.
REWARD: 0.025395901496085393
BALANCE: 12085.371030862107
==================================
TICK: 1835 / TRADE: 188
--------------------------------
BUY: 644897066.7482445 DLTBTC for 1.8740000000000007e-05 each.
SELL: 644897066.7482445 DLTBTC for 1.8990000000000006e-05 each.
REWARD: 0.010808680462913722
BALANCE: 12215.99794461045
==================================
TICK: 1838 / TRADE: 189
--------------------------------
BUY: 648751882.3478731 DLTBTC for 1.883e-05 each.
SELL: 648751882.3478731 DLTBTC for 1.893e-05 each.
REWARD: 0.002798968567445659
BALANCE: 12250.190138877395
==================================
TICK: 1851 / TRADE: 190
--------------------------------
BUY: 639696612.9962085 DLTBTC for 1.915e-05 each.
SELL: 639696612.9962085 DLTBTC for 1.892e-05 each.
REWARD: -0.014478874020887766
BALANCE: 12072.821179124667
==================================
TICK: 1853 / TRADE: 191
--------------------------------
BUY: 630763906.9553115 DLTBTC for 1.9140000000000006e-05 each.
SELL: 630763906.9553115 DLTBTC for 1.9520000000000006e-05 each.
REWARD: 0.017305668756530945
BALANCE: 12281.74942340743
==================================
TICK: 1863 / TRADE: 192
--------------------------------
BUY: 601162477.8956156 DLTBTC for 2.0430000000000006e-05 each.
SELL: 601162477.8956156 DLTBTC for 2.053e-05 each.
REWARD: 0.002384095845570089
BALANCE: 12311.030291184108
==================================
TICK: 1888 / TRADE: 193
--------------------------------
BUY: 608553153.2962978 DLTBTC for 2.0230000000000005e-05 each.
SELL: 608553153.2962978 DLTBTC for 2.0710000000000007e-05 each.
REWARD: 0.021169419642857346
BALANCE: 12571.647657654114
==================================
TICK: 1894 / TRADE: 194
--------------------------------
BUY: 626078070.6003045 DLTBTC for 2.008e-05 each.
SELL: 626078070.6003045 DLTBTC for 2.0030000000000006e-05 each.
REWARD: -0.004982256131722762
BALANCE: 12509.012489025909
==================================
TICK: 1919 / TRADE: 195
--------------------------------
BUY: 666791710.5024471 DLTBTC for 1.876e-05 each.
SELL: 666791710.5024471 DLTBTC for 2.013e-05 each.
REWARD: 0.07034682585954166
BALANCE: 13388.981812266245
==================================
TICK: 1951 / TRADE: 196
--------------------------------
BUY: 741771845.5549166 DLTBTC for 1.805e-05 each.
SELL: 741771845.5549166 DLTBTC for 1.802e-05 each.
REWARD: -0.004156334833794961
BALANCE: 13333.332720770875
==================================
TICK: 1955 / TRADE: 197
--------------------------------
BUY: 738279774.1290625 DLTBTC for 1.8060000000000007e-05 each.
SELL: 738279774.1290625 DLTBTC for 1.822e-05 each.
REWARD: 0.006338785645071621
BALANCE: 13417.849858822261
==================================
TICK: 1963 / TRADE: 198
--------------------------------
BUY: 717915990.306167 DLTBTC for 1.869e-05 each.
SELL: 717915990.306167 DLTBTC for 1.6640000000000007e-05 each.
REWARD: -0.11190872124130502
BALANCE: 11916.275439313637
==================================
TICK: 1980 / TRADE: 199
--------------------------------
BUY: 723513991.4580228 DLTBTC for 1.647e-05 each.
SELL: 723513991.4580228 DLTBTC for 1.662e-05 each.
REWARD: 0.006586276183971007
BALANCE: 11994.759320441226
==================================
TICK: 1985 / TRADE: 200
--------------------------------
BUY: 782437007.2042547 DLTBTC for 1.533e-05 each.
SELL: 782437007.2042547 DLTBTC for 1.601e-05 each.
REWARD: 0.04174820715101113
BALANCE: 12495.519017277527
==================================
TICK: 1987 / TRADE: 201
--------------------------------
BUY: 830819083.5955801 DLTBTC for 1.5040000000000003e-05 each.
SELL: 830819083.5955801 DLTBTC for 1.6720000000000006e-05 each.
REWARD: 0.10892460937500026
BALANCE: 13856.58854517237
==================================
TICK: 1993 / TRADE: 202
--------------------------------
BUY: 861192575.8342057 DLTBTC for 1.609e-05 each.
SELL: 861192575.8342057 DLTBTC for 1.677e-05 each.
REWARD: 0.039658247552827985
BALANCE: 14406.116563934496
==================================
TICK: 1996 / TRADE: 203
--------------------------------
BUY: 882727730.6332408 DLTBTC for 1.6320000000000006e-05 each.
SELL: 882727730.6332408 DLTBTC for 1.6150000000000006e-05 each.
REWARD: -0.012889078776041507
BALANCE: 14220.434992685108
==================================
TICK: 1998 / TRADE: 204
--------------------------------
BUY: 877804629.1780931 DLTBTC for 1.62e-05 each.
SELL: 877804629.1780931 DLTBTC for 1.5920000000000007e-05 each.
REWARD: -0.019739205246913083
BALANCE: 13939.734907664111
==================================
TICK: 2002 / TRADE: 205
--------------------------------
BUY: 875611489.174881 DLTBTC for 1.5920000000000007e-05 each.
SELL: 875611489.174881 DLTBTC for 1.5910000000000002e-05 each.
REWARD: -0.0031250088332288595
BALANCE: 13896.173112944793
==================================
TICK: 2004 / TRADE: 206
--------------------------------
BUY: 873973151.7575341 DLTBTC for 1.59e-05 each.
SELL: 873973151.7575341 DLTBTC for 1.682e-05 each.
REWARD: 0.055218634040880676
BALANCE: 14663.500810637217
==================================
TICK: 2007 / TRADE: 207
--------------------------------
BUY: 916468800.6648257 DLTBTC for 1.6000000000000006e-05 each.
SELL: 916468800.6648257 DLTBTC for 1.5630000000000005e-05 each.
REWARD: -0.025565661132812445
BALANCE: 14288.618717891746
==================================
TICK: 2026 / TRADE: 208
--------------------------------
BUY: 837060264.6685264 DLTBTC for 1.707e-05 each.
SELL: 837060264.6685264 DLTBTC for 1.6920000000000007e-05 each.
REWARD: -0.011263829086115451
BALANCE: 14127.674158776743
==================================
TICK: 2028 / TRADE: 209
--------------------------------
BUY: 831528790.9815621 DLTBTC for 1.699e-05 each.
SELL: 831528790.9815621 DLTBTC for 1.705e-05 each.
REWARD: 0.0010242284064156948
BALANCE: 14142.144123966747
==================================
TICK: 2031 / TRADE: 210
--------------------------------
BUY: 827509896.0776329 DLTBTC for 1.709e-05 each.
SELL: 827509896.0776329 DLTBTC for 1.694e-05 each.
REWARD: -0.011253571167349263
BALANCE: 13982.994498608778
==================================
TICK: 2036 / TRADE: 211
--------------------------------
BUY: 885560132.907459 DLTBTC for 1.579e-05 each.
SELL: 885560132.907459 DLTBTC for 1.6250000000000002e-05 each.
REWARD: 0.026561139368271203
BALANCE: 14354.398764272095
==================================
TICK: 2048 / TRADE: 212
--------------------------------
BUY: 989276275.9663743 DLTBTC for 1.4510000000000003e-05 each.
SELL: 989276275.9663743 DLTBTC for 1.4590000000000006e-05 each.
REWARD: 0.0030012265248107184
BALANCE: 14397.479566591139
==================================
TICK: 2055 / TRADE: 213
--------------------------------
BUY: 1058638203.425819 DLTBTC for 1.36e-05 each.
SELL: 1058638203.425819 DLTBTC for 1.5030000000000003e-05 each.
REWARD: 0.10238591796875052
BALANCE: 15871.578728452901
==================================
TICK: 2064 / TRADE: 214
--------------------------------
BUY: 1028618193.6780878 DLTBTC for 1.5430000000000006e-05 each.
SELL: 1028618193.6780878 DLTBTC for 1.489e-05 each.
REWARD: -0.03740775984283895
BALANCE: 15277.858523052224
==================================
TICK: 2070 / TRADE: 215
--------------------------------
BUY: 1032985701.3557959 DLTBTC for 1.4790000000000002e-05 each.
SELL: 1032985701.3557959 DLTBTC for 1.476e-05 each.
REWARD: -0.004521767241379426
BALANCE: 15208.775602864256
==================================
TICK: 2072 / TRADE: 216
--------------------------------
BUY: 1044558763.9329847 DLTBTC for 1.456e-05 each.
SELL: 1044558763.9329847 DLTBTC for 1.4499999999999998e-05 each.
REWARD: -0.0066090208619505875
BALANCE: 15108.2604876202
==================================
TICK: 2079 / TRADE: 217
--------------------------------
BUY: 1054309873.5254848 DLTBTC for 1.4330000000000003e-05 each.
SELL: 1054309873.5254848 DLTBTC for 1.4170000000000003e-05 each.
REWARD: -0.013635928777041117
BALANCE: 14902.245323666028
==================================
TICK: 2082 / TRADE: 218
--------------------------------
BUY: 1030584047.2798083 DLTBTC for 1.446e-05 each.
SELL: 1030584047.2798083 DLTBTC for 1.4840000000000004e-05 each.
REWARD: 0.02371529650760751
BALANCE: 15255.656490145875
==================================
TICK: 2086 / TRADE: 219
--------------------------------
BUY: 1039213657.366885 DLTBTC for 1.4680000000000003e-05 each.
SELL: 1039213657.366885 DLTBTC for 1.341e-05 each.
REWARD: -0.08879455360183941
BALANCE: 13901.037282200368
==================================
TICK: 2112 / TRADE: 220
--------------------------------
BUY: 1162294087.1404989 DLTBTC for 1.196e-05 each.
SELL: 1162294087.1404989 DLTBTC for 1.164e-05 each.
REWARD: -0.02918744251672234
BALANCE: 13495.301555603332
==================================
TICK: 2121 / TRADE: 221
--------------------------------
BUY: 1138844013.1310825 DLTBTC for 1.1850000000000003e-05 each.
SELL: 1138844013.1310825 DLTBTC for 1.1990000000000004e-05 each.
REWARD: 0.00928639108649798
BALANCE: 13620.624203678888
==================================
TICK: 2124 / TRADE: 222
--------------------------------
BUY: 1224876277.309252 DLTBTC for 1.1120000000000004e-05 each.
SELL: 1224876277.309252 DLTBTC for 1.152e-05 each.
REWARD: 0.03338291366906443
BALANCE: 14075.32032558907
==================================
TICK: 2137 / TRADE: 223
--------------------------------
BUY: 1296070011.564371 DLTBTC for 1.086e-05 each.
SELL: 1296070011.564371 DLTBTC for 1.153e-05 each.
REWARD: 0.0590417141459485
BALANCE: 14906.351364765158
==================================
TICK: 2140 / TRADE: 224
--------------------------------
BUY: 1339294821.6320896 DLTBTC for 1.113e-05 each.
SELL: 1339294821.6320896 DLTBTC for 1.1080000000000002e-05 each.
REWARD: -0.00697957659478865
BALANCE: 14802.311343665948
==================================
TICK: 2149 / TRADE: 225
--------------------------------
BUY: 1755908818.9402075 DLTBTC for 8.429999999999999e-06 each.
SELL: 1755908818.9402075 DLTBTC for 8.63e-06 each.
REWARD: 0.02116707999703471
BALANCE: 15115.63305201834
==================================
TICK: 2153 / TRADE: 226
--------------------------------
BUY: 1751521790.500387 DLTBTC for 8.63e-06 each.
SELL: 1751521790.500387 DLTBTC for 9.9e-06 each.
REWARD: 0.14429495582271157
BALANCE: 17296.742655491646
==================================
TICK: 2165 / TRADE: 227
--------------------------------
BUY: 1689135024.950356 DLTBTC for 1.024e-05 each.
SELL: 1689135024.950356 DLTBTC for 1.0900000000000002e-05 each.
REWARD: 0.061793655395508074
BALANCE: 18365.57161060988
==================================
TICK: 2171 / TRADE: 228
--------------------------------
BUY: 1734237168.1406875 DLTBTC for 1.059e-05 each.
SELL: 1734237168.1406875 DLTBTC for 1.059e-05 each.
REWARD: -0.002498437499999895
BALANCE: 18319.686377789
==================================
TICK: 2176 / TRADE: 229
--------------------------------
BUY: 1932456368.965084 DLTBTC for 9.48e-06 each.
SELL: 1932456368.965084 DLTBTC for 1.0280000000000003e-05 each.
REWARD: 0.08167890954641388
BALANCE: 19816.018384359097
==================================
TICK: 2181 / TRADE: 230
--------------------------------
BUY: 2019981486.6828847 DLTBTC for 9.81e-06 each.
SELL: 2019981486.6828847 DLTBTC for 1.054e-05 each.
REWARD: 0.07172950751783924
BALANCE: 21237.411624033623
==================================
TICK: 2184 / TRADE: 231
--------------------------------
BUY: 2007316788.6610222 DLTBTC for 1.0580000000000004e-05 each.
SELL: 2007316788.6610222 DLTBTC for 1.2170000000000004e-05 each.
REWARD: 0.14740964230860132
BALANCE: 24368.01087509295
==================================
TICK: 2196 / TRADE: 232
--------------------------------
BUY: 2065085667.3807585 DLTBTC for 1.18e-05 each.
SELL: 2065085667.3807585 DLTBTC for 1.2010000000000004e-05 each.
REWARD: 0.015253708951271427
BALANCE: 24739.713420703036
==================================
TICK: 2207 / TRADE: 233
--------------------------------
BUY: 2432616855.5263557 DLTBTC for 1.017e-05 each.
SELL: 2432616855.5263557 DLTBTC for 9.67e-06 each.
REWARD: -0.051539812254178696
BALANCE: 23464.633235777816
==================================
TICK: 2209 / TRADE: 234
--------------------------------
BUY: 2197063037.057848 DLTBTC for 1.068e-05 each.
SELL: 2197063037.057848 DLTBTC for 1.282e-05 each.
REWARD: 0.19737547109082398
BALANCE: 28095.976274662866
==================================
TICK: 2219 / TRADE: 235
--------------------------------
BUY: 2224542856.2678437 DLTBTC for 1.263e-05 each.
SELL: 2224542856.2678437 DLTBTC for 1.301e-05 each.
REWARD: 0.027513485995645626
BALANCE: 28868.994524429796
==================================
TICK: 2224 / TRADE: 236
--------------------------------
BUY: 2389817427.519023 DLTBTC for 1.208e-05 each.
SELL: 2389817427.519023 DLTBTC for 1.214e-05 each.
REWARD: 0.0024560404594373697
BALANCE: 28939.89794300507
==================================
TICK: 2231 / TRADE: 237
--------------------------------
BUY: 2440126302.1083536 DLTBTC for 1.186e-05 each.
SELL: 2440126302.1083536 DLTBTC for 1.19e-05 each.
REWARD: 0.0008658173482294362
BALANCE: 28964.954608700114
==================================
TICK: 2233 / TRADE: 238
--------------------------------
BUY: 2446364409.518591 DLTBTC for 1.184e-05 each.
SELL: 2446364409.518591 DLTBTC for 1.2450000000000004e-05 each.
REWARD: 0.048893112595017385
BALANCE: 30381.141395692855
==================================
TICK: 2236 / TRADE: 239
--------------------------------
BUY: 2563809400.480409 DLTBTC for 1.1850000000000003e-05 each.
SELL: 2563809400.480409 DLTBTC for 1.232e-05 each.
REWARD: 0.03706491561181413
BALANCE: 31507.215837714804
==================================
TICK: 2242 / TRADE: 240
--------------------------------
BUY: 2584677263.143133 DLTBTC for 1.2190000000000004e-05 each.
SELL: 2584677263.143133 DLTBTC for 1.2010000000000004e-05 each.
REWARD: -0.017227746872436334
BALANCE: 30964.417498607436
==================================
TICK: 2244 / TRADE: 241
--------------------------------
BUY: 2573933291.654815 DLTBTC for 1.2030000000000003e-05 each.
SELL: 2573933291.654815 DLTBTC for 1.1850000000000003e-05 each.
REWARD: -0.01742364791147122
BALANCE: 30424.9043903279
==================================
TICK: 2248 / TRADE: 242
--------------------------------
BUY: 2576198508.9185343 DLTBTC for 1.1810000000000004e-05 each.
SELL: 2576198508.9185343 DLTBTC for 1.2490000000000002e-05 each.
REWARD: 0.05493603011219306
BALANCE: 32096.32785407555
==================================
TICK: 2253 / TRADE: 243
--------------------------------
BUY: 2630846545.4160285 DLTBTC for 1.22e-05 each.
SELL: 2630846545.4160285 DLTBTC for 1.2370000000000004e-05 each.
REWARD: 0.011401174436475703
BALANCE: 32462.26368671018
==================================
TICK: 2258 / TRADE: 244
--------------------------------
BUY: 2744062864.472542 DLTBTC for 1.1830000000000004e-05 each.
SELL: 2744062864.472542 DLTBTC for 1.1830000000000004e-05 each.
REWARD: -0.002498437499999895
BALANCE: 32381.158749780418
==================================
TICK: 2260 / TRADE: 245
--------------------------------
BUY: 2739522736.8680553 DLTBTC for 1.182e-05 each.
SELL: 2739522736.8680553 DLTBTC for 1.184e-05 each.
REWARD: -0.0008106175972926177
BALANCE: 32354.91001267712
==================================
TICK: 2263 / TRADE: 246
--------------------------------
BUY: 2732678210.530162 DLTBTC for 1.184e-05 each.
SELL: 2732678210.530162 DLTBTC for 1.189e-05 each.
REWARD: 0.001713984638936017
BALANCE: 32410.365831433006
==================================
TICK: 2272 / TRADE: 247
--------------------------------
BUY: 2875808858.1573205 DLTBTC for 1.127e-05 each.
SELL: 2875808858.1573205 DLTBTC for 1.214e-05 each.
REWARD: 0.07450478870896204
BALANCE: 34825.09328968408
==================================
TICK: 2286 / TRADE: 248
--------------------------------
BUY: 2948780126.1375165 DLTBTC for 1.1810000000000004e-05 each.
SELL: 2948780126.1375165 DLTBTC for 1.192e-05 each.
REWARD: 0.006792432260795733
BALANCE: 35061.64037683015
==================================
TICK: 2288 / TRADE: 249
--------------------------------
BUY: 2895263449.779534 DLTBTC for 1.211e-05 each.
SELL: 2895263449.779534 DLTBTC for 1.2560000000000003e-05 each.
REWARD: 0.03456809454995913
BALANCE: 36273.654476453084
==================================
TICK: 2293 / TRADE: 250
--------------------------------
BUY: 2773215174.040755 DLTBTC for 1.3080000000000004e-05 each.
SELL: 2773215174.040755 DLTBTC for 1.369e-05 each.
REWARD: 0.044021130781727535
BALANCE: 37870.46176409222
==================================
TICK: 2296 / TRADE: 251
--------------------------------
BUY: 2866802555.949449 DLTBTC for 1.321e-05 each.
SELL: 2866802555.949449 DLTBTC for 1.309e-05 each.
REWARD: -0.011559768877744014
BALANCE: 37432.68797880587
==================================
TICK: 2300 / TRADE: 252
--------------------------------
BUY: 3169575612.091944 DLTBTC for 1.1810000000000004e-05 each.
SELL: 3169575612.091944 DLTBTC for 1.448e-05 each.
REWARD: 0.22301631033022828
BALANCE: 45780.78793758185
==================================
TICK: 2311 / TRADE: 253
--------------------------------
BUY: 3401247246.4771056 DLTBTC for 1.3460000000000003e-05 each.
SELL: 3401247246.4771056 DLTBTC for 1.356e-05 each.
REWARD: 0.004912421062406969
BALANCE: 46005.68244450002
==================================
TICK: 2320 / TRADE: 254
--------------------------------
BUY: 3767869160.0737104 DLTBTC for 1.2210000000000003e-05 each.
SELL: 3767869160.0737104 DLTBTC for 1.321e-05 each.
REWARD: 0.07919702216420954
BALANCE: 49649.19549673667
==================================
TICK: 2324 / TRADE: 255
--------------------------------
BUY: 3848774844.7082677 DLTBTC for 1.2900000000000004e-05 each.
SELL: 3848774844.7082677 DLTBTC for 1.2730000000000003e-05 each.
REWARD: -0.01564380692829448
BALANCE: 48872.493068240576
==================================
TICK: 2327 / TRADE: 256
--------------------------------
BUY: 3839158921.307193 DLTBTC for 1.2730000000000003e-05 each.
SELL: 3839158921.307193 DLTBTC for 1.2730000000000003e-05 each.
REWARD: -0.002498437499999895
BALANCE: 48750.388198840395
==================================
TICK: 2331 / TRADE: 257
--------------------------------
BUY: 3687623918.2178807 DLTBTC for 1.3220000000000004e-05 each.
SELL: 3687623918.2178807 DLTBTC for 1.349e-05 each.
REWARD: 0.01787413601550658
BALANCE: 49621.75926831522
==================================
TICK: 2334 / TRADE: 258
--------------------------------
BUY: 3700354904.4232078 DLTBTC for 1.341e-05 each.
SELL: 3700354904.4232078 DLTBTC for 1.303e-05 each.
REWARD: -0.03076470101603268
BALANCE: 48095.160680535955
==================================
TICK: 2344 / TRADE: 259
--------------------------------
BUY: 3691109798.9666886 DLTBTC for 1.303e-05 each.
SELL: 3691109798.9666886 DLTBTC for 1.309e-05 each.
REWARD: 0.0020948160495011248
BALANCE: 48195.91119503288
==================================
TICK: 2347 / TRADE: 260
--------------------------------
BUY: 3701682887.483324 DLTBTC for 1.302e-05 each.
SELL: 3701682887.483324 DLTBTC for 1.305e-05 each.
REWARD: -0.00020004680299534616
BALANCE: 48186.26975708087
==================================
TICK: 2351 / TRADE: 261
--------------------------------
BUY: 3667143817.129442 DLTBTC for 1.314e-05 each.
SELL: 3667143817.129442 DLTBTC for 1.428e-05 each.
REWARD: 0.08404279394977188
BALANCE: 52235.97849748334
==================================
TICK: 2360 / TRADE: 262
--------------------------------
BUY: 3855053763.6519065 DLTBTC for 1.355e-05 each.
SELL: 3855053763.6519065 DLTBTC for 1.65e-05 each.
REWARD: 0.21466979935424368
BALANCE: 63449.465520610676
==================================
TICK: 2363 / TRADE: 263
--------------------------------
BUY: 4077729146.5688095 DLTBTC for 1.556e-05 each.
SELL: 4077729146.5688095 DLTBTC for 1.599e-05 each.
REWARD: 0.02506747971561718
BALANCE: 65039.983710515335
==================================
TICK: 2365 / TRADE: 264
--------------------------------
BUY: 4103469003.8180017 DLTBTC for 1.5850000000000002e-05 each.
SELL: 4103469003.8180017 DLTBTC for 1.497e-05 each.
REWARD: -0.05788022772082024
BALANCE: 61275.454642392266
==================================
TICK: 2368 / TRADE: 265
--------------------------------
BUY: 4196948948.1090593 DLTBTC for 1.4599999999999999e-05 each.
SELL: 4196948948.1090593 DLTBTC for 1.497e-05 each.
REWARD: 0.022780711686644084
BALANCE: 62671.35310806864
==================================
TICK: 2390 / TRADE: 266
--------------------------------
BUY: 4604801844.825027 DLTBTC for 1.3610000000000004e-05 each.
SELL: 4604801844.825027 DLTBTC for 1.446e-05 each.
REWARD: 0.05979960277369578
BALANCE: 66419.07512922116
==================================
TICK: 2409 / TRADE: 267
--------------------------------
BUY: 4670821035.810208 DLTBTC for 1.422e-05 each.
SELL: 4670821035.810208 DLTBTC for 1.4490000000000004e-05 each.
REWARD: 0.01644146558544346
BALANCE: 67511.10206717523
==================================
TICK: 2411 / TRADE: 268
--------------------------------
BUY: 4652729294.774308 DLTBTC for 1.4510000000000003e-05 each.
SELL: 4652729294.774308 DLTBTC for 1.474e-05 each.
REWARD: 0.013313096571329952
BALANCE: 68409.88388863245
==================================
TICK: 2413 / TRADE: 269
--------------------------------
BUY: 4717923026.802238 DLTBTC for 1.4499999999999998e-05 each.
SELL: 4717923026.802238 DLTBTC for 1.416e-05 each.
REWARD: -0.025888129310344676
BALANCE: 66638.87996841787
==================================
TICK: 2420 / TRADE: 270
--------------------------------
BUY: 4699497882.116916 DLTBTC for 1.418e-05 each.
SELL: 4699497882.116916 DLTBTC for 1.4830000000000004e-05 each.
REWARD: 0.043226246253526446
BALANCE: 69519.4286039919
==================================
TICK: 2433 / TRADE: 271
--------------------------------
BUY: 4913033823.603666 DLTBTC for 1.4150000000000003e-05 each.
SELL: 4913033823.603666 DLTBTC for 1.4690000000000003e-05 each.
REWARD: 0.035568759938162664
BALANCE: 71992.14847104553
==================================
TICK: 2437 / TRADE: 272
--------------------------------
BUY: 5006408099.516379 DLTBTC for 1.438e-05 each.
SELL: 5006408099.516379 DLTBTC for 1.3620000000000003e-05 each.
REWARD: -0.055217574321974605
BALANCE: 68016.91666224693
==================================
TICK: 2446 / TRADE: 273
--------------------------------
BUY: 5276719678.995108 DLTBTC for 1.289e-05 each.
SELL: 5276719678.995108 DLTBTC for 1.275e-05 each.
REWARD: -0.013332434299844764
BALANCE: 67110.08558956951
==================================
TICK: 2458 / TRADE: 274
--------------------------------
BUY: 5364515234.977579 DLTBTC for 1.251e-05 each.
SELL: 5364515234.977579 DLTBTC for 1.2690000000000004e-05 each.
REWARD: 0.011854102967626456
BALANCE: 67905.6154543145
==================================
TICK: 2460 / TRADE: 275
--------------------------------
BUY: 5393615206.855798 DLTBTC for 1.259e-05 each.
SELL: 5393615206.855798 DLTBTC for 1.289e-05 each.
REWARD: 0.021270463909849324
BALANCE: 69349.99939711159
==================================
TICK: 2463 / TRADE: 276
--------------------------------
BUY: 5456333548.159842 DLTBTC for 1.271e-05 each.
SELL: 5456333548.159842 DLTBTC for 1.198e-05 each.
REWARD: -0.059790029996065974
BALANCE: 65203.56085293113
==================================
TICK: 2466 / TRADE: 277
--------------------------------
BUY: 5511712667.196205 DLTBTC for 1.1830000000000004e-05 each.
SELL: 5511712667.196205 DLTBTC for 1.36e-05 each.
REWARD: 0.14674735841081965
BALANCE: 74772.0111670779
==================================
TICK: 2473 / TRADE: 278
--------------------------------
BUY: 6103837646.292073 DLTBTC for 1.225e-05 each.
SELL: 6103837646.292073 DLTBTC for 1.341e-05 each.
REWARD: 0.0919588533163267
BALANCE: 81647.95957415795
==================================
TICK: 2482 / TRADE: 279
--------------------------------
BUY: 5977156630.611856 DLTBTC for 1.366e-05 each.
SELL: 5977156630.611856 DLTBTC for 1.305e-05 each.
REWARD: -0.04704279717240101
BALANCE: 77807.01117237045
==================================
TICK: 2487 / TRADE: 280
--------------------------------
BUY: 5966795335.3044815 DLTBTC for 1.3040000000000002e-05 each.
SELL: 5966795335.3044815 DLTBTC for 1.339e-05 each.
REWARD: 0.02427499400881894
BALANCE: 79695.77590242385
==================================
TICK: 2491 / TRADE: 281
--------------------------------
BUY: 5729387196.435934 DLTBTC for 1.391e-05 each.
SELL: 5729387196.435934 DLTBTC for 1.351e-05 each.
REWARD: -0.03118288214414089
BALANCE: 77210.6319150727
==================================
TICK: 2496 / TRADE: 282
--------------------------------
BUY: 6055735836.476291 DLTBTC for 1.275e-05 each.
SELL: 6055735836.476291 DLTBTC for 1.236e-05 each.
REWARD: -0.0330102499999998
BALANCE: 74661.8896528982
==================================
TICK: 2506 / TRADE: 283
--------------------------------
BUY: 6089876806.924812 DLTBTC for 1.226e-05 each.
SELL: 6089876806.924812 DLTBTC for 1.287e-05 each.
REWARD: 0.047132553782626596
BALANCE: 78180.89518247596
==================================
TICK: 2512 / TRADE: 284
--------------------------------
BUY: 5945315223.001974 DLTBTC for 1.315e-05 each.
SELL: 5945315223.001974 DLTBTC for 1.1670000000000003e-05 each.
REWARD: -0.11476477305133037
BALANCE: 69208.48248990925
==================================
TICK: 2526 / TRADE: 285
--------------------------------
BUY: 5875083403.218102 DLTBTC for 1.178e-05 each.
SELL: 5875083403.218102 DLTBTC for 1.212e-05 each.
REWARD: 0.026291930178268252
BALANCE: 71028.10707927785
==================================
TICK: 2533 / TRADE: 286
--------------------------------
BUY: 5953739067.835528 DLTBTC for 1.193e-05 each.
SELL: 5953739067.835528 DLTBTC for 1.17e-05 each.
REWARD: -0.0217293980511315
BALANCE: 69484.70906773383
==================================
TICK: 2538 / TRADE: 287
--------------------------------
BUY: 5672221148.3864355 DLTBTC for 1.225e-05 each.
SELL: 5672221148.3864355 DLTBTC for 1.174e-05 each.
REWARD: -0.044027073979591824
BALANCE: 66425.5006411583
==================================
TICK: 2541 / TRADE: 288
--------------------------------
BUY: 5873165397.096225 DLTBTC for 1.131e-05 each.
SELL: 5873165397.096225 DLTBTC for 1.2130000000000002e-05 each.
REWARD: 0.0698226306918659
BALANCE: 71063.5038409482
==================================
TICK: 2561 / TRADE: 289
--------------------------------
BUY: 6477985764.899562 DLTBTC for 1.097e-05 each.
SELL: 6477985764.899562 DLTBTC for 1.117e-05 each.
REWARD: 0.015687552700547114
BALANCE: 72178.3163025386
==================================
TICK: 2576 / TRADE: 290
--------------------------------
BUY: 6676995032.612267 DLTBTC for 1.081e-05 each.
SELL: 6676995032.612267 DLTBTC for 1.095e-05 each.
REWARD: 0.01042017663043504
BALANCE: 72930.42710729847
==================================
TICK: 2581 / TRADE: 291
--------------------------------
BUY: 6636071620.31833 DLTBTC for 1.0990000000000003e-05 each.
SELL: 6636071620.31833 DLTBTC for 1.1140000000000003e-05 each.
REWARD: 0.011116233507734385
BALANCE: 73741.138764842
==================================
TICK: 2583 / TRADE: 292
--------------------------------
BUY: 6631397370.939027 DLTBTC for 1.1120000000000004e-05 each.
SELL: 6631397370.939027 DLTBTC for 1.097e-05 each.
REWARD: -0.01595394418839957
BALANCE: 72564.6767525987
==================================
TICK: 2591 / TRADE: 293
--------------------------------
BUY: 6737667293.648904 DLTBTC for 1.077e-05 each.
SELL: 6737667293.648904 DLTBTC for 1.097e-05 each.
REWARD: 0.016025268396007597
BALANCE: 73727.54517362862
==================================
TICK: 2594 / TRADE: 294
--------------------------------
BUY: 6948873249.163866 DLTBTC for 1.061e-05 each.
SELL: 6948873249.163866 DLTBTC for 1.059e-05 each.
REWARD: -0.004378742047596473
BALANCE: 73404.71127151078
==================================
TICK: 2596 / TRADE: 295
--------------------------------
BUY: 6938063447.212737 DLTBTC for 1.0580000000000004e-05 each.
SELL: 6938063447.212737 DLTBTC for 1.139e-05 each.
REWARD: 0.07386982957230592
BALANCE: 78827.1047829416
==================================
TICK: 2605 / TRADE: 296
--------------------------------
BUY: 7050724935.862398 DLTBTC for 1.118e-05 each.
SELL: 7050724935.862398 DLTBTC for 1.125e-05 each.
REWARD: 0.0037471000111808372
BALANCE: 79122.47782815513
==================================
TICK: 2610 / TRADE: 297
--------------------------------
BUY: 7077144707.348401 DLTBTC for 1.118e-05 each.
SELL: 7077144707.348401 DLTBTC for 1.172e-05 each.
REWARD: 0.045681423300536705
BALANCE: 82736.90523041041
==================================
TICK: 2613 / TRADE: 298
--------------------------------
BUY: 7400438750.483937 DLTBTC for 1.118e-05 each.
SELL: 7400438750.483937 DLTBTC for 1.126e-05 each.
REWARD: 0.004639319655635132
BALANCE: 83120.74818109228
==================================
TICK: 2617 / TRADE: 299
--------------------------------
BUY: 7388510949.430424 DLTBTC for 1.125e-05 each.
SELL: 7388510949.430424 DLTBTC for 1.129e-05 each.
REWARD: 0.0010482347222222632
BALANCE: 83207.87823547279
==================================
TICK: 2620 / TRADE: 300
--------------------------------
BUY: 7435914051.427417 DLTBTC for 1.119e-05 each.
SELL: 7435914051.427417 DLTBTC for 1.349e-05 each.
REWARD: 0.202528693308758
BALANCE: 100059.86108749734
==================================
TICK: 2632 / TRADE: 301
--------------------------------
BUY: 8663191436.146955 DLTBTC for 1.155e-05 each.
SELL: 8663191436.146955 DLTBTC for 1.2720000000000004e-05 each.
REWARD: 0.09854717532467583
BALANCE: 109920.47776104965
==================================
TICK: 2636 / TRADE: 302
--------------------------------
BUY: 9152412802.751842 DLTBTC for 1.2010000000000004e-05 each.
SELL: 9152412802.751842 DLTBTC for 1.2010000000000004e-05 each.
REWARD: -0.002498437499999895
BALANCE: 109645.84831739354
==================================
TICK: 2639 / TRADE: 303
--------------------------------
BUY: 9781074782.996748 DLTBTC for 1.121e-05 each.
SELL: 9781074782.996748 DLTBTC for 1.182e-05 each.
REWARD: 0.051781308541480886
BALANCE: 115323.45381940891
==================================
TICK: 2652 / TRADE: 304
--------------------------------
BUY: 10205615382.248575 DLTBTC for 1.13e-05 each.
SELL: 10205615382.248575 DLTBTC for 1.1670000000000003e-05 each.
REWARD: 0.03016311808628358
BALANCE: 118801.96877508181
==================================
TICK: 2662 / TRADE: 305
--------------------------------
BUY: 9966608118.714918 DLTBTC for 1.192e-05 each.
SELL: 9966608118.714918 DLTBTC for 1.392e-05 each.
REWARD: 0.16486759647651028
BALANCE: 138388.56382370697
==================================
TICK: 2671 / TRADE: 306
--------------------------------
BUY: 10905324178.3851 DLTBTC for 1.2690000000000004e-05 each.
SELL: 10905324178.3851 DLTBTC for 1.2850000000000002e-05 each.
REWARD: 0.01007841435185175
BALANCE: 139783.30111147996
==================================
TICK: 2674 / TRADE: 307
--------------------------------
BUY: 12155069661.867823 DLTBTC for 1.15e-05 each.
SELL: 12155069661.867823 DLTBTC for 1.224e-05 each.
REWARD: 0.06168861956521754
BALANCE: 148406.3399953163
==================================
TICK: 2678 / TRADE: 308
--------------------------------
BUY: 11834636363.262861 DLTBTC for 1.254e-05 each.
SELL: 11834636363.262861 DLTBTC for 1.309e-05 each.
REWARD: 0.04125163103070184
BALANCE: 154528.34357541997
==================================
TICK: 2692 / TRADE: 309
--------------------------------
BUY: 12177174434.62726 DLTBTC for 1.2690000000000004e-05 each.
SELL: 12177174434.62726 DLTBTC for 1.267e-05 each.
REWARD: -0.004070543981481656
BALANCE: 153899.3291565107
==================================
TICK: 2694 / TRADE: 310
--------------------------------
BUY: 12118057413.898481 DLTBTC for 1.27e-05 each.
SELL: 12118057413.898481 DLTBTC for 1.267e-05 each.
REWARD: -0.004854740403543167
BALANCE: 153152.1878651764
==================================
TICK: 2706 / TRADE: 311
--------------------------------
BUY: 12154935544.85527 DLTBTC for 1.26e-05 each.
SELL: 12154935544.85527 DLTBTC for 1.268e-05 each.
REWARD: 0.0038349057539683873
BALANCE: 153739.51207165341
==================================
TICK: 2709 / TRADE: 312
--------------------------------
BUY: 12172566276.457119 DLTBTC for 1.263e-05 each.
SELL: 12172566276.457119 DLTBTC for 1.283e-05 each.
REWARD: 0.013297311708234671
BALANCE: 155783.8342855421
==================================
TICK: 2711 / TRADE: 313
--------------------------------
BUY: 12199203937.78716 DLTBTC for 1.2770000000000005e-05 each.
SELL: 12199203937.78716 DLTBTC for 1.286e-05 each.
REWARD: 0.004531722298355412
BALANCE: 156489.8033610972
==================================
TICK: 2715 / TRADE: 314
--------------------------------
BUY: 11945786516.114288 DLTBTC for 1.3100000000000003e-05 each.
SELL: 11945786516.114288 DLTBTC for 1.3240000000000004e-05 each.
REWARD: 0.008161884541984854
BALANCE: 157767.0550681284
==================================
TICK: 2719 / TRADE: 315
--------------------------------
BUY: 11943001897.663012 DLTBTC for 1.321e-05 each.
SELL: 11943001897.663012 DLTBTC for 1.327e-05 each.
REWARD: 0.002032228188872054
BALANCE: 158087.67372471318
==================================
TICK: 2730 / TRADE: 316
--------------------------------
BUY: 12226424882.03505 DLTBTC for 1.293e-05 each.
SELL: 12226424882.03505 DLTBTC for 1.327e-05 each.
REWARD: 0.023731301962490514
BALANCE: 161839.30004642202
==================================
TICK: 2744 / TRADE: 317
--------------------------------
BUY: 12713220742.059856 DLTBTC for 1.2730000000000003e-05 each.
SELL: 12713220742.059856 DLTBTC for 1.2730000000000003e-05 each.
REWARD: -0.002498437499999895
BALANCE: 161434.95467021232
==================================
TICK: 2751 / TRADE: 318
--------------------------------
BUY: 12671503506.296097 DLTBTC for 1.2740000000000003e-05 each.
SELL: 12671503506.296097 DLTBTC for 1.275e-05 each.
REWARD: -0.00171546924058108
BALANCE: 161158.01797112098
==================================
TICK: 2754 / TRADE: 319
--------------------------------
BUY: 13070398862.21581 DLTBTC for 1.2330000000000002e-05 each.
SELL: 13070398862.21581 DLTBTC for 1.2010000000000004e-05 each.
REWARD: -0.028386555910380973
BALANCE: 156583.29688357757
==================================
TICK: 2764 / TRADE: 320
--------------------------------
BUY: 12994464471.666185 DLTBTC for 1.2050000000000003e-05 each.
SELL: 12994464471.666185 DLTBTC for 1.214e-05 each.
REWARD: 0.004951781639004116
BALANCE: 157358.6631780604
==================================
TICK: 2771 / TRADE: 321
--------------------------------
BUY: 14100238636.026915 DLTBTC for 1.1160000000000003e-05 each.
SELL: 14100238636.026915 DLTBTC for 1.2030000000000003e-05 each.
REWARD: 0.07526378108198939
BALANCE: 169202.07115484844
==================================
TICK: 2773 / TRADE: 322
--------------------------------
BUY: 14523782931.746643 DLTBTC for 1.1650000000000004e-05 each.
SELL: 14523782931.746643 DLTBTC for 1.2190000000000004e-05 each.
REWARD: 0.04373768642703868
BALANCE: 176602.57828582468
==================================
TICK: 2776 / TRADE: 323
--------------------------------
BUY: 14559157319.523878 DLTBTC for 1.2130000000000002e-05 each.
SELL: 14559157319.523878 DLTBTC for 1.2920000000000003e-05 each.
REWARD: 0.062466627164056376
BALANCE: 187634.34569981636
==================================
TICK: 2786 / TRADE: 324
--------------------------------
BUY: 14534031425.237518 DLTBTC for 1.291e-05 each.
SELL: 14534031425.237518 DLTBTC for 1.349e-05 each.
REWARD: 0.042315730296281995
BALANCE: 195574.23006676912
==================================
TICK: 2789 / TRADE: 325
--------------------------------
BUY: 14872565024.088907 DLTBTC for 1.315e-05 each.
SELL: 14872565024.088907 DLTBTC for 1.36e-05 each.
REWARD: 0.03163659695817489
BALANCE: 201761.53315879687
==================================
TICK: 2796 / TRADE: 326
--------------------------------
BUY: 14835406849.911533 DLTBTC for 1.36e-05 each.
SELL: 14835406849.911533 DLTBTC for 1.3700000000000004e-05 each.
REWARD: 0.004836132812500393
BALANCE: 202737.2787296065
==================================
TICK: 2801 / TRADE: 327
--------------------------------
BUY: 15535423657.44111 DLTBTC for 1.305e-05 each.
SELL: 15535423657.44111 DLTBTC for 1.366e-05 each.
REWARD: 0.04412807231800775
BALANCE: 211683.68402694268
==================================
TICK: 2804 / TRADE: 328
--------------------------------
BUY: 15462650403.72116 DLTBTC for 1.369e-05 each.
SELL: 15462650403.72116 DLTBTC for 1.3810000000000003e-05 each.
REWARD: 0.00624518466946733
BALANCE: 213005.6877252041
==================================
TICK: 2819 / TRADE: 329
--------------------------------
BUY: 15480064514.913088 DLTBTC for 1.376e-05 each.
SELL: 15480064514.913088 DLTBTC for 1.3990000000000003e-05 each.
REWARD: 0.01417491710574148
BALANCE: 216025.02569176033
==================================
TICK: 2822 / TRADE: 330
--------------------------------
BUY: 15653987368.968138 DLTBTC for 1.3800000000000002e-05 each.
SELL: 15653987368.968138 DLTBTC for 1.357e-05 each.
REWARD: -0.019123463541666608
BALANCE: 211893.87898885636
==================================
TICK: 2828 / TRADE: 331
--------------------------------
BUY: 16287000690.919012 DLTBTC for 1.301e-05 each.
SELL: 16287000690.919012 DLTBTC for 1.22e-05 each.
REWARD: -0.06460268543428138
BALANCE: 198204.96537908958
==================================
TICK: 2840 / TRADE: 332
--------------------------------
BUY: 16179997173.803232 DLTBTC for 1.225e-05 each.
SELL: 16179997173.803232 DLTBTC for 1.317e-05 each.
REWARD: 0.07241596556122465
BALANCE: 212558.16932604546
==================================
TICK: 2842 / TRADE: 333
--------------------------------
BUY: 16464614200.313358 DLTBTC for 1.291e-05 each.
SELL: 16464614200.313358 DLTBTC for 1.298e-05 each.
REWARD: 0.002910168958171866
BALANCE: 213176.74951222396
==================================
TICK: 2846 / TRADE: 334
--------------------------------
BUY: 16825315667.89455 DLTBTC for 1.267e-05 each.
SELL: 16825315667.89455 DLTBTC for 1.286e-05 each.
REWARD: 0.012460149467245607
BALANCE: 215832.96367408786
==================================
TICK: 2848 / TRADE: 335
--------------------------------
BUY: 16744217507.68719 DLTBTC for 1.289e-05 each.
SELL: 16744217507.68719 DLTBTC for 1.298e-05 each.
REWARD: 0.004466274728471609
BALANCE: 216796.93298531658
==================================
TICK: 2856 / TRADE: 336
--------------------------------
BUY: 17568633143.05645 DLTBTC for 1.234e-05 each.
SELL: 17568633143.05645 DLTBTC for 1.2010000000000004e-05 each.
REWARD: -0.029173924989870037
BALANCE: 210472.1155243691
==================================
TICK: 2861 / TRADE: 337
--------------------------------
BUY: 18808946874.385086 DLTBTC for 1.119e-05 each.
SELL: 18808946874.385086 DLTBTC for 1.15e-05 each.
REWARD: 0.025135654043789257
BALANCE: 215762.46980605408
==================================
TICK: 2873 / TRADE: 338
--------------------------------
BUY: 17729044355.468697 DLTBTC for 1.2170000000000004e-05 each.
SELL: 17729044355.468697 DLTBTC for 1.2370000000000004e-05 each.
REWARD: 0.013894357282251413
BALANCE: 218760.35064964037
==================================
TICK: 2876 / TRADE: 339
--------------------------------
BUY: 19393648107.237614 DLTBTC for 1.1280000000000004e-05 each.
SELL: 19393648107.237614 DLTBTC for 1.251e-05 each.
REWARD: 0.10627167968749984
BALANCE: 242008.3805622041
==================================
TICK: 2884 / TRADE: 340
--------------------------------
BUY: 21247443420.73785 DLTBTC for 1.139e-05 each.
SELL: 21247443420.73785 DLTBTC for 1.2570000000000003e-05 each.
REWARD: 0.10084237406716468
BALANCE: 266413.08020224667
==================================
TICK: 2889 / TRADE: 341
--------------------------------
BUY: 21855051698.297504 DLTBTC for 1.2190000000000004e-05 each.
SELL: 21855051698.297504 DLTBTC for 1.444e-05 each.
REWARD: 0.1816179296554552
BALANCE: 314798.47226171143
==================================
TICK: 2903 / TRADE: 342
--------------------------------
BUY: 22168906497.303623 DLTBTC for 1.42e-05 each.
SELL: 22168906497.303623 DLTBTC for 1.4700000000000003e-05 each.
REWARD: 0.03262485695422557
BALANCE: 325068.7273886585
==================================
TICK: 2906 / TRADE: 343
--------------------------------
BUY: 22716193388.445732 DLTBTC for 1.4310000000000004e-05 each.
SELL: 22716193388.445732 DLTBTC for 1.4470000000000004e-05 each.
REWARD: 0.008654619802585639
BALANCE: 327882.0736339177
==================================
TICK: 2914 / TRADE: 344
--------------------------------
BUY: 24251632665.230602 DLTBTC for 1.352e-05 each.
SELL: 24251632665.230602 DLTBTC for 1.49e-05 each.
REWARD: 0.09931755038831391
BALANCE: 360446.5180034792
==================================
TICK: 2921 / TRADE: 345
--------------------------------
BUY: 24256158681.257008 DLTBTC for 1.4860000000000003e-05 each.
SELL: 24256158681.257008 DLTBTC for 1.607e-05 each.
REWARD: 0.07872477182873472
BALANCE: 388822.58788976504
==================================
TICK: 2924 / TRADE: 346
--------------------------------
BUY: 25479855038.647762 DLTBTC for 1.5260000000000006e-05 each.
SELL: 25479855038.647762 DLTBTC for 1.5399999999999998e-05 each.
REWARD: 0.006652952981651028
BALANCE: 391409.4062851995
==================================
TICK: 2927 / TRADE: 347
--------------------------------
BUY: 26024561588.111664 DLTBTC for 1.5040000000000003e-05 each.
SELL: 26024561588.111664 DLTBTC for 1.554e-05 each.
REWARD: 0.030663183593749865
BALANCE: 403411.2647704432
==================================
TICK: 2929 / TRADE: 348
--------------------------------
BUY: 26645393974.269695 DLTBTC for 1.514e-05 each.
SELL: 26645393974.269695 DLTBTC for 1.537e-05 each.
REWARD: 0.012655152947490311
BALANCE: 408516.4960268537
==================================
TICK: 2934 / TRADE: 349
--------------------------------
BUY: 26717887248.322674 DLTBTC for 1.529e-05 each.
SELL: 26717887248.322674 DLTBTC for 1.5350000000000007e-05 each.
REWARD: 0.001415891718443918
BALANCE: 409094.91115042585
==================================
TICK: 2936 / TRADE: 350
--------------------------------
BUY: 26896443862.6184 DLTBTC for 1.521e-05 each.
SELL: 26896443862.6184 DLTBTC for 1.55e-05 each.
REWARD: 0.016520329963839675
BALANCE: 415853.29406915855
==================================
TICK: 2938 / TRADE: 351
--------------------------------
BUY: 27056167473.595222 DLTBTC for 1.537e-05 each.
SELL: 27056167473.595222 DLTBTC for 1.542e-05 each.
REWARD: 0.0007465252927782995
BALANCE: 416163.7390712664
==================================
TICK: 2941 / TRADE: 352
--------------------------------
BUY: 26711408156.05046 DLTBTC for 1.5580000000000007e-05 each.
SELL: 26711408156.05046 DLTBTC for 1.569e-05 each.
REWARD: 0.004544256458600682
BALANCE: 418054.8938303764
==================================
TICK: 2947 / TRADE: 353
--------------------------------
BUY: 26971283472.92751 DLTBTC for 1.55e-05 each.
SELL: 26971283472.92751 DLTBTC for 1.576e-05 each.
REWARD: 0.014233846774193815
BALANCE: 424005.4231323598
==================================
TICK: 2951 / TRADE: 354
--------------------------------
BUY: 27968695457.27967 DLTBTC for 1.516e-05 each.
SELL: 27968695457.27967 DLTBTC for 1.472e-05 each.
REWARD: -0.031449670184696576
BALANCE: 410670.5924183244
==================================
TICK: 2958 / TRADE: 355
--------------------------------
BUY: 27974835995.798656 DLTBTC for 1.4680000000000003e-05 each.
SELL: 27974835995.798656 DLTBTC for 1.498e-05 each.
REWARD: 0.017886471815395044
BALANCE: 418016.0403950263
==================================
TICK: 2966 / TRADE: 356
--------------------------------
BUY: 27683181483.114326 DLTBTC for 1.51e-05 each.
SELL: 27683181483.114326 DLTBTC for 1.517e-05 each.
REWARD: 0.0021257419288081003
BALANCE: 418904.6346190084
==================================
TICK: 2968 / TRADE: 357
--------------------------------
BUY: 30779179619.324635 DLTBTC for 1.3610000000000004e-05 each.
SELL: 30779179619.324635 DLTBTC for 1.3630000000000003e-05 each.
REWARD: -0.001032601258265986
BALANCE: 418472.07316620735
==================================
TICK: 2970 / TRADE: 358
--------------------------------
BUY: 31205971153.33388 DLTBTC for 1.341e-05 each.
SELL: 31205971153.33388 DLTBTC for 1.3800000000000002e-05 each.
REWARD: 0.02651167505592844
BALANCE: 429566.46878997056
==================================
TICK: 2973 / TRADE: 359
--------------------------------
BUY: 31938027419.32866 DLTBTC for 1.3450000000000003e-05 each.
SELL: 31938027419.32866 DLTBTC for 1.357e-05 each.
REWARD: 0.006401204693308404
BALANCE: 432316.21168607683
==================================
TICK: 2977 / TRADE: 360
--------------------------------
BUY: 32726435403.942226 DLTBTC for 1.321e-05 each.
SELL: 32726435403.942226 DLTBTC for 1.298e-05 each.
REWARD: -0.019865989307342846
BALANCE: 423727.8224473303
==================================
TICK: 2986 / TRADE: 361
--------------------------------
BUY: 33000609224.869957 DLTBTC for 1.284e-05 each.
SELL: 33000609224.869957 DLTBTC for 1.3860000000000006e-05 each.
REWARD: 0.07674234082943987
BALANCE: 456245.6874164997
==================================
TICK: 2993 / TRADE: 362
--------------------------------
BUY: 35122839677.94455 DLTBTC for 1.299e-05 each.
SELL: 35122839677.94455 DLTBTC for 1.42e-05 each.
REWARD: 0.09041741243264068
BALANCE: 497498.241906251
==================================
TICK: 3001 / TRADE: 363
--------------------------------
BUY: 34936674291.16931 DLTBTC for 1.424e-05 each.
SELL: 34936674291.16931 DLTBTC for 1.4499999999999998e-05 each.
REWARD: 0.015714371927668447
BALANCE: 505316.114312927
==================================
TICK: 3016 / TRADE: 364
--------------------------------
BUY: 33982253820.64068 DLTBTC for 1.4870000000000003e-05 each.
SELL: 33982253820.64068 DLTBTC for 1.5300000000000006e-05 each.
REWARD: 0.0263465975958308
BALANCE: 518629.4746354185
==================================
TICK: 3023 / TRADE: 365
--------------------------------
BUY: 34714154928.742874 DLTBTC for 1.494e-05 each.
SELL: 34714154928.742874 DLTBTC for 1.645e-05 each.
REWARD: 0.09831999351572995
BALANCE: 569621.1212186393
==================================
TICK: 3028 / TRADE: 366
--------------------------------
BUY: 35205260891.13963 DLTBTC for 1.618e-05 each.
SELL: 35205260891.13963 DLTBTC for 1.727e-05 each.
REWARD: 0.0647003698624844
BALANCE: 606475.8184429683
==================================
TICK: 3035 / TRADE: 367
--------------------------------
BUY: 36845432469.19613 DLTBTC for 1.646e-05 each.
SELL: 36845432469.19613 DLTBTC for 1.699e-05 each.
REWARD: 0.02962038559386415
BALANCE: 624439.8660386034
==================================
TICK: 3040 / TRADE: 368
--------------------------------
BUY: 37571592421.09527 DLTBTC for 1.662e-05 each.
SELL: 37571592421.09527 DLTBTC for 1.919e-05 each.
REWARD: 0.15174819400571615
BALANCE: 719197.4879751328
==================================
TICK: 3049 / TRADE: 369
--------------------------------
BUY: 39712727110.71964 DLTBTC for 1.811e-05 each.
SELL: 39712727110.71964 DLTBTC for 1.879e-05 each.
REWARD: 0.03495606622722258
BALANCE: 744337.8029952436
==================================
TICK: 3061 / TRADE: 370
--------------------------------
BUY: 43887842157.7384 DLTBTC for 1.6960000000000007e-05 each.
SELL: 43887842157.7384 DLTBTC for 1.811e-05 each.
REWARD: 0.06513875571196914
BALANCE: 792823.0413117346
==================================
TICK: 3070 / TRADE: 371
--------------------------------
BUY: 47332718884.28266 DLTBTC for 1.675e-05 each.
SELL: 47332718884.28266 DLTBTC for 1.686e-05 each.
REWARD: 0.004052319029850926
BALANCE: 796035.8132093464
==================================
TICK: 3074 / TRADE: 372
--------------------------------
BUY: 47896258315.845146 DLTBTC for 1.662e-05 each.
SELL: 47896258315.845146 DLTBTC for 1.7420000000000006e-05 each.
REWARD: 0.045516078143803096
BALANCE: 832268.2414886488
==================================
TICK: 3076 / TRADE: 373
--------------------------------
BUY: 48275420039.944824 DLTBTC for 1.724e-05 each.
SELL: 48275420039.944824 DLTBTC for 1.7250000000000006e-05 each.
REWARD: -0.0019198403059740299
BALANCE: 830670.4193732567
==================================
TICK: 3078 / TRADE: 374
--------------------------------
BUY: 48605641859.172424 DLTBTC for 1.709e-05 each.
SELL: 48605641859.172424 DLTBTC for 1.73e-05 each.
REWARD: 0.009758749634289021
BALANCE: 838776.7240245303
==================================
TICK: 3085 / TRADE: 375
--------------------------------
BUY: 48652942228.801056 DLTBTC for 1.724e-05 each.
SELL: 48652942228.801056 DLTBTC for 1.768e-05 each.
REWARD: 0.022959839037123064
BALANCE: 858034.9025962189
==================================
TICK: 3098 / TRADE: 376
--------------------------------
BUY: 47668605699.78993 DLTBTC for 1.8e-05 each.
SELL: 47668605699.78993 DLTBTC for 2.7e-05 each.
REWARD: 0.49625234375000016
BALANCE: 1283836.7340288956
==================================
TICK: 3112 / TRADE: 377
--------------------------------
BUY: 55770492355.72959 DLTBTC for 2.3020000000000007e-05 each.
SELL: 55770492355.72959 DLTBTC for 2.4480000000000006e-05 each.
REWARD: 0.060766214161598775
BALANCE: 1361850.631957423
==================================
TICK: 3119 / TRADE: 378
--------------------------------
BUY: 62470212475.11113 DLTBTC for 2.1800000000000005e-05 each.
SELL: 62470212475.11113 DLTBTC for 2.5460000000000007e-05 each.
REWARD: 0.16497200831422032
BALANCE: 1586517.865735429
==================================
TICK: 3132 / TRADE: 379
--------------------------------
BUY: 72114448442.51949 DLTBTC for 2.2000000000000006e-05 each.
SELL: 72114448442.51949 DLTBTC for 2.3e-05 each.
REWARD: 0.04284254261363629
BALANCE: 1654488.3250054945
==================================
TICK: 3135 / TRADE: 380
--------------------------------
BUY: 71406487915.64497 DLTBTC for 2.3170000000000007e-05 each.
SELL: 71406487915.64497 DLTBTC for 2.6e-05 each.
REWARD: 0.11933710077686621
BALANCE: 1851930.1649808239
==================================
TICK: 3158 / TRADE: 381
--------------------------------
BUY: 99726987882.65073 DLTBTC for 1.857e-05 each.
SELL: 99726987882.65073 DLTBTC for 2.047e-05 each.
REWARD: 0.09956149619682275
BALANCE: 2036311.1030583435
==================================
TICK: 3168 / TRADE: 382
--------------------------------
BUY: 100261501873.87212 DLTBTC for 2.0310000000000007e-05 each.
SELL: 100261501873.87212 DLTBTC for 1.973e-05 each.
REWARD: -0.030984449624569477
BALANCE: 1973217.1242656808
==================================
TICK: 3173 / TRADE: 383
--------------------------------
BUY: 104624449855.0202 DLTBTC for 1.886e-05 each.
SELL: 104624449855.0202 DLTBTC for 1.868e-05 each.
REWARD: -0.012018600874867169
BALANCE: 1949501.8152096784
==================================
TICK: 3178 / TRADE: 384
--------------------------------
BUY: 101010456746.61545 DLTBTC for 1.93e-05 each.
SELL: 101010456746.61545 DLTBTC for 2.0230000000000005e-05 each.
REWARD: 0.04556769996761689
BALANCE: 2038336.1290114776
==================================
TICK: 3185 / TRADE: 385
--------------------------------
BUY: 106943133736.17403 DLTBTC for 1.9060000000000007e-05 each.
SELL: 106943133736.17403 DLTBTC for 1.945e-05 each.
REWARD: 0.017912140116736364
BALANCE: 2074847.091359337
==================================
TICK: 3201 / TRADE: 386
--------------------------------
BUY: 94828477667.24573 DLTBTC for 2.1880000000000007e-05 each.
SELL: 94828477667.24573 DLTBTC for 2.375e-05 each.
REWARD: 0.08275420975205638
BALANCE: 2246549.4227611315
==================================
TICK: 3228 / TRADE: 387
--------------------------------
BUY: 105323460982.70659 DLTBTC for 2.133e-05 each.
SELL: 105323460982.70659 DLTBTC for 2.2200000000000008e-05 each.
REWARD: 0.03818728023910034
BALANCE: 2332339.0351391
==================================
TICK: 3232 / TRADE: 388
--------------------------------
BUY: 105392636020.74557 DLTBTC for 2.2130000000000007e-05 each.
SELL: 105392636020.74557 DLTBTC for 2.101e-05 each.
REWARD: -0.05298202313036626
BALANCE: 2208766.994431504
==================================
TICK: 3260 / TRADE: 389
--------------------------------
BUY: 114089204257.82562 DLTBTC for 1.936e-05 each.
SELL: 114089204257.82562 DLTBTC for 2.11e-05 each.
REWARD: 0.08715304590650841
BALANCE: 2401267.7656939737
==================================
TICK: 3263 / TRADE: 390
--------------------------------
BUY: 113535118945.34155 DLTBTC for 2.115e-05 each.
SELL: 113535118945.34155 DLTBTC for 2.1030000000000007e-05 each.
REWARD: -0.008158020833332946
BALANCE: 2381678.1732350313
==================================
TICK: 3273 / TRADE: 391
--------------------------------
BUY: 114393764324.44914 DLTBTC for 2.082e-05 each.
SELL: 114393764324.44914 DLTBTC for 2.1450000000000006e-05 each.
REWARD: 0.027685327359510348
BALANCE: 2447615.713126044
==================================
TICK: 3278 / TRADE: 392
--------------------------------
BUY: 116497654123.08633 DLTBTC for 2.101e-05 each.
SELL: 116497654123.08633 DLTBTC for 2.085e-05 each.
REWARD: -0.010094832074012294
BALANCE: 2422907.4435203224
==================================
TICK: 3282 / TRADE: 393
--------------------------------
BUY: 116541964575.29205 DLTBTC for 2.0790000000000006e-05 each.
SELL: 116541964575.29205 DLTBTC for 2.14e-05 each.
REWARD: 0.02676928511303478
BALANCE: 2487766.943678412
==================================
TICK: 3285 / TRADE: 394
--------------------------------
BUY: 117736249109.24806 DLTBTC for 2.1130000000000006e-05 each.
SELL: 117736249109.24806 DLTBTC for 2.13e-05 each.
REWARD: 0.005526894522006387
BALANCE: 2501516.569171457
==================================
TICK: 3287 / TRADE: 395
--------------------------------
BUY: 118893373059.4799 DLTBTC for 2.104e-05 each.
SELL: 118893373059.4799 DLTBTC for 2.1070000000000007e-05 each.
REWARD: -0.0010761443975755292
BALANCE: 2498824.576130101
==================================
TICK: 3293 / TRADE: 396
--------------------------------
BUY: 115900954365.96011 DLTBTC for 2.1560000000000007e-05 each.
SELL: 115900954365.96011 DLTBTC for 2.158e-05 each.
REWARD: -0.0015731113752321946
BALANCE: 2494893.6467646807
==================================
TICK: 3300 / TRADE: 397
--------------------------------
BUY: 120876630172.70741 DLTBTC for 2.064e-05 each.
SELL: 120876630172.70741 DLTBTC for 2.076e-05 each.
REWARD: 0.0033009901889535787
BALANCE: 2503129.2662151335
==================================
TICK: 3309 / TRADE: 398
--------------------------------
BUY: 131743645590.27017 DLTBTC for 1.9e-05 each.
SELL: 131743645590.27017 DLTBTC for 1.905e-05 each.
REWARD: 0.00012656661184218265
BALANCE: 2503446.0788053614
==================================
TICK: 3316 / TRADE: 399
--------------------------------
BUY: 129577954389.51144 DLTBTC for 1.932e-05 each.
SELL: 129577954389.51144 DLTBTC for 1.9590000000000007e-05 each.
REWARD: 0.01144180172748488
BALANCE: 2532090.012474502
==================================
TICK: 3323 / TRADE: 400
--------------------------------
BUY: 130452859993.53436 DLTBTC for 1.941e-05 each.
SELL: 130452859993.53436 DLTBTC for 1.922e-05 each.
REWARD: -0.012262749549201368
BALANCE: 2501039.6268154928
==================================
TICK: 3344 / TRADE: 401
--------------------------------
BUY: 131219287870.69737 DLTBTC for 1.9060000000000007e-05 each.
SELL: 131219287870.69737 DLTBTC for 1.996e-05 each.
REWARD: 0.04460289546169971
BALANCE: 2612593.2358359126
==================================
TICK: 3349 / TRADE: 402
--------------------------------
BUY: 137288136407.56241 DLTBTC for 1.903e-05 each.
SELL: 137288136407.56241 DLTBTC for 2.0350000000000007e-05 each.
REWARD: 0.06669242232659012
BALANCE: 2786833.407287874
==================================
TICK: 3356 / TRADE: 403
--------------------------------
BUY: 138441798673.01907 DLTBTC for 2.013e-05 each.
SELL: 138441798673.01907 DLTBTC for 2.0870000000000005e-05 each.
REWARD: 0.03417077046075567
BALANCE: 2882061.6519606733
==================================
TICK: 3359 / TRADE: 404
--------------------------------
BUY: 143528966731.10922 DLTBTC for 2.008e-05 each.
SELL: 143528966731.10922 DLTBTC for 2.058e-05 each.
REWARD: 0.02233974881723122
BALANCE: 2946446.185341249
==================================
TICK: 3368 / TRADE: 405
--------------------------------
BUY: 147322309267.06244 DLTBTC for 2e-05 each.
SELL: 147322309267.06244 DLTBTC for 2.018e-05 each.
REWARD: 0.006479076562500019
BALANCE: 2965536.4357633614
==================================
TICK: 3371 / TRADE: 406
--------------------------------
BUY: 149021931445.395 DLTBTC for 1.9900000000000006e-05 each.
SELL: 149021931445.395 DLTBTC for 2.057e-05 each.
REWARD: 0.031085785961055157
BALANCE: 3057722.4666652116
==================================
TICK: 3376 / TRADE: 407
--------------------------------
BUY: 152049849162.86484 DLTBTC for 2.011e-05 each.
SELL: 152049849162.86484 DLTBTC for 2.0399999999999998e-05 each.
REWARD: 0.01188621954251623
BALANCE: 3094067.2272040783
==================================
TICK: 3378 / TRADE: 408
--------------------------------
BUY: 156424025642.26886 DLTBTC for 1.978e-05 each.
SELL: 156424025642.26886 DLTBTC for 2.169e-05 each.
REWARD: 0.09382249194261894
BALANCE: 3384360.324698354
==================================
TICK: 3380 / TRADE: 409
--------------------------------
BUY: 161313647507.07123 DLTBTC for 2.098e-05 each.
SELL: 161313647507.07123 DLTBTC for 2.1980000000000006e-05 each.
REWARD: 0.04504691819590123
BALANCE: 3536815.3273904948
==================================
TICK: 3392 / TRADE: 410
--------------------------------
BUY: 164197554660.65436 DLTBTC for 2.154e-05 each.
SELL: 164197554660.65436 DLTBTC for 2.114e-05 each.
REWARD: -0.021022143396007387
BALANCE: 3462463.888412895
==================================
TICK: 3398 / TRADE: 411
--------------------------------
BUY: 162252290928.43933 DLTBTC for 2.134e-05 each.
SELL: 162252290928.43933 DLTBTC for 2.2899999999999998e-05 each.
REWARD: 0.07042107690955945
BALANCE: 3706294.324195392
==================================
TICK: 3405 / TRADE: 412
--------------------------------
BUY: 161635164596.3974 DLTBTC for 2.293e-05 each.
SELL: 161635164596.3974 DLTBTC for 2.293e-05 each.
REWARD: -0.002498437499999895
BALANCE: 3697034.3794697854
==================================
TICK: 3410 / TRADE: 413
--------------------------------
BUY: 159012231375.0445 DLTBTC for 2.3250000000000006e-05 each.
SELL: 159012231375.0445 DLTBTC for 2.347e-05 each.
REWARD: 0.006940286962365594
BALANCE: 3722692.858973037
==================================
TICK: 3420 / TRADE: 414
--------------------------------
BUY: 171158292366.57642 DLTBTC for 2.175e-05 each.
SELL: 171158292366.57642 DLTBTC for 2.3050000000000005e-05 each.
REWARD: 0.05712234554597728
BALANCE: 3935341.806824837
==================================
TICK: 3426 / TRADE: 415
--------------------------------
BUY: 168609331911.9467 DLTBTC for 2.3340000000000007e-05 each.
SELL: 168609331911.9467 DLTBTC for 2.34e-05 each.
REWARD: 6.583386889436049e-05
BALANCE: 3935600.885601402
==================================
TICK: 3429 / TRADE: 416
--------------------------------
BUY: 174915594915.61786 DLTBTC for 2.25e-05 each.
SELL: 174915594915.61786 DLTBTC for 2.352e-05 each.
REWARD: 0.04272163333333334
BALANCE: 4103736.183582407
==================================
TICK: 3448 / TRADE: 417
--------------------------------
BUY: 182307249381.71512 DLTBTC for 2.251e-05 each.
SELL: 182307249381.71512 DLTBTC for 2.296e-05 each.
REWARD: 0.017442731008440848
BALANCE: 4175316.5499622407
==================================
TICK: 3459 / TRADE: 418
--------------------------------
BUY: 198540967663.44458 DLTBTC for 2.1030000000000007e-05 each.
SELL: 198540967663.44458 DLTBTC for 2.227e-05 each.
REWARD: 0.05631763180575344
BALANCE: 4410460.490095483
==================================
TICK: 3464 / TRADE: 419
--------------------------------
BUY: 205233154494.90378 DLTBTC for 2.1490000000000006e-05 each.
SELL: 205233154494.90378 DLTBTC for 2.167e-05 each.
REWARD: 0.005856624447417413
BALANCE: 4436290.900826145
==================================
TICK: 3466 / TRADE: 420
--------------------------------
BUY: 198669543252.40237 DLTBTC for 2.233e-05 each.
SELL: 198669543252.40237 DLTBTC for 2.435e-05 each.
REWARD: 0.08773681356359164
BALANCE: 4825516.928505787
==================================
TICK: 3469 / TRADE: 421
--------------------------------
BUY: 220242671314.7324 DLTBTC for 2.191e-05 each.
SELL: 220242671314.7324 DLTBTC for 2.3450000000000008e-05 each.
REWARD: 0.06761349341054368
BALANCE: 5151786.98555378
==================================
TICK: 3481 / TRADE: 422
--------------------------------
BUY: 215195780516.03085 DLTBTC for 2.3940000000000005e-05 each.
SELL: 215195780516.03085 DLTBTC for 2.344e-05 each.
REWARD: -0.023331803467001033
BALANCE: 5031586.504102985
==================================
TICK: 3487 / TRADE: 423
--------------------------------
BUY: 232728330439.54605 DLTBTC for 2.162e-05 each.
SELL: 232728330439.54605 DLTBTC for 2.2340000000000006e-05 each.
REWARD: 0.03072085597826124
BALANCE: 5186161.1484376965
==================================
TICK: 3492 / TRADE: 424
--------------------------------
BUY: 237027474791.48514 DLTBTC for 2.1880000000000007e-05 each.
SELL: 237027474791.48514 DLTBTC for 2.1920000000000007e-05 each.
REWARD: -0.0006748514625227742
BALANCE: 5182661.260001794
==================================
TICK: 3494 / TRADE: 425
--------------------------------
BUY: 236435276459.9358 DLTBTC for 2.1920000000000007e-05 each.
SELL: 236435276459.9358 DLTBTC for 2.225e-05 each.
REWARD: 0.012518693687271654
BALANCE: 5247541.408800647
==================================
TICK: 3511 / TRADE: 426
--------------------------------
BUY: 263430793614.4903 DLTBTC for 1.992e-05 each.
SELL: 263430793614.4903 DLTBTC for 2.0200000000000006e-05 each.
REWARD: 0.011522668800201252
BALANCE: 5308007.090469598
==================================
TICK: 3514 / TRADE: 427
--------------------------------
BUY: 259814346082.70172 DLTBTC for 2.0430000000000006e-05 each.
SELL: 259814346082.70172 DLTBTC for 2.012e-05 each.
REWARD: -0.017634290871267888
BALANCE: 5214404.149489504
==================================
TICK: 3520 / TRADE: 428
--------------------------------
BUY: 265229102212.08057 DLTBTC for 1.966e-05 each.
SELL: 265229102212.08057 DLTBTC for 2.002e-05 each.
REWARD: 0.015767104844862878
BALANCE: 5296620.206417994
==================================
TICK: 3533 / TRADE: 429
--------------------------------
BUY: 266832252212.49338 DLTBTC for 1.985e-05 each.
SELL: 266832252212.49338 DLTBTC for 1.921e-05 each.
REWARD: -0.03465969694584381
BALANCE: 5113040.955226313
==================================
TICK: 3550 / TRADE: 430
--------------------------------
BUY: 268260280966.75296 DLTBTC for 1.9060000000000007e-05 each.
SELL: 268260280966.75296 DLTBTC for 1.941e-05 each.
REWARD: 0.015818747540660594
BALANCE: 5193922.859262097
==================================
TICK: 3559 / TRADE: 431
--------------------------------
BUY: 260739099360.54703 DLTBTC for 1.992e-05 each.
SELL: 260739099360.54703 DLTBTC for 2.0600000000000006e-05 each.
REWARD: 0.03155282065763099
BALANCE: 5357805.775749964
==================================
TICK: 3569 / TRADE: 432
--------------------------------
BUY: 255376824392.27664 DLTBTC for 2.098e-05 each.
SELL: 255376824392.27664 DLTBTC for 2.098e-05 each.
REWARD: -0.002498437499999895
BALANCE: 5344419.632882114
==================================
TICK: 3575 / TRADE: 433
--------------------------------
BUY: 254860259078.7846 DLTBTC for 2.097e-05 each.
SELL: 254860259078.7846 DLTBTC for 2.098e-05 each.
REWARD: -0.002022757212684745
BALANCE: 5333609.169522087
==================================
TICK: 3578 / TRADE: 434
--------------------------------
BUY: 258161140828.75543 DLTBTC for 2.066e-05 each.
SELL: 258161140828.75543 DLTBTC for 2.1030000000000007e-05 each.
REWARD: 0.015365820879719827
BALANCE: 5415564.452663395
==================================
TICK: 3581 / TRADE: 435
--------------------------------
BUY: 264173875739.6778 DLTBTC for 2.05e-05 each.
SELL: 264173875739.6778 DLTBTC for 2.064e-05 each.
REWARD: 0.00431376829268304
BALANCE: 5438925.942886275
==================================
TICK: 3585 / TRADE: 436
--------------------------------
BUY: 262877039288.84848 DLTBTC for 2.069e-05 each.
SELL: 262877039288.84848 DLTBTC for 2.101e-05 each.
REWARD: 0.01292932953721615
BALANCE: 5509247.6087303655
==================================
TICK: 3596 / TRADE: 437
--------------------------------
BUY: 260607739296.61142 DLTBTC for 2.114e-05 each.
SELL: 260607739296.61142 DLTBTC for 2.316e-05 each.
REWARD: 0.09281628133869457
BALANCE: 6020595.484746814
==================================
TICK: 3600 / TRADE: 438
--------------------------------
BUY: 262449672395.24036 DLTBTC for 2.294e-05 each.
SELL: 262449672395.24036 DLTBTC for 2.2910000000000006e-05 each.
REWARD: -0.0038029295172185007
BALANCE: 5997699.584466638
==================================
TICK: 3604 / TRADE: 439
--------------------------------
BUY: 267874032356.70557 DLTBTC for 2.239e-05 each.
SELL: 267874032356.70557 DLTBTC for 2.3e-05 each.
REWARD: 0.02467779979901752
BALANCE: 6145709.614066756
==================================
TICK: 3607 / TRADE: 440
--------------------------------
BUY: 270259877487.5442 DLTBTC for 2.2740000000000006e-05 each.
SELL: 270259877487.5442 DLTBTC for 2.2740000000000006e-05 each.
REWARD: -0.002498437499999895
BALANCE: 6130354.942702862
==================================
TICK: 3612 / TRADE: 441
--------------------------------
BUY: 278273034167.17487 DLTBTC for 2.203e-05 each.
SELL: 278273034167.17487 DLTBTC for 2.2720000000000006e-05 each.
REWARD: 0.02874423513390867
BALANCE: 6306567.306630232
==================================
TICK: 3616 / TRADE: 442
--------------------------------
BUY: 291161925513.8611 DLTBTC for 2.1660000000000006e-05 each.
SELL: 291161925513.8611 DLTBTC for 2.257e-05 each.
REWARD: 0.03940952288204036
BALANCE: 6555106.115208005
==================================
TICK: 3630 / TRADE: 443
--------------------------------
BUY: 297823994330.21375 DLTBTC for 2.201e-05 each.
SELL: 297823994330.21375 DLTBTC for 2.268e-05 each.
REWARD: 0.027866217060427134
BALANCE: 6737772.125068524
==================================
TICK: 3640 / TRADE: 444
--------------------------------
BUY: 301196786994.5696 DLTBTC for 2.2370000000000008e-05 each.
SELL: 301196786994.5696 DLTBTC for 2.235e-05 each.
REWARD: -0.0033902582979438156
BALANCE: 6714929.337211856
==================================
TICK: 3642 / TRADE: 445
--------------------------------
BUY: 300848088584.7605 DLTBTC for 2.2320000000000007e-05 each.
SELL: 300848088584.7605 DLTBTC for 2.299e-05 each.
REWARD: 0.027444485747087688
BALANCE: 6899217.119699667
==================================
TICK: 3645 / TRADE: 446
--------------------------------
BUY: 299965961726.0725 DLTBTC for 2.3e-05 each.
SELL: 299965961726.0725 DLTBTC for 2.254e-05 each.
REWARD: -0.02244846874999984
BALANCE: 6744340.259788625
==================================
TICK: 3650 / TRADE: 447
--------------------------------
BUY: 301760190594.56934 DLTBTC for 2.235e-05 each.
SELL: 301760190594.56934 DLTBTC for 2.251e-05 each.
REWARD: 0.004642513282997918
BALANCE: 6775650.949029751
==================================
TICK: 3653 / TRADE: 448
--------------------------------
BUY: 303568590906.35077 DLTBTC for 2.2320000000000007e-05 each.
SELL: 303568590906.35077 DLTBTC for 2.2320000000000007e-05 each.
REWARD: -0.002498437499999895
BALANCE: 6758722.408611786
==================================
TICK: 3657 / TRADE: 449
--------------------------------
BUY: 296695452529.0512 DLTBTC for 2.278e-05 each.
SELL: 296695452529.0512 DLTBTC for 2.299e-05 each.
REWARD: 0.006697143190298682
BALANCE: 6803986.540365739
==================================
TICK: 3659 / TRADE: 450
--------------------------------
BUY: 297897834516.88873 DLTBTC for 2.284e-05 each.
SELL: 297897834516.88873 DLTBTC for 2.299e-05 each.
REWARD: 0.004052579766856468
BALANCE: 6831560.238553189
==================================
TICK: 3662 / TRADE: 451
--------------------------------
BUY: 295482709279.98224 DLTBTC for 2.312e-05 each.
SELL: 295482709279.98224 DLTBTC for 2.316e-05 each.
REWARD: -0.0007726562500000034
BALANCE: 6826281.790837619
==================================
TICK: 3664 / TRADE: 452
--------------------------------
BUY: 294617254675.7711 DLTBTC for 2.3170000000000007e-05 each.
SELL: 294617254675.7711 DLTBTC for 2.3899999999999998e-05 each.
REWARD: 0.02892910417565786
BALANCE: 7023760.007897157
==================================
TICK: 3669 / TRADE: 453
--------------------------------
BUY: 298248832607.0979 DLTBTC for 2.3550000000000007e-05 each.
SELL: 298248832607.0979 DLTBTC for 2.789e-05 each.
REWARD: 0.1813298759288744
BALANCE: 8297377.538683339
==================================
TICK: 3679 / TRADE: 454
--------------------------------
BUY: 321603780569.1216 DLTBTC for 2.5800000000000007e-05 each.
SELL: 321603780569.1216 DLTBTC for 2.8490000000000007e-05 each.
REWARD: 0.101504632388566
BALANCE: 9139599.795536537
==================================
TICK: 3687 / TRADE: 455
--------------------------------
BUY: 319231568129.11414 DLTBTC for 2.863e-05 each.
SELL: 319231568129.11414 DLTBTC for 2.7510000000000006e-05 each.
REWARD: -0.041520503514669516
BALANCE: 8760119.010103289
==================================
TICK: 3694 / TRADE: 456
--------------------------------
BUY: 345294403236.23517 DLTBTC for 2.5370000000000006e-05 each.
SELL: 345294403236.23517 DLTBTC for 2.513e-05 each.
REWARD: -0.011934794417619243
BALANCE: 8655568.790643828
==================================
TICK: 3706 / TRADE: 457
--------------------------------
BUY: 347194897338.30035 DLTBTC for 2.493e-05 each.
SELL: 347194897338.30035 DLTBTC for 2.518e-05 each.
REWARD: 0.007504586592459006
BALANCE: 8720525.2561402
==================================
TICK: 3712 / TRADE: 458
--------------------------------
BUY: 349240098363.6444 DLTBTC for 2.497e-05 each.
SELL: 349240098363.6444 DLTBTC for 2.629e-05 each.
REWARD: 0.05023292263215873
BALANCE: 9158582.726643678
==================================
TICK: 3723 / TRADE: 459
--------------------------------
BUY: 351982426081.6171 DLTBTC for 2.602e-05 each.
SELL: 351982426081.6171 DLTBTC for 2.806e-05 each.
REWARD: 0.07570691175057642
BALANCE: 9851950.740890045
==================================
TICK: 3742 / TRADE: 460
--------------------------------
BUY: 358905309322.0416 DLTBTC for 2.7450000000000007e-05 each.
SELL: 358905309322.0416 DLTBTC for 2.778e-05 each.
REWARD: 0.009493384562841545
BALANCE: 9945479.097967485
==================================
TICK: 3748 / TRADE: 461
--------------------------------
BUY: 379019782696.9315 DLTBTC for 2.6240000000000006e-05 each.
SELL: 379019782696.9315 DLTBTC for 4e-05 each.
REWARD: 0.520581650152439
BALANCE: 15122913.018343989
==================================
TICK: 3759 / TRADE: 462
--------------------------------
BUY: 408727378874.16174 DLTBTC for 3.700000000000001e-05 each.
SELL: 408727378874.16174 DLTBTC for 3.814e-05 each.
REWARD: 0.028235394425675464
BALANCE: 15549914.432282114
==================================
TICK: 3761 / TRADE: 463
--------------------------------
BUY: 428726617928.9252 DLTBTC for 3.627e-05 each.
SELL: 428726617928.9252 DLTBTC for 3.992e-05 each.
REWARD: 0.09788426730079958
BALANCE: 17072006.413076177
==================================
TICK: 3772 / TRADE: 464
--------------------------------
BUY: 465304072310.6071 DLTBTC for 3.669e-05 each.
SELL: 465304072310.6071 DLTBTC for 3.561e-05 each.
REWARD: -0.03186070753270642
BALANCE: 16528080.20975267
==================================
TICK: 3774 / TRADE: 465
--------------------------------
BUY: 486120006169.19617 DLTBTC for 3.4e-05 each.
SELL: 486120006169.19617 DLTBTC for 3.875e-05 each.
REWARD: 0.13685839843750003
BALANCE: 18790086.796505958
==================================
TICK: 3800 / TRADE: 466
--------------------------------
BUY: 555755303061.4006 DLTBTC for 3.381e-05 each.
SELL: 555755303061.4006 DLTBTC for 3.224e-05 each.
REWARD: -0.04881838583259379
BALANCE: 17872785.089446202
==================================
TICK: 3840 / TRADE: 467
--------------------------------
BUY: 530507126430.5789 DLTBTC for 3.369e-05 each.
SELL: 530507126430.5789 DLTBTC for 3.5090000000000005e-05 each.
REWARD: 0.03895309670896441
BALANCE: 18568985.415493935
==================================
TICK: 3845 / TRADE: 468
--------------------------------
BUY: 560996538232.4451 DLTBTC for 3.3100000000000005e-05 each.
SELL: 560996538232.4451 DLTBTC for 3.296e-05 each.
REWARD: -0.0067174773413897215
BALANCE: 18444248.67671276
==================================
TICK: 3849 / TRADE: 469
--------------------------------
BUY: 564389494391.4553 DLTBTC for 3.268e-05 each.
SELL: 564389494391.4553 DLTBTC for 3.2200000000000003e-05 each.
REWARD: -0.017149623240513834
BALANCE: 18127936.76095279
==================================
TICK: 3856 / TRADE: 470
--------------------------------
BUY: 558814326786.4608 DLTBTC for 3.244e-05 each.
SELL: 558814326786.4608 DLTBTC for 3.13e-05 each.
REWARD: -0.03755243815505538
BALANCE: 17447188.536858354
==================================
TICK: 3866 / TRADE: 471
--------------------------------
BUY: 562812533447.0437 DLTBTC for 3.1e-05 each.
SELL: 562812533447.0437 DLTBTC for 3.0890000000000004e-05 each.
REWARD: -0.006037959173386898
BALANCE: 17341843.12478242
==================================
TICK: 3884 / TRADE: 472
--------------------------------
BUY: 578061437492.7472 DLTBTC for 3.0000000000000008e-05 each.
SELL: 578061437492.7472 DLTBTC for 3.0000000000000008e-05 each.
REWARD: -0.002498437499999895
BALANCE: 17298515.613600347
==================================
TICK: 3906 / TRADE: 473
--------------------------------
BUY: 722276226037.5927 DLTBTC for 2.3950000000000006e-05 each.
SELL: 722276226037.5927 DLTBTC for 2.46e-05 each.
REWARD: 0.02457362995824619
BALANCE: 17723602.935115907
==================================
TICK: 3918 / TRADE: 474
--------------------------------
BUY: 737868565158.8635 DLTBTC for 2.4020000000000007e-05 each.
SELL: 737868565158.8635 DLTBTC for 2.524e-05 each.
REWARD: 0.04816567183596976
BALANCE: 18577272.17783973
==================================
TICK: 3923 / TRADE: 475
--------------------------------
BUY: 738658933512.5139 DLTBTC for 2.5150000000000005e-05 each.
SELL: 738658933512.5139 DLTBTC for 2.642e-05 each.
REWARD: 0.047872416749503044
BALANCE: 19466611.093606222
==================================
TICK: 3929 / TRADE: 476
--------------------------------
BUY: 774328205791.8146 DLTBTC for 2.5140000000000007e-05 each.
SELL: 774328205791.8146 DLTBTC for 2.6400000000000005e-05 each.
REWARD: 0.04749567422434353
BALANCE: 20391190.912360135
==================================
TICK: 3935 / TRADE: 477
--------------------------------
BUY: 886188218703.1782 DLTBTC for 2.3010000000000005e-05 each.
SELL: 886188218703.1782 DLTBTC for 2.4e-05 each.
REWARD: 0.040418839634941195
BALANCE: 21215379.18781229
==================================
TICK: 3937 / TRADE: 478
--------------------------------
BUY: 862764505401.069 DLTBTC for 2.4590000000000007e-05 each.
SELL: 862764505401.069 DLTBTC for 2.534e-05 each.
REWARD: 0.027925562982919816
BALANCE: 21807830.59552807
==================================
TICK: 3950 / TRADE: 479
--------------------------------
BUY: 909038374136.2263 DLTBTC for 2.399e-05 each.
SELL: 909038374136.2263 DLTBTC for 2.416e-05 each.
REWARD: 0.004570143809921046
BALANCE: 21907495.51753203
==================================
TICK: 3962 / TRADE: 480
--------------------------------
BUY: 924366899473.9249 DLTBTC for 2.3700000000000007e-05 each.
SELL: 924366899473.9249 DLTBTC for 2.4e-05 each.
REWARD: 0.01012816455696175
BALANCE: 22129378.237164494
==================================
TICK: 3967 / TRADE: 481
--------------------------------
BUY: 891235531098.0463 DLTBTC for 2.4830000000000005e-05 each.
SELL: 891235531098.0463 DLTBTC for 2.7940000000000007e-05 each.
REWARD: 0.12244034056584807
BALANCE: 24838906.84503338
==================================
TICK: 3973 / TRADE: 482
--------------------------------
BUY: 961258004838.7529 DLTBTC for 2.5840000000000007e-05 each.
SELL: 961258004838.7529 DLTBTC for 2.4260000000000005e-05 each.
REWARD: -0.06349118009868415
BALANCE: 23261855.33708093
==================================
TICK: 3991 / TRADE: 483
--------------------------------
BUY: 972485591015.089 DLTBTC for 2.392e-05 each.
SELL: 972485591015.089 DLTBTC for 2.416e-05 each.
REWARD: 0.00750993938127098
BALANCE: 23436550.460558303
==================================
TICK: 3993 / TRADE: 484
--------------------------------
BUY: 967253423877.7671 DLTBTC for 2.4230000000000007e-05 each.
SELL: 967253423877.7671 DLTBTC for 2.4630000000000006e-05 each.
REWARD: 0.013968777729054915
BALANCE: 23763930.42467762
==================================
TICK: 3999 / TRADE: 485
--------------------------------
BUY: 991816795687.7137 DLTBTC for 2.396e-05 each.
SELL: 991816795687.7137 DLTBTC for 2.4300000000000005e-05 each.
REWARD: 0.01165642607470807
BALANCE: 24040932.92291738
==================================
TICK: 4008 / TRADE: 486
--------------------------------
BUY: 991378677233.7064 DLTBTC for 2.425e-05 each.
SELL: 991378677233.7064 DLTBTC for 2.7450000000000007e-05 each.
REWARD: 0.12913063466494878
BALANCE: 27145353.849191163
==================================
TICK: 4023 / TRADE: 487
--------------------------------
BUY: 1088426377273.102 DLTBTC for 2.494e-05 each.
SELL: 1088426377273.102 DLTBTC for 2.5390000000000006e-05 each.
REWARD: 0.015499786362269896
BALANCE: 27566101.034581847
==================================
TICK: 4025 / TRADE: 488
--------------------------------
BUY: 1085707011996.1339 DLTBTC for 2.5390000000000006e-05 each.
SELL: 1085707011996.1339 DLTBTC for 2.63e-05 each.
REWARD: 0.03325289853288682
BALANCE: 28482753.795232102
==================================
TICK: 4030 / TRADE: 489
--------------------------------
BUY: 1082994440883.35 DLTBTC for 2.63e-05 each.
SELL: 1082994440883.35 DLTBTC for 2.8000000000000003e-05 each.
REWARD: 0.06197884980988633
BALANCE: 30248082.114878763
==================================
TICK: 4049 / TRADE: 490
--------------------------------
BUY: 1123628607536.358 DLTBTC for 2.6920000000000007e-05 each.
SELL: 1123628607536.358 DLTBTC for 2.789e-05 each.
REWARD: 0.033444226527674425
BALANCE: 31259705.825156465
==================================
TICK: 4068 / TRADE: 491
--------------------------------
BUY: 1169024152025.2979 DLTBTC for 2.674e-05 each.
SELL: 1169024152025.2979 DLTBTC for 2.5230000000000007e-05 each.
REWARD: -0.058827059765332534
BALANCE: 29420789.24233327
==================================
TICK: 4072 / TRADE: 492
--------------------------------
BUY: 1174951647058.0378 DLTBTC for 2.504e-05 each.
SELL: 1174951647058.0378 DLTBTC for 2.518e-05 each.
REWARD: 0.0030786479133386724
BALANCE: 29511365.493742958
==================================
TICK: 4086 / TRADE: 493
--------------------------------
BUY: 1151438372756.2603 DLTBTC for 2.5630000000000007e-05 each.
SELL: 1151438372756.2603 DLTBTC for 2.5190000000000004e-05 each.
REWARD: -0.019622927843347626
BALANCE: 28932266.09810058
==================================
TICK: 4089 / TRADE: 494
--------------------------------
BUY: 1183807941820.809 DLTBTC for 2.4440000000000007e-05 each.
SELL: 1183807941820.809 DLTBTC for 2.439e-05 each.
REWARD: -0.004539152644230993
BALANCE: 28800938.125937793
==================================
TICK: 4091 / TRADE: 495
--------------------------------
BUY: 1176989706822.141 DLTBTC for 2.447e-05 each.
SELL: 1176989706822.141 DLTBTC for 2.475e-05 each.
REWARD: 0.008915556676542646
BALANCE: 29057714.52213719
==================================
TICK: 4095 / TRADE: 496
--------------------------------
BUY: 1224513886310.0374 DLTBTC for 2.3730000000000005e-05 each.
SELL: 1224513886310.0374 DLTBTC for 2.376e-05 each.
REWARD: -0.0012373735777498895
BALANCE: 29021759.2739577
==================================
TICK: 4097 / TRADE: 497
--------------------------------
BUY: 1204722261268.4807 DLTBTC for 2.409e-05 each.
SELL: 1204722261268.4807 DLTBTC for 2.477e-05 each.
REWARD: 0.02565851818700704
BALANCE: 29766414.61210748
==================================
TICK: 4099 / TRADE: 498
--------------------------------
BUY: 1188754577160.8418 DLTBTC for 2.504e-05 each.
SELL: 1188754577160.8418 DLTBTC for 2.565e-05 each.
REWARD: 0.021801720372404132
BALANCE: 30415373.659969695
==================================
TICK: 4102 / TRADE: 499
--------------------------------
BUY: 1184860680170.2253 DLTBTC for 2.5670000000000007e-05 each.
SELL: 1184860680170.2253 DLTBTC for 2.56e-05 each.
REWARD: -0.005218543046357826
BALANCE: 30256649.723254085
==================================
TICK: 4116 / TRADE: 500
--------------------------------
BUY: 1138752341861.2751 DLTBTC for 2.657e-05 each.
SELL: 1138752341861.2751 DLTBTC for 2.522000000000001e-05 each.
REWARD: -0.05318067722054909
BALANCE: 28647580.600546494
==================================
TICK: 4119 / TRADE: 501
--------------------------------
BUY: 1119046117208.8474 DLTBTC for 2.56e-05 each.
SELL: 1119046117208.8474 DLTBTC for 2.6880000000000007e-05 each.
REWARD: 0.047376640625000466
BALANCE: 30004806.73143432
==================================
TICK: 4125 / TRADE: 502
--------------------------------
BUY: 1155809196126.1294 DLTBTC for 2.596e-05 each.
SELL: 1155809196126.1294 DLTBTC for 2.6980000000000006e-05 each.
REWARD: 0.03669461310670297
BALANCE: 31105821.5057857
==================================
TICK: 4135 / TRADE: 503
--------------------------------
BUY: 1167197805095.148 DLTBTC for 2.6650000000000007e-05 each.
SELL: 1167197805095.148 DLTBTC for 2.6980000000000006e-05 each.
REWARD: 0.009853364212007554
BALANCE: 31412318.494195905
==================================
TICK: 4142 / TRADE: 504
--------------------------------
BUY: 1194384733619.6162 DLTBTC for 2.63e-05 each.
SELL: 1194384733619.6162 DLTBTC for 2.63e-05 each.
REWARD: -0.002498437499999895
BALANCE: 31333836.779708065
==================================
TICK: 4154 / TRADE: 505
--------------------------------
BUY: 1170046182961.466 DLTBTC for 2.678e-05 each.
SELL: 1170046182961.466 DLTBTC for 2.6900000000000007e-05 each.
REWARD: 0.0019713230489173394
BALANCE: 31395605.89436292
==================================
TICK: 4165 / TRADE: 506
--------------------------------
BUY: 1147080960700.1428 DLTBTC for 2.7370000000000007e-05 each.
SELL: 1147080960700.1428 DLTBTC for 2.81e-05 each.
REWARD: 0.024106463509316445
BALANCE: 32152442.92220826
==================================
TICK: 4178 / TRADE: 507
--------------------------------
BUY: 1225788902867.261 DLTBTC for 2.6230000000000005e-05 each.
SELL: 1225788902867.261 DLTBTC for 2.628e-05 each.
REWARD: -0.0005969857987038196
BALANCE: 32133248.37039007
==================================
TICK: 4190 / TRADE: 508
--------------------------------
BUY: 1220868099178.954 DLTBTC for 2.632e-05 each.
SELL: 1220868099178.954 DLTBTC for 2.7e-05 each.
REWARD: 0.0232728794642858
BALANCE: 32881081.586510114
==================================
TICK: 4195 / TRADE: 509
--------------------------------
BUY: 1246912460618.51 DLTBTC for 2.6370000000000007e-05 each.
SELL: 1246912460618.51 DLTBTC for 2.699e-05 each.
REWARD: 0.020954386495070088
BALANCE: 33570084.47844978
==================================
TICK: 4209 / TRADE: 510
--------------------------------
BUY: 1243797127767.6833 DLTBTC for 2.699e-05 each.
SELL: 1243797127767.6833 DLTBTC for 2.808e-05 each.
REWARD: 0.03778599018154871
BALANCE: 34838563.36094624
==================================
TICK: 4217 / TRADE: 511
--------------------------------
BUY: 1295113879589.079 DLTBTC for 2.6900000000000007e-05 each.
SELL: 1295113879589.079 DLTBTC for 2.755e-05 each.
REWARD: 0.021604760106877174
BALANCE: 35591242.16482772
==================================
TICK: 4219 / TRADE: 512
--------------------------------
BUY: 1292347210051.8416 DLTBTC for 2.754e-05 each.
SELL: 1292347210051.8416 DLTBTC for 2.753e-05 each.
REWARD: -0.002860638503086377
BALANCE: 35489428.48711834
==================================
TICK: 4222 / TRADE: 513
--------------------------------
BUY: 1290994124667.8186 DLTBTC for 2.7490000000000006e-05 each.
SELL: 1290994124667.8186 DLTBTC for 2.843e-05 each.
REWARD: 0.03161038275281913
BALANCE: 36611262.90527496
==================================
TICK: 4227 / TRADE: 514
--------------------------------
BUY: 1299654345235.1775 DLTBTC for 2.8170000000000006e-05 each.
SELL: 1299654345235.1775 DLTBTC for 3.13e-05 each.
REWARD: 0.10833506944444449
BALANCE: 40577546.614566736
==================================
TICK: 4240 / TRADE: 515
--------------------------------
BUY: 1308953116598.927 DLTBTC for 3.1e-05 each.
SELL: 1308953116598.927 DLTBTC for 3.0160000000000006e-05 each.
REWARD: -0.029527512096773956
BALANCE: 39379392.61604771
==================================
TICK: 4253 / TRADE: 516
--------------------------------
BUY: 1308720259755.6567 DLTBTC for 3.009e-05 each.
SELL: 1308720259755.6567 DLTBTC for 3.097e-05 each.
REWARD: 0.02667409074858762
BALANCE: 40429802.10831243
==================================
TICK: 4258 / TRADE: 517
--------------------------------
BUY: 1332118685611.612 DLTBTC for 3.035e-05 each.
SELL: 1332118685611.612 DLTBTC for 2.9260000000000004e-05 each.
REWARD: -0.03832304056836877
BALANCE: 38880409.16194445
==================================
TICK: 4302 / TRADE: 518
--------------------------------
BUY: 1322912867027.7117 DLTBTC for 2.939e-05 each.
SELL: 1322912867027.7117 DLTBTC for 2.973e-05 each.
REWARD: 0.009041219908982656
BALANCE: 39231935.49132881
==================================
TICK: 4308 / TRADE: 519
--------------------------------
BUY: 1317834581502.4795 DLTBTC for 2.977e-05 each.
SELL: 1317834581502.4795 DLTBTC for 3.028e-05 each.
REWARD: 0.014590101192475835
BALANCE: 39804333.40012398
==================================
TICK: 4311 / TRADE: 520
--------------------------------
BUY: 1354349554274.3784 DLTBTC for 2.939e-05 each.
SELL: 1354349554274.3784 DLTBTC for 2.9460000000000006e-05 each.
REWARD: -0.0001226256805033632
BALANCE: 39799452.36665381
==================================
TICK: 4315 / TRADE: 521
--------------------------------
BUY: 1357416520008.6565 DLTBTC for 2.932e-05 each.
SELL: 1357416520008.6565 DLTBTC for 3.0870000000000014e-05 each.
REWARD: 0.0502344213634045
BALANCE: 41798754.82687304
==================================
TICK: 4321 / TRADE: 522
--------------------------------
BUY: 1390973538331.8816 DLTBTC for 3.005e-05 each.
SELL: 1390973538331.8816 DLTBTC for 2.9370000000000005e-05 each.
REWARD: -0.02507085222545724
BALANCE: 40750824.42140039
==================================
TICK: 4339 / TRADE: 523
--------------------------------
BUY: 1352949017974.7803 DLTBTC for 3.0120000000000006e-05 each.
SELL: 1352949017974.7803 DLTBTC for 3.1e-05 each.
REWARD: 0.026645034445550886
BALANCE: 41836631.5417932
==================================
TICK: 4346 / TRADE: 524
--------------------------------
BUY: 1307394735681.037 DLTBTC for 3.2000000000000005e-05 each.
SELL: 1307394735681.037 DLTBTC for 3.2330000000000004e-05 each.
REWARD: 0.007788297363281238
BALANCE: 42162467.668918714
==================================
TICK: 4354 / TRADE: 525
--------------------------------
BUY: 1288583975211.452 DLTBTC for 3.2720000000000005e-05 each.
SELL: 1288583975211.452 DLTBTC for 3.275e-05 each.
REWARD: -0.0015838578277810322
BALANCE: 42095688.31446273
==================================
TICK: 4356 / TRADE: 526
--------------------------------
BUY: 1313438012931.754 DLTBTC for 3.205000000000001e-05 each.
SELL: 1313438012931.754 DLTBTC for 3.034e-05 each.
REWARD: -0.05571926969578811
BALANCE: 39750147.30423935
==================================
TICK: 4367 / TRADE: 527
--------------------------------
BUY: 1310156470146.3198 DLTBTC for 3.034e-05 each.
SELL: 1310156470146.3198 DLTBTC for 3.083e-05 each.
REWARD: 0.01361150863134486
BALANCE: 40291206.77736823
==================================
TICK: 4374 / TRADE: 528
--------------------------------
BUY: 1300135746284.873 DLTBTC for 3.099000000000001e-05 each.
SELL: 1300135746284.873 DLTBTC for 3.155e-05 each.
REWARD: 0.01552676014440113
BALANCE: 40916798.6809289
==================================
TICK: 4391 / TRADE: 529
--------------------------------
BUY: 1319471095805.511 DLTBTC for 3.101e-05 each.
SELL: 1319471095805.511 DLTBTC for 3.213000000000001e-05 each.
REWARD: 0.03352870696952648
BALANCE: 42288686.034032874
==================================
TICK: 4398 / TRADE: 530
--------------------------------
BUY: 1298393799018.51 DLTBTC for 3.257e-05 each.
SELL: 1298393799018.51 DLTBTC for 3.4750000000000004e-05 each.
REWARD: 0.0642670953906972
BALANCE: 45006457.05332931
==================================
TICK: 4403 / TRADE: 531
--------------------------------
BUY: 1290322736620.6797 DLTBTC for 3.4880000000000005e-05 each.
SELL: 1290322736620.6797 DLTBTC for 3.5720000000000004e-05 each.
REWARD: 0.02152396251433486
BALANCE: 45975174.34784819
==================================
TICK: 4413 / TRADE: 532
--------------------------------
BUY: 1285659237915.2178 DLTBTC for 3.576e-05 each.
SELL: 1285659237915.2178 DLTBTC for 3.499e-05 each.
REWARD: -0.023977078526985385
BALANCE: 44872823.98221799
==================================
TICK: 4449 / TRADE: 533
--------------------------------
BUY: 1285754268831.4604 DLTBTC for 3.4900000000000015e-05 each.
SELL: 1285754268831.4604 DLTBTC for 3.5890000000000004e-05 each.
REWARD: 0.025797452095271955
BALANCE: 46030428.50927883
==================================
TICK: 4453 / TRADE: 534
--------------------------------
BUY: 1334215319109.531 DLTBTC for 3.4500000000000005e-05 each.
SELL: 1334215319109.531 DLTBTC for 3.469e-05 each.
REWARD: 0.002995049365942082
BALANCE: 46168291.91499958
==================================
TICK: 4457 / TRADE: 535
--------------------------------
BUY: 1317212322824.5242 DLTBTC for 3.5050000000000005e-05 each.
SELL: 1317212322824.5242 DLTBTC for 3.5560000000000005e-05 each.
REWARD: 0.012015850570613607
BALANCE: 46723043.211750686
==================================
TICK: 4460 / TRADE: 536
--------------------------------
BUY: 1331520182723.0173 DLTBTC for 3.5090000000000005e-05 each.
SELL: 1331520182723.0173 DLTBTC for 3.523000000000001e-05 each.
REWARD: 0.0014813350491598154
BALANCE: 46792255.69326366
==================================
TICK: 4465 / TRADE: 537
--------------------------------
BUY: 1322562342941.313 DLTBTC for 3.5380000000000003e-05 each.
SELL: 1322562342941.313 DLTBTC for 3.5600000000000005e-05 each.
REWARD: 0.0037042290842286274
BALANCE: 46965584.92771931
==================================
TICK: 4467 / TRADE: 538
--------------------------------
BUY: 1304599581325.5364 DLTBTC for 3.6e-05 each.
SELL: 1304599581325.5364 DLTBTC for 3.636e-05 each.
REWARD: 0.007476578125000133
BALANCE: 47316726.79261773
==================================
TICK: 4469 / TRADE: 539
--------------------------------
BUY: 1296348679249.8008 DLTBTC for 3.65e-05 each.
SELL: 1296348679249.8008 DLTBTC for 3.844000000000001e-05 each.
REWARD: 0.050519453767123634
BALANCE: 49707141.984229006
==================================
TICK: 4471 / TRADE: 540
--------------------------------
BUY: 1312573065334.8035 DLTBTC for 3.787e-05 each.
SELL: 1312573065334.8035 DLTBTC for 4.154000000000001e-05 each.
REWARD: 0.09416992094665999
BALANCE: 54388059.615368254
==================================
TICK: 4478 / TRADE: 541
--------------------------------
BUY: 1422653926637.9346 DLTBTC for 3.823000000000001e-05 each.
SELL: 1422653926637.9346 DLTBTC for 4.0620000000000014e-05 each.
REWARD: 0.05986171772822413
BALANCE: 57643822.287849255
==================================
TICK: 4484 / TRADE: 542
--------------------------------
BUY: 1497242137346.734 DLTBTC for 3.85e-05 each.
SELL: 1497242137346.734 DLTBTC for 4.039e-05 each.
REWARD: 0.04646982102272745
BALANCE: 60322520.392631516
==================================
TICK: 4495 / TRADE: 543
--------------------------------
BUY: 1505804303360.7463 DLTBTC for 4.006000000000001e-05 each.
SELL: 1505804303360.7463 DLTBTC for 4.0410000000000015e-05 each.
REWARD: 0.006216628572766059
BALANCE: 60697523.096485615
==================================
TICK: 4499 / TRADE: 544
--------------------------------
BUY: 1567601319640.6409 DLTBTC for 3.872e-05 each.
SELL: 1567601319640.6409 DLTBTC for 4.059e-05 each.
REWARD: 0.04567635387073876
BALANCE: 63469964.64051803
==================================
TICK: 4509 / TRADE: 545
--------------------------------
BUY: 1573375424901.29 DLTBTC for 4.034e-05 each.
SELL: 1573375424901.29 DLTBTC for 4.288e-05 each.
REWARD: 0.060309048091224726
BALANCE: 67297777.79037137
==================================
TICK: 4517 / TRADE: 546
--------------------------------
BUY: 1541405812880.7002 DLTBTC for 4.366e-05 each.
SELL: 1541405812880.7002 DLTBTC for 4.31e-05 each.
REWARD: -0.015292777284699799
BALANCE: 66268607.86286801
==================================
TICK: 4528 / TRADE: 547
--------------------------------
BUY: 1512636563863.684 DLTBTC for 4.381000000000001e-05 each.
SELL: 1512636563863.684 DLTBTC for 4.3970000000000014e-05 each.
REWARD: 0.001144572086852591
BALANCE: 66344457.06166243
==================================
TICK: 4535 / TRADE: 548
--------------------------------
BUY: 1589469503154.3462 DLTBTC for 4.174000000000001e-05 each.
SELL: 1589469503154.3462 DLTBTC for 4.55e-05 each.
REWARD: 0.08735795624700526
BALANCE: 72140173.23888646
==================================
TICK: 4543 / TRADE: 549
--------------------------------
BUY: 1485282545581.356 DLTBTC for 4.857e-05 each.
SELL: 1485282545581.356 DLTBTC for 4.873000000000001e-05 each.
REWARD: 0.0007875466465929737
BALANCE: 72196986.99040538
==================================
TICK: 4549 / TRADE: 550
--------------------------------
BUY: 1567795591539.747 DLTBTC for 4.6050000000000015e-05 each.
SELL: 1567795591539.747 DLTBTC for 4.498000000000001e-05 each.
REWARD: -0.025675998235613395
BALANCE: 70343257.27982312
==================================
TICK: 4569 / TRADE: 551
--------------------------------
BUY: 1686888663784.7273 DLTBTC for 4.17e-05 each.
SELL: 1686888663784.7273 DLTBTC for 4.099000000000001e-05 each.
REWARD: -0.01948227705335681
BALANCE: 68972810.45266205
==================================
TICK: 4585 / TRADE: 552
--------------------------------
BUY: 1660794857998.1233 DLTBTC for 4.153e-05 each.
SELL: 1660794857998.1233 DLTBTC for 4.210000000000001e-05 each.
REWARD: 0.011192289459427185
BALANCE: 69744774.11207844
==================================
TICK: 4588 / TRADE: 553
--------------------------------
BUY: 1637201270236.5833 DLTBTC for 4.26e-05 each.
SELL: 1637201270236.5833 DLTBTC for 4.272e-05 each.
REWARD: 0.0003114260563381599
BALANCE: 69766494.45203036
==================================
TICK: 4595 / TRADE: 554
--------------------------------
BUY: 1645048206838.7256 DLTBTC for 4.241e-05 each.
SELL: 1645048206838.7256 DLTBTC for 4.244e-05 each.
REWARD: -0.0017928245107287077
BALANCE: 69641415.37074915
==================================
TICK: 4597 / TRADE: 555
--------------------------------
BUY: 1610578523837.8618 DLTBTC for 4.324e-05 each.
SELL: 1610578523837.8618 DLTBTC for 4.335e-05 each.
REWARD: 3.914741847865777e-05
BALANCE: 69644141.65238011
==================================
TICK: 4599 / TRADE: 556
--------------------------------
BUY: 1619254630373.869 DLTBTC for 4.301e-05 each.
SELL: 1619254630373.869 DLTBTC for 4.352e-05 each.
REWARD: 0.009329644268774695
BALANCE: 70293896.71940097
==================================
TICK: 4601 / TRADE: 557
--------------------------------
BUY: 1629436641618.0105 DLTBTC for 4.314e-05 each.
SELL: 1629436641618.0105 DLTBTC for 4.772e-05 each.
REWARD: 0.10340228471256374
BALANCE: 77562446.24153602
==================================
TICK: 4615 / TRADE: 558
--------------------------------
BUY: 1626729157750.3362 DLTBTC for 4.768e-05 each.
SELL: 1626729157750.3362 DLTBTC for 4.8040000000000014e-05 each.
REWARD: 0.005033034028943506
BALANCE: 77952820.67283778
==================================
TICK: 4620 / TRADE: 559
--------------------------------
BUY: 1787498754249.8918 DLTBTC for 4.361e-05 each.
SELL: 1787498754249.8918 DLTBTC for 4.05e-05 each.
REWARD: -0.0736341829568905
BALANCE: 72212828.41340837
==================================
TICK: 4626 / TRADE: 560
--------------------------------
BUY: 1995380724327.3936 DLTBTC for 3.619e-05 each.
SELL: 1995380724327.3936 DLTBTC for 3.831e-05 each.
REWARD: 0.05593492288961044
BALANCE: 76252047.40235303
==================================
TICK: 4629 / TRADE: 561
--------------------------------
BUY: 2105828428675.864 DLTBTC for 3.621e-05 each.
SELL: 2105828428675.864 DLTBTC for 3.956e-05 each.
REWARD: 0.08978629694835694
BALANCE: 83098436.37334089
==================================
TICK: 4634 / TRADE: 562
--------------------------------
BUY: 2210064797163.322 DLTBTC for 3.76e-05 each.
SELL: 2210064797163.322 DLTBTC for 3.731e-05 each.
REWARD: -0.010191933593749813
BALANCE: 82251502.62807935
==================================
TICK: 4639 / TRADE: 563
--------------------------------
BUY: 2194543826789.7366 DLTBTC for 3.7480000000000014e-05 each.
SELL: 2194543826789.7366 DLTBTC for 3.788e-05 each.
REWARD: 0.008147256870330688
BALANCE: 82921626.747961
==================================
TICK: 4648 / TRADE: 564
--------------------------------
BUY: 2205362413509.601 DLTBTC for 3.76e-05 each.
SELL: 2205362413509.601 DLTBTC for 3.7400000000000015e-05 each.
REWARD: -0.007804296874999506
BALANCE: 82274481.755462
==================================
TICK: 4653 / TRADE: 565
--------------------------------
BUY: 2314331413655.7524 DLTBTC for 3.5550000000000004e-05 each.
SELL: 2314331413655.7524 DLTBTC for 3.607000000000001e-05 each.
REWARD: 0.012092302654712173
BALANCE: 83269369.68960865
==================================
TICK: 4657 / TRADE: 566
--------------------------------
BUY: 2337057807735.2974 DLTBTC for 3.563e-05 each.
SELL: 2337057807735.2974 DLTBTC for 3.766e-05 each.
REWARD: 0.05433367509823195
BALANCE: 87793700.56795841
==================================
TICK: 4660 / TRADE: 567
--------------------------------
BUY: 2330599961984.561 DLTBTC for 3.767e-05 each.
SELL: 2330599961984.561 DLTBTC for 3.929000000000001e-05 each.
REWARD: 0.04039916088731155
BALANCE: 91340492.40209582
==================================
TICK: 4664 / TRADE: 568
--------------------------------
BUY: 2400538565101.0728 DLTBTC for 3.805e-05 each.
SELL: 2400538565101.0728 DLTBTC for 3.951000000000001e-05 each.
REWARD: 0.03577626108738552
BALANCE: 94608313.70612356
==================================
TICK: 4670 / TRADE: 569
--------------------------------
BUY: 2363435266203.4365 DLTBTC for 4.003e-05 each.
SELL: 2363435266203.4365 DLTBTC for 3.985e-05 each.
REWARD: -0.006983830486509968
BALANCE: 93947585.28058544
==================================
TICK: 4673 / TRADE: 570
--------------------------------
BUY: 2354576072195.123 DLTBTC for 3.9900000000000014e-05 each.
SELL: 2354576072195.123 DLTBTC for 4.566e-05 each.
REWARD: 0.14150178806390956
BALANCE: 107241336.58207491
==================================
TICK: 4685 / TRADE: 571
--------------------------------
BUY: 2585374555980.591 DLTBTC for 4.148e-05 each.
SELL: 2585374555980.591 DLTBTC for 4.164e-05 each.
REWARD: 0.0013492059426229996
BALANCE: 107386027.23068628
==================================
TICK: 4688 / TRADE: 572
--------------------------------
BUY: 2641722687101.7524 DLTBTC for 4.065000000000001e-05 each.
SELL: 2641722687101.7524 DLTBTC for 4.096e-05 each.
REWARD: 0.005108585485854578
BALANCE: 107934617.93078054
==================================
TICK: 4692 / TRADE: 573
--------------------------------
BUY: 2769684832711.843 DLTBTC for 3.8970000000000015e-05 each.
SELL: 2769684832711.843 DLTBTC for 3.937e-05 each.
REWARD: 0.007740223649602029
BALANCE: 108770056.01309913
==================================
TICK: 4695 / TRADE: 574
--------------------------------
BUY: 2750886596183.59 DLTBTC for 3.954e-05 each.
SELL: 2750886596183.59 DLTBTC for 4.019000000000001e-05 each.
REWARD: 0.013899539627592938
BALANCE: 110281909.7169487
==================================
TICK: 4710 / TRADE: 575
--------------------------------
BUY: 2642748854947.249 DLTBTC for 4.173e-05 each.
SELL: 2642748854947.249 DLTBTC for 4.316e-05 each.
REWARD: 0.03168385903426785
BALANCE: 113776066.19845036
==================================
TICK: 4714 / TRADE: 576
--------------------------------
BUY: 2718663469497.0215 DLTBTC for 4.185e-05 each.
SELL: 2718663469497.0215 DLTBTC for 4.236e-05 each.
REWARD: 0.00965749551971351
BALANCE: 114874858.04801252
==================================
TICK: 4716 / TRADE: 577
--------------------------------
BUY: 2753472148801.834 DLTBTC for 4.172e-05 each.
SELL: 2753472148801.834 DLTBTC for 4.428e-05 each.
REWARD: 0.058709712068552466
BALANCE: 121619127.88792717
==================================
TICK: 4728 / TRADE: 578
--------------------------------
BUY: 2773526291628.898 DLTBTC for 4.385e-05 each.
SELL: 2773526291628.898 DLTBTC for 4.468000000000001e-05 each.
REWARD: 0.01638243586088972
BALANCE: 123611545.45000848
==================================
TICK: 4735 / TRADE: 579
--------------------------------
BUY: 2734768704646.205 DLTBTC for 4.52e-05 each.
SELL: 2734768704646.205 DLTBTC for 4.619e-05 each.
REWARD: 0.01934949495298688
BALANCE: 126003366.42482433
==================================
TICK: 4737 / TRADE: 580
--------------------------------
BUY: 2725575739234.7896 DLTBTC for 4.623e-05 each.
SELL: 2725575739234.7896 DLTBTC for 4.799000000000001e-05 each.
REWARD: 0.03547696267304801
BALANCE: 130473583.1521562
==================================
TICK: 4742 / TRADE: 581
--------------------------------
BUY: 2865032568119.371 DLTBTC for 4.5540000000000015e-05 each.
SELL: 2865032568119.371 DLTBTC for 4.771e-05 each.
REWARD: 0.04503292812637216
BALANCE: 136349190.6446375
==================================
TICK: 4745 / TRADE: 582
--------------------------------
BUY: 2955759606430.4683 DLTBTC for 4.613e-05 each.
SELL: 2955759606430.4683 DLTBTC for 4.701000000000001e-05 each.
REWARD: 0.016530423870041666
BALANCE: 138603100.56033048
==================================
TICK: 4748 / TRADE: 583
--------------------------------
BUY: 3087616408116.0713 DLTBTC for 4.489000000000001e-05 each.
SELL: 3087616408116.0713 DLTBTC for 4.646000000000001e-05 each.
REWARD: 0.03238856301514814
BALANCE: 143092255.81692365
==================================
TICK: 4750 / TRADE: 584
--------------------------------
BUY: 3148344462418.562 DLTBTC for 4.545e-05 each.
SELL: 3148344462418.562 DLTBTC for 4.516e-05 each.
REWARD: -0.008863133938393775
BALANCE: 141824009.98807135
==================================
TICK: 4752 / TRADE: 585
--------------------------------
BUY: 3140478520550.7383 DLTBTC for 4.516e-05 each.
SELL: 3140478520550.7383 DLTBTC for 5.071e-05 each.
REWARD: 0.12009088207207719
BALANCE: 158855780.4465379
==================================
TICK: 4781 / TRADE: 586
--------------------------------
BUY: 3100229907231.4194 DLTBTC for 5.124e-05 each.
SELL: 3100229907231.4194 DLTBTC for 5.3e-05 each.
REWARD: 0.031763911250975996
BALANCE: 163901661.35834628
==================================
TICK: 4784 / TRADE: 587
--------------------------------
BUY: 3083756563656.5615 DLTBTC for 5.315000000000001e-05 each.
SELL: 3083756563656.5615 DLTBTC for 5.395e-05 each.
REWARD: 0.012515697024929384
BALANCE: 165953004.89378992
==================================
TICK: 4787 / TRADE: 588
--------------------------------
BUY: 3161009617024.57 DLTBTC for 5.25e-05 each.
SELL: 3161009617024.57 DLTBTC for 5.400000000000001e-05 each.
REWARD: 0.026001607142857264
BALANCE: 170268049.7312149
==================================
TICK: 4794 / TRADE: 589
--------------------------------
BUY: 3294660405015.7676 DLTBTC for 5.1680000000000013e-05 each.
SELL: 3294660405015.7676 DLTBTC for 5.22e-05 each.
REWARD: 0.007538342927631447
BALANCE: 171551588.67970783
==================================
TICK: 4796 / TRADE: 590
--------------------------------
BUY: 3272011990839.363 DLTBTC for 5.243000000000001e-05 each.
SELL: 3272011990839.363 DLTBTC for 5.408000000000001e-05 each.
REWARD: 0.028893467480450186
BALANCE: 176508308.92844453
==================================
TICK: 4799 / TRADE: 591
--------------------------------
BUY: 3184346183085.7754 DLTBTC for 5.543e-05 each.
SELL: 3184346183085.7754 DLTBTC for 5.508e-05 each.
REWARD: -0.008796931941187025
BALANCE: 174955577.347747
==================================
TICK: 4801 / TRADE: 592
--------------------------------
BUY: 3171208579803.28 DLTBTC for 5.5170000000000016e-05 each.
SELL: 3171208579803.28 DLTBTC for 6.290000000000001e-05 each.
REWARD: 0.13726388039242354
BALANCE: 198970658.79079553
==================================
TICK: 4810 / TRADE: 593
--------------------------------
BUY: 3152260120259.7515 DLTBTC for 6.312e-05 each.
SELL: 3152260120259.7515 DLTBTC for 6.595e-05 each.
REWARD: 0.042224778942886676
BALANCE: 207372150.8743574
==================================
TICK: 4813 / TRADE: 594
--------------------------------
BUY: 2924854032078.384 DLTBTC for 7.09e-05 each.
SELL: 2924854032078.384 DLTBTC for 8e-05 each.
REWARD: 0.1255306770098732
BALANCE: 233403717.36660907
==================================
TICK: 4816 / TRADE: 595
--------------------------------
BUY: 3204774369993.259 DLTBTC for 7.283e-05 each.
SELL: 3204774369993.259 DLTBTC for 7.177e-05 each.
REWARD: -0.01701651598757381
BALANCE: 229431999.278481
==================================
TICK: 4826 / TRADE: 596
--------------------------------
BUY: 3377974076538.295 DLTBTC for 6.792e-05 each.
SELL: 3377974076538.295 DLTBTC for 6.790000000000001e-05 each.
REWARD: -0.0027921658752942946
BALANCE: 228791387.0793951
==================================
TICK: 4846 / TRADE: 597
--------------------------------
BUY: 3655982535624.7217 DLTBTC for 6.258e-05 each.
SELL: 3655982535624.7217 DLTBTC for 8.494000000000001e-05 each.
REWARD: 0.35391151675854937
BALANCE: 309763293.9019562
==================================
TICK: 4857 / TRADE: 598
--------------------------------
BUY: 3921550752018.6885 DLTBTC for 7.899e-05 each.
SELL: 3921550752018.6885 DLTBTC for 8.800000000000001e-05 each.
REWARD: 0.11128164957589592
BALANCE: 344234264.22542894
==================================
TICK: 4862 / TRADE: 599
--------------------------------
BUY: 4348588481877.5757 DLTBTC for 7.916000000000001e-05 each.
SELL: 4348588481877.5757 DLTBTC for 9.2e-05 each.
REWARD: 0.15929944100555837
BALANCE: 399070590.09149945
==================================
TICK: 4869 / TRADE: 600
--------------------------------
BUY: 4637120498390.651 DLTBTC for 8.606e-05 each.
SELL: 4637120498390.651 DLTBTC for 9.449999999999999e-05 each.
REWARD: 0.09532765113002561
BALANCE: 437113052.0799954
==================================
TICK: 4874 / TRADE: 601
--------------------------------
BUY: 7248972671310.038 DLTBTC for 6.0300000000000016e-05 each.
SELL: 7248972671310.038 DLTBTC for 6.649000000000001e-05 each.
REWARD: 0.09989848906509136
BALANCE: 480779985.5334175
==================================
TICK: 4879 / TRADE: 602
--------------------------------
BUY: 8741454282425.772 DLTBTC for 5.5e-05 each.
SELL: 8741454282425.772 DLTBTC for 7.82e-05 each.
REWARD: 0.41826585795454574
BALANCE: 681873838.6699265
==================================
TICK: 4890 / TRADE: 603
--------------------------------
BUY: 10364399432587.422 DLTBTC for 6.579e-05 each.
SELL: 10364399432587.422 DLTBTC for 6.797e-05 each.
REWARD: 0.030554509851421274
BALANCE: 702708159.5909933
==================================
TICK: 4893 / TRADE: 604
--------------------------------
BUY: 10779385789093.316 DLTBTC for 6.519e-05 each.
SELL: 10779385789093.316 DLTBTC for 6.459e-05 each.
REWARD: -0.01167930784054294
BALANCE: 694501014.6730686
==================================
TICK: 4896 / TRADE: 605
--------------------------------
BUY: 11387129278128.688 DLTBTC for 6.099e-05 each.
SELL: 11387129278128.688 DLTBTC for 6.230000000000001e-05 each.
REWARD: 0.018926829705689707
BALANCE: 707645717.1082145
==================================
TICK: 4902 / TRADE: 606
--------------------------------
BUY: 12410482586955.705 DLTBTC for 5.702000000000001e-05 each.
SELL: 12410482586955.705 DLTBTC for 5.828e-05 each.
REWARD: 0.019543862898982578
BALANCE: 721475847.9844296
==================================
TICK: 4906 / TRADE: 607
--------------------------------
BUY: 12950562699415.357 DLTBTC for 5.571e-05 each.
SELL: 12950562699415.357 DLTBTC for 5.6950000000000015e-05 each.
REWARD: 0.019704074391940773
BALANCE: 735691861.7651033
==================================
TICK: 4908 / TRADE: 608
--------------------------------
BUY: 13437294278814.672 DLTBTC for 5.475e-05 each.
SELL: 13437294278814.672 DLTBTC for 5.831000000000001e-05 each.
REWARD: 0.06236193807077628
BALANCE: 781571032.0876728
==================================
TICK: 4915 / TRADE: 609
--------------------------------
BUY: 13704559566678.46 DLTBTC for 5.7030000000000015e-05 each.
SELL: 13704559566678.46 DLTBTC for 5.967e-05 each.
REWARD: 0.043677331831930344
BALANCE: 815707969.4063904
==================================
TICK: 4927 / TRADE: 610
--------------------------------
BUY: 18661815818036.836 DLTBTC for 4.3710000000000013e-05 each.
SELL: 18661815818036.836 DLTBTC for 5.5e-05 each.
REWARD: 0.25514952956989223
BALANCE: 1023835474.066843
==================================
TICK: 4933 / TRADE: 611
--------------------------------
BUY: 19072941022109.59 DLTBTC for 5.3680000000000015e-05 each.
SELL: 19072941022109.59 DLTBTC for 5.849e-05 each.
REWARD: 0.08688275690434022
BALANCE: 1112789122.6702325
==================================
TICK: 4945 / TRADE: 612
--------------------------------
BUY: 21978848956552.094 DLTBTC for 5.063e-05 each.
SELL: 21978848956552.094 DLTBTC for 5.595000000000001e-05 each.
REWARD: 0.10231507844904253
BALANCE: 1226644229.0534785
==================================
TICK: 4950 / TRADE: 613
--------------------------------
BUY: 22889423942031.688 DLTBTC for 5.3590000000000014e-05 each.
SELL: 22889423942031.688 DLTBTC for 5.759000000000001e-05 each.
REWARD: 0.07195586834064183
BALANCE: 1314908479.7000587
==================================
TICK: 4961 / TRADE: 614
--------------------------------
BUY: 22565788222070.684 DLTBTC for 5.827e-05 each.
SELL: 22565788222070.684 DLTBTC for 6.188e-05 each.
REWARD: 0.059299754376179736
BALANCE: 1392882229.5734282
==================================
TICK: 4965 / TRADE: 615
--------------------------------
BUY: 22275423469909.29 DLTBTC for 6.253000000000001e-05 each.
SELL: 22275423469909.29 DLTBTC for 6.55e-05 each.
REWARD: 0.044880095054373736
BALANCE: 1455394916.4362316
==================================
TICK: 4971 / TRADE: 616
--------------------------------
BUY: 21686707144035.633 DLTBTC for 6.711000000000001e-05 each.
SELL: 21686707144035.633 DLTBTC for 6.855000000000001e-05 each.
REWARD: 0.01890526165064843
BALANCE: 1482909538.1364822
==================================
TICK: 4974 / TRADE: 617
--------------------------------
BUY: 20786508804828.74 DLTBTC for 7.134e-05 each.
SELL: 20786508804828.74 DLTBTC for 7.000000000000001e-05 each.
REWARD: -0.021234799901878154
BALANCE: 1451420250.8215675
==================================
TICK: 4978 / TRADE: 618
--------------------------------
BUY: 22537581534496.387 DLTBTC for 6.440000000000001e-05 each.
SELL: 22537581534496.387 DLTBTC for 6.730000000000001e-05 each.
REWARD: 0.04242011112189448
BALANCE: 1512989659.1459863
==================================
TICK: 4998 / TRADE: 619
--------------------------------
BUY: 23751799986593.19 DLTBTC for 6.37e-05 each.
SELL: 23751799986593.19 DLTBTC for 6.669000000000001e-05 each.
REWARD: 0.0443230644132655
BALANCE: 1580049997.2649186
==================================
TICK: 5001 / TRADE: 620
--------------------------------
BUY: 24271121309752.973 DLTBTC for 6.51e-05 each.
SELL: 24271121309752.973 DLTBTC for 6.591000000000001e-05 each.
REWARD: 0.00991287226382509
BALANCE: 1595712831.0582628
==================================
TICK: 5010 / TRADE: 621
--------------------------------
BUY: 25356949484478.984 DLTBTC for 6.293000000000001e-05 each.
SELL: 25356949484478.984 DLTBTC for 6.824000000000001e-05 each.
REWARD: 0.0816702149213413
BALANCE: 1726035040.9235332
==================================
TICK: 5018 / TRADE: 622
--------------------------------
BUY: 24860075484999.758 DLTBTC for 6.943e-05 each.
SELL: 24860075484999.758 DLTBTC for 6.856000000000001e-05 each.
REWARD: -0.014997736929281191
BALANCE: 1700148421.449041
==================================
TICK: 5021 / TRADE: 623
--------------------------------
BUY: 27698736093988.938 DLTBTC for 6.138e-05 each.
SELL: 27698736093988.938 DLTBTC for 6.774000000000001e-05 each.
REWARD: 0.10085949566226815
BALANCE: 1871624533.7873924
==================================
TICK: 5025 / TRADE: 624
--------------------------------
BUY: 26883431970516.984 DLTBTC for 6.962e-05 each.
SELL: 26883431970516.984 DLTBTC for 8.765000000000003e-05 each.
REWARD: 0.25583182926062964
BALANCE: 2350445661.955294
==================================
TICK: 5041 / TRADE: 625
--------------------------------
BUY: 29289042516576.87 DLTBTC for 8.025000000000001e-05 each.
SELL: 29289042516576.87 DLTBTC for 8.325e-05 each.
REWARD: 0.034791340537382975
BALANCE: 2432220817.394995
==================================
TICK: 5061 / TRADE: 626
--------------------------------
BUY: 33898547977630.59 DLTBTC for 7.175000000000001e-05 each.
SELL: 33898547977630.59 DLTBTC for 7.041000000000001e-05 each.
REWARD: -0.02112773497386744
BALANCE: 2380833500.5671506
==================================
TICK: 5082 / TRADE: 627
--------------------------------
BUY: 36555097506021.04 DLTBTC for 6.513000000000001e-05 each.
SELL: 36555097506021.04 DLTBTC for 6.539e-05 each.
REWARD: 0.0014836046656685475
BALANCE: 2384365716.256772
==================================
TICK: 5095 / TRADE: 628
--------------------------------
BUY: 37343237529471.76 DLTBTC for 6.385000000000001e-05 each.
SELL: 37343237529471.76 DLTBTC for 6.671e-05 each.
REWARD: 0.042182133662881816
BALANCE: 2484943349.601108
==================================
TICK: 5098 / TRADE: 629
--------------------------------
BUY: 37452047469496.734 DLTBTC for 6.635e-05 each.
SELL: 37452047469496.734 DLTBTC for 7.396e-05 each.
REWARD: 0.11190980501130388
BALANCE: 2763032875.319104
==================================
TICK: 5111 / TRADE: 630
--------------------------------
BUY: 35730413491776.85 DLTBTC for 7.733e-05 each.
SELL: 35730413491776.85 DLTBTC for 7.7e-05 each.
REWARD: -0.006755200924608795
BALANCE: 2744368033.085024
==================================
TICK: 5117 / TRADE: 631
--------------------------------
BUY: 36837154806510.38 DLTBTC for 7.450000000000001e-05 each.
SELL: 36837154806510.38 DLTBTC for 7.299e-05 each.
REWARD: -0.022716254404362313
BALANCE: 2682026270.666265
==================================
TICK: 5149 / TRADE: 632
--------------------------------
BUY: 38075330361531.305 DLTBTC for 7.044e-05 each.
SELL: 38075330361531.305 DLTBTC for 7.099999999999999e-05 each.
REWARD: 0.005431728243895595
BALANCE: 2696594308.5115128
==================================
TICK: 5159 / TRADE: 633
--------------------------------
BUY: 38688584053249.83 DLTBTC for 6.97e-05 each.
SELL: 38688584053249.83 DLTBTC for 6.826000000000001e-05 each.
REWARD: -0.0231067911585362
BALANCE: 2634284666.98544
==================================
TICK: 5162 / TRADE: 634
--------------------------------
BUY: 40527456415160.61 DLTBTC for 6.500000000000001e-05 each.
SELL: 40527456415160.61 DLTBTC for 6.401e-05 each.
REWARD: -0.017691153605769117
BALANCE: 2587681132.300478
==================================
TICK: 5176 / TRADE: 635
--------------------------------
BUY: 40306559693153.86 DLTBTC for 6.42e-05 each.
SELL: 40306559693153.86 DLTBTC for 6.1e-05 each.
REWARD: -0.052218141549844166
BALANCE: 2452557232.6481504
==================================
TICK: 5183 / TRADE: 636
--------------------------------
BUY: 41205598666803.59 DLTBTC for 5.952000000000001e-05 each.
SELL: 41205598666803.59 DLTBTC for 5.951000000000001e-05 each.
REWARD: -0.002666028488323202
BALANCE: 2446018645.196667
==================================
TICK: 5186 / TRADE: 637
--------------------------------
BUY: 40098666314699.46 DLTBTC for 6.1e-05 each.
SELL: 40098666314699.46 DLTBTC for 6.394e-05 each.
REWARD: 0.04557786731557378
BALANCE: 2557502958.4588604
==================================
TICK: 5191 / TRADE: 638
--------------------------------
BUY: 39346199360905.54 DLTBTC for 6.500000000000001e-05 each.
SELL: 39346199360905.54 DLTBTC for 6.592e-05 each.
REWARD: 0.011620046153846264
BALANCE: 2587221260.8747506
==================================
TICK: 5202 / TRADE: 639
--------------------------------
BUY: 38870511731892.29 DLTBTC for 6.656e-05 each.
SELL: 38870511731892.29 DLTBTC for 6.673e-05 each.
REWARD: 4.92678128758417e-05
BALANCE: 2587348727.6077
==================================
TICK: 5210 / TRADE: 640
--------------------------------
BUY: 40002299437348.48 DLTBTC for 6.468000000000001e-05 each.
SELL: 40002299437348.48 DLTBTC for 6.3e-05 each.
REWARD: -0.028407568993506493
BALANCE: 2513848440.117923
==================================
TICK: 5213 / TRADE: 641
--------------------------------
BUY: 39463868761662.836 DLTBTC for 6.37e-05 each.
SELL: 39463868761662.836 DLTBTC for 6.554000000000001e-05 each.
REWARD: 0.02631479444662488
BALANCE: 2579999845.0895944
==================================
TICK: 5228 / TRADE: 642
--------------------------------
BUY: 40143143692073.97 DLTBTC for 6.427e-05 each.
SELL: 40143143692073.97 DLTBTC for 6.314000000000001e-05 each.
REWARD: -0.020036585401431273
BALANCE: 2528305457.857777
==================================
TICK: 5247 / TRADE: 643
--------------------------------
BUY: 40693794589695.43 DLTBTC for 6.213e-05 each.
SELL: 40693794589695.43 DLTBTC for 6.548e-05 each.
REWARD: 0.05128605041847756
BALANCE: 2657972259.0427833
==================================
TICK: 5258 / TRADE: 644
--------------------------------
BUY: 40816527319453.055 DLTBTC for 6.512000000000001e-05 each.
SELL: 40816527319453.055 DLTBTC for 6.483e-05 each.
REWARD: -0.006940628119241565
BALANCE: 2639524262.041507
==================================
TICK: 5269 / TRADE: 645
--------------------------------
BUY: 41632874795607.36 DLTBTC for 6.340000000000001e-05 each.
SELL: 41632874795607.36 DLTBTC for 6.492000000000001e-05 each.
REWARD: 0.021416426458990667
BALANCE: 2696053439.28624 <------------------------------------------------------------------------------------

==================================
TICK: 5277 / TRADE: 646
--------------------------------
sonra bu oldu!!!
----------
==================================
TICK: 4874 / TRADE: 603
--------------------------------
BUY: 320110246924619.3 DLTBTC for 6.0300000000000016e-05 each.
SELL: 320110246924619.3 DLTBTC for 6.649000000000001e-05 each.
REWARD: 0.09989848906509136
BALANCE: 21230953248.676525
==================================
TICK: 4879 / TRADE: 604
--------------------------------
BUY: 386017331794118.6 DLTBTC for 5.5e-05 each.
SELL: 386017331794118.6 DLTBTC for 6.985e-05 each.
REWARD: 0.2668269843750002
BALANCE: 26895944479.427494
==================================
TICK: 4883 / TRADE: 605
--------------------------------
BUY: 377275136476749.8 DLTBTC for 7.129e-05 each.
SELL: 377275136476749.8 DLTBTC for 7.82e-05 each.
REWARD: 0.09418743424744003
BALANCE: 29429204481.60637
==================================
TICK: 4890 / TRADE: 606
--------------------------------
BUY: 447320329557780.3 DLTBTC for 6.579e-05 each.
SELL: 447320329557780.3 DLTBTC for 6.583000000000001e-05 each.
REWARD: -0.001891961401808695
BALANCE: 29373525562.641235
==================================
TICK: 4909 / TRADE: 607
--------------------------------
BUY: 541846994330220.2 DLTBTC for 5.421e-05 each.
SELL: 541846994330220.2 DLTBTC for 5.831000000000001e-05 each.
REWARD: 0.07294440341957253
BALANCE: 31516159861.137665
==================================
TICK: 4918 / TRADE: 608
--------------------------------
BUY: 538277708986125.7 DLTBTC for 5.8550000000000014e-05 each.
SELL: 538277708986125.7 DLTBTC for 5.713e-05 each.
REWARD: -0.026690618862083904
BALANCE: 30674974050.287533
==================================
TICK: 4928 / TRADE: 609
--------------------------------
BUY: 661383657832848.9 DLTBTC for 4.638e-05 each.
SELL: 661383657832848.9 DLTBTC for 5.999e-05 each.
REWARD: 0.2902138580072231
BALANCE: 39577276613.69293
==================================
TICK: 4931 / TRADE: 610
--------------------------------
BUY: 719586847521689.6 DLTBTC for 5.5e-05 each.
SELL: 719586847521689.6 DLTBTC for 5.719000000000001e-05 each.
REWARD: 0.03722026107954579
BALANCE: 41050353182.07198
==================================
TICK: 4933 / TRADE: 611
--------------------------------
BUY: 764723419934276.6 DLTBTC for 5.3680000000000015e-05 each.
SELL: 764723419934276.6 DLTBTC for 6.005e-05 each.
REWARD: 0.11587125238682927
BALANCE: 45806909016.200325
==================================
TICK: 4945 / TRADE: 612
--------------------------------
BUY: 904738475532299.5 DLTBTC for 5.063e-05 each.
SELL: 904738475532299.5 DLTBTC for 5.595000000000001e-05 each.
REWARD: 0.10231507844904253
BALANCE: 50493646505.70101
==================================
TICK: 4950 / TRADE: 613
--------------------------------
BUY: 942221431343552.9 DLTBTC for 5.3590000000000014e-05 each.
SELL: 942221431343552.9 DLTBTC for 5.5170000000000016e-05 each.
REWARD: 0.02691101330705359
BALANCE: 51852481698.737595
==================================
TICK: 4953 / TRADE: 614
--------------------------------
BUY: 930757165656750.9 DLTBTC for 5.571e-05 each.
SELL: 930757165656750.9 DLTBTC for 5.5890000000000015e-05 each.
REWARD: 0.000724507774636951
BALANCE: 51890049224.86255
==================================
TICK: 4957 / TRADE: 615
--------------------------------
BUY: 910032431162092.9 DLTBTC for 5.702000000000001e-05 each.
SELL: 910032431162092.9 DLTBTC for 6.184e-05 each.
REWARD: 0.08182210847071203
BALANCE: 56135802461.089836
==================================
TICK: 4965 / TRADE: 616
--------------------------------
BUY: 897741923254275.1 DLTBTC for 6.253000000000001e-05 each.
SELL: 897741923254275.1 DLTBTC for 7.099999999999999e-05 each.
REWARD: 0.13261811830321402
BALANCE: 63580426952.9205
==================================
TICK: 4974 / TRADE: 617
--------------------------------
BUY: 891231103909735.0 DLTBTC for 7.134e-05 each.
SELL: 891231103909735.0 DLTBTC for 7.002e-05 each.
REWARD: -0.020955152701850333
BALANCE: 62248089397.27321
==================================
TICK: 4976 / TRADE: 618
--------------------------------
BUY: 902146223148887.0 DLTBTC for 6.900000000000001e-05 each.
SELL: 902146223148887.0 DLTBTC for 7.000000000000001e-05 each.
REWARD: 0.011958106884058184
BALANCE: 62992458703.61421
==================================
TICK: 4978 / TRADE: 619
--------------------------------
BUY: 978143768689661.6 DLTBTC for 6.440000000000001e-05 each.
SELL: 978143768689661.6 DLTBTC for 6.637e-05 each.
REWARD: 0.028015197253493884
BALANCE: 64757204859.678535
==================================
TICK: 4984 / TRADE: 620
--------------------------------
BUY: 1022213178526890.8 DLTBTC for 6.335000000000001e-05 each.
SELL: 1022213178526890.8 DLTBTC for 6.500000000000001e-05 each.
REWARD: 0.02348226617995275
BALANCE: 66277850781.26324
==================================
TICK: 4989 / TRADE: 621
--------------------------------
BUY: 1036563196453913.6 DLTBTC for 6.394e-05 each.
SELL: 1036563196453913.6 DLTBTC for 6.669000000000001e-05 each.
REWARD: 0.0404031780282299
BALANCE: 68955686585.70708
==================================
TICK: 5002 / TRADE: 622
--------------------------------
BUY: 1054207102670953.4 DLTBTC for 6.541000000000001e-05 each.
SELL: 1054207102670953.4 DLTBTC for 6.397000000000001e-05 each.
REWARD: -0.024458416860953958
BALANCE: 67269139658.26056
==================================
TICK: 5007 / TRADE: 623
--------------------------------
BUY: 1038745207817488.4 DLTBTC for 6.476000000000001e-05 each.
SELL: 1038745207817488.4 DLTBTC for 6.591000000000001e-05 each.
REWARD: 0.01521507079022566
BALANCE: 68292644380.15857
==================================
TICK: 5010 / TRADE: 624
--------------------------------
BUY: 1085216023838527.9 DLTBTC for 6.293000000000001e-05 each.
SELL: 1085216023838527.9 DLTBTC for 6.824000000000001e-05 each.
REWARD: 0.0816702149213413
BALANCE: 73870119324.23285
==================================
TICK: 5017 / TRADE: 625
--------------------------------
BUY: 1085686644976967.1 DLTBTC for 6.804e-05 each.
SELL: 1085686644976967.1 DLTBTC for 6.943e-05 each.
REWARD: 0.01787968084031455
BALANCE: 75190893481.38608
==================================
TICK: 5021 / TRADE: 626
--------------------------------
BUY: 1225006410579766.8 DLTBTC for 6.138e-05 each.
SELL: 1225006410579766.8 DLTBTC for 7.055000000000001e-05 each.
REWARD: 0.14652550072295556
BALANCE: 86208276798.55258
==================================
TICK: 5024 / TRADE: 627
--------------------------------
BUY: 1272634732780522.0 DLTBTC for 6.774000000000001e-05 each.
SELL: 1272634732780522.0 DLTBTC for 6.962e-05 each.
REWARD: 0.025185396829790374
BALANCE: 88379466459.73654
---------------------------------




% mysql --user=root mysql
CREATE USER 'monty'@'localhost' IDENTIFIED BY 'some_pass';
GRANT ALL PRIVILEGES ON *.* TO 'monty'@'localhost' WITH GRANT OPTION;
CREATE USER 'monty'@'%' IDENTIFIED BY 'some_pass';
GRANT ALL PRIVILEGES ON *.* TO 'monty'@'%' WITH GRANT OPTION;
CREATE USER 'admin'@'localhost';
GRANT RELOAD,PROCESS ON *.* TO 'admin'@'localhost';
CREATE USER 'dummy'@'localhost';
FLUSH PRIVILEGES;









DQN
______
https://github.com/golsun/deep-RL-trading/blob/master/data/SinSamplerDB/concat_half_base_B/param.json


X = numpy.reshape(dataX, (len(dataX), seq_length, 1))
Samples - This is the len(dataX), or the amount of data points you have.
Time steps - This is equivalent to the amount of time steps you run your recurrent neural network. If you want your network to have memory of 60 characters, this number should be 60.
Features - this is the amount of features in every time step. If you are processing pictures, this is the amount of pixels. In this case you seem to have 1 feature per time step.


python main.py --mode=table --algos=crp,ons,olmar,up,anticor,pamr,best,bk,bcrp,corn,m0,rmr,cwmr,eg,sp,ubah,wmamr

python main.py --mode=table --algos=bcrp,best


You have ₺1,679.34 free trial credits remaining
$254.62 monthly estimate

That's about $0.349 hourly

Pay for what you use: No upfront costs and per second billing

 Details






python3 ./freqtrade/main.py --strategy renko_strategy

python3 ./freqtrade/main.py backtesting --refresh-pairs-cached --timerange=20180101- -s strategy001
python3 ./freqtrade/main.py backtesting --refresh-pairs-cached --timerange=20190101- --strategy renko_strategy
python3 ./freqtrade/main.py backtesting --timerange=20190201- --strategy renko_strategy
python3 ./freqtrade/main.py backtesting --refresh-pairs-cached --strategy renko_strategy --timerange=20190101-

python3 scripts/plot_renko.py -s renko_strategy -p ADA/BTC --datadir user_data/data/binance/
python3 scripts/plot_renko.py -s renko_strategy -p BAT/BTC --datadir user_data/data/binance/ --timerange=20181001-
python3 scripts/plot_renko.py -s renko_strategy -p DLT/BTC --datadir user_data/data/binance/ --timerange=20180101-
python3 scripts/plot_renko.py -s renko_strategy -p ADA/BTC --datadir user_data/data/binance/ --timerange=20190101-
python3 scripts/plot_renko.py -s renko_strategy -p ADA/BTC --datadir user_data/data/binance/ --timerange=20190201-
python3 scripts/plot_renko.py -s renko_strategy -p ADA/BTC --datadir user_data/data/binance/ --timerange=100-2000
python3 scripts/plot_renko.py -s renko_strategy -p ADA/BTC --datadir user_data/data/binance/ --timerange=100-500 --indicators1 ema10 --indicators2 macd

renko_df['ema'] = ta.EMA(renko_df, timeperiod=2, price='close')
renko_df['previous-ema'] = renko_df.ema.shift(-1)
renko_df['rsi'] = ta.RSI(renko_df, timeperiod=14)

# if not np.isnan(row['atr']):
#     data_slice =  dataframe.iloc[0:index+1,:]
#     brick_size = np.mean(data_slice['atr'])

#if str(renko_row['date'].iloc[0]) == "2018-01-03 00:45:00":

def evaluate_renko(self, brick, history, column_name):
    renko_obj = pyrenko.renko()
    renko_obj.set_brick_size(brick_size = brick, auto = False)
    renko_obj.build_history(prices = history)
    return renko_obj.evaluate()[column_name]

def calculate_renko(dataframe, interval, pair):
    atr_list = pd.read_csv('atrvalues.csv')
    brick_size = atr_list[(atr_list['pair'] == pair) & (atr_list['period'] == interval)].value.values[0]
    dataframe['bricksize'] = ta.ATR(dataframe)
    #brick_size = np.mean(dataframe['bricksize'])
    print(brick_size)
    columns = ['date', 'open', 'high', 'low', 'close', 'volume','bricksize']
    df = dataframe[columns]
    cdf = pd.DataFrame(
        columns=columns,
        data=[],
    )
    cdf.loc[0] = df.loc[0]
    close =  df.loc[0]['close']
    volume = df.loc[0]['volume']
    cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
    cdf['trend'] = True
    columns = ['date', 'open', 'high', 'low', 'close', 'volume','bricksize', 'trend']
    for index, row in df.iterrows():
        #if not np.isnan(row['bricksize']): brick_size = row['bricksize']
        close = row['close']
        date = row['date']
        volume = row['volume']
        row_p1 = cdf.iloc[-1]
        trend = row_p1['trend']
        close_p1 = row_p1['close']
        bricks = int((close - close_p1) / brick_size)
        data = []
        if trend and bricks >= 1:
            for i in range(bricks):
                r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                data.append(r)
                close_p1 += brick_size
        elif trend and bricks <= -2:
            trend = not trend
            bricks += 1
            close_p1 -= brick_size
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume,brick_size,trend]
                data.append(r)
                close_p1 -= brick_size
        elif not trend and bricks <= -1:
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size,trend]
                data.append(r)
                close_p1 -= brick_size
        elif not trend and bricks >= 2:
            trend = not trend
            bricks -= 1
            close_p1 += brick_size
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size,trend]
                data.append(r)
                close_p1 += brick_size
        else:
            continue

        sdf = pd.DataFrame(data=data, columns=columns)
        cdf = pd.concat([cdf, sdf])

    renko_df = cdf.reset_index()
    renko_df['previous-trend'] = renko_df.trend.shift(1)
    renko_df['previous-bricksize'] = renko_df.bricksize.shift(1)
    renko_df['buy'] = 0
    renko_df['sell'] = 0
    buy_mode = True

    for index, row in renko_df.iterrows():
        if row['previous-trend'] == False and row['trend'] == True and buy_mode == True:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:] #[0:1]
            x = renko_df.loc[renko_df['date'] == row['date']]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'buy'] = 1
            buy_mode = False

        if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:] #[0:1]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'sell'] = 1
            buy_mode = True
    return renko_df

,
            "DLT/BTC",
            "DASH/BTC",
            "ETC/BTC",
            "ETH/BTC",
            "LSK/BTC",
            "LTC/BTC",
            "ADX/BTC",
            "AE/BTC",
            "AGI/BTC",
            "AION/BTC",
            "AMB/BTC",
            "APPC/BTC",
            "ARDR/BTC",
            "ARK/BTC",
            "ARN/BTC",
            "AST/BTC",
            "DENT/BTC",
            "BCD/BTC",
            "GNT/BTC",
            "BCPT/BTC",
            "BLZ/BTC",
            "MANA/BTC",
            "MCO/BTC",
            "MDA/BTC",
            "MFT/BTC",
            "MITH/BTC",
            "MOD/BTC",
            "MTH/BTC",
            "MTL/BTC",
            "NANO/BTC",
            "NAS/BTC",
            "NAV/BTC",
            "NCASH/BTC",
            "NEBL/BTC",
            "NEO/BTC",
            "NPXS/BTC",
            "NULS/BTC",
            "NXS/BTC",
            "OAX/BTC",
            "OMG/BTC",
            "ONT/BTC",
            "OST/BTC",
            "PAX/BTC",
            "PHX/BTC",
            "PIVX/BTC",
            "POA/BTC",
            "POE/BTC",
            "POLY/BTC",
            "POWR/BTC",
            "PPT/BTC",
            "QKC/BTC",
            "QLC/BTC",
            "QSP/BTC",
            "QTUM/BTC",
            "RCN/BTC",
            "RDN/BTC",
            "REP/BTC",
            "REQ/BTC",
            "RLC/BTC",
            "RVN/BTC",
            "SALT/BTC",
            "SC/BTC",
            "SKY/BTC",
            "SNGLS/BTC",
            "SNM/BTC",
            "SNT/BTC",
            "STEEM/BTC",
            "STORJ/BTC",
            "STORM/BTC",
            "STRAT/BTC",
            "SUB/BTC",
            "SYS/BTC",
            "THETA/BTC",
            "TNB/BTC",
            "TNT/BTC",
            "TRIG/BTC",
            "TRX/BTC",
            "TUSD/BTC",
            "USDC/BTC",
            "VET/BTC",
            "VIA/BTC",
            "VIB/BTC",
            "VIBE/BTC",
            "WABI/BTC",
            "WAN/BTC",
            "WAVES/BTC",
            "WINGS/BTC",
            "WPR/BTC",
            "WTC/BTC",
            "XEM/BTC",
            "XLM/BTC",
            "XMR/BTC",
            "XRP/BTC",
            "XVG/BTC",
            "XZC/BTC",
            "ZEC/BTC",
            "ZEN/BTC",
            "ZIL/BTC",
            "ZRX/BTC"

python3 scripts/plot_dataframe.py -s strategy001 -p ADA/BTC --datadir user_data/data/binance/ --timerange=100-500 --indicators1 ema10 --indicators2 macd
renko_df = cdf.groupby(['date']).last()

python3 scripts/see_results.py


    for index, row in renko_df.iterrows():
        if row['previous-trend'] == False and row['trend'] == True and buy_mode == True: # and row['bricksize'] > row['previous-bricksize']:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:] #[0:1]
            x = renko_df.loc[renko_df['date'] == row['date']]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'buy'] = 1
            buy_mode = False

        if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:# and row['bricksize'] > row['previous-bricksize']:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:] #[0:1]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'sell'] = 1
            buy_mode = True
    return renko_df



=============


macd = ta.MACD(renko_df)
renko_df['macd'] = macd['macd']
renko_df['macdsignal'] = macd['macdsignal']
renko_df['macdhist'] = macd['macdhist']
renko_df['ema'] = ta.EMA(dataframe, timeperiod=2)
renko_df['previous_ema'] = renko_df['ema'].shift(1)
renko_df['ema'] = renko_df['ema'].shift(-1)
renko_df['previous_ema'] = renko_df['previous_ema'].shift(-1)

pd.options.display.max_rows = 999

for index, row in dataframe.iterrows():
    if row['uptrend-previous'] == False and row['uptrend'] == True:
        last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
        dataframe.loc[dataframe.index== last_row.index.values[0], 'buy'] = 1

try:
    renko_df = cdf.groupby(['date']).last()
    renko_df['uptrend-previous'] = renko_df.uptrend.shift(1)
except:
    breakpoint()

"ADA/BTC",
"BAT/BTC",
"DASH/BTC",
"ETC/BTC",
"ETH/BTC",
"LSK/BTC",
"LTC/BTC",
"NEO/BTC",
"POWR/BTC",
"STORJ/BTC",
"QTUM/BTC",
"XLM/BTC",
"XMR/BTC",
"XVG/BTC",
"XRP/BTC" ,
"DLT/BTC",
"ADX/BTC",
"AE/BTC",
"AGI/BTC",
"AION/BTC",
"AMB/BTC",
"APPC/BTC",
"ARDR/BTC",
"ARK/BTC",
"ARN/BTC",
"AST/BTC",
"DENT/BTC",
"BCD/BTC",
"GNT/BTC",
"BCPT/BTC",
"BLZ/BTC"













=====================
import talib.abstract as ta
from pandas import DataFrame
import pandas as pd
import numpy as np
import pdb
import freqtrade.vendor.qtpylib.indicators as qtpylib
from freqtrade.strategy.interface import IStrategy
from fbprophet import Prophet
pd.set_option("display.precision", 10)


class renko_strategy(IStrategy):

    minimal_roi = {
        "0": 100
    }
    stoploss = -100
    order_types = {
        'buy': 'limit',
        'sell': 'limit',
        'stoploss': 'limit',
        'stoploss_on_exchange': False
    }
    order_time_in_force = {
        'buy': 'gtc',
        'sell': 'gtc',
    }

    ticker_interval = '15m'

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        dataframe['atr'] = ta.ATR(dataframe)
        brick_size = np.mean(dataframe['atr'])
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr']
        df = dataframe[columns]
        cdf = pd.DataFrame(
            columns=columns,
            data=[],
        )
        cdf.loc[0] = df.loc[0]
        close = df.loc[0]['close']
        volume = df.loc[0]['volume']
        cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
        cdf['uptrend'] = True
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr', 'uptrend']
        for index, row in df.iterrows():
            #if not np.isnan(row['atr']): brick_size = row['atr']
            close = row['close']
            date = row['date']
            volume = row['volume']
            row_p1 = cdf.iloc[-1]
            uptrend = row_p1['uptrend']
            close_p1 = row_p1['close']
            bricks = int((close - close_p1) / brick_size)
            data = []
            if uptrend and bricks >= 1:
                for i in range(bricks):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 += brick_size
            elif uptrend and bricks <= -2:
                uptrend = not uptrend
                bricks += 1
                close_p1 -= brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not uptrend and bricks <= -1:
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not uptrend and bricks >= 2:
                uptrend = not uptrend
                bricks -= 1
                close_p1 += brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, uptrend]
                    data.append(r)
                    close_p1 += brick_size
            else:
                continue

            sdf = pd.DataFrame(data=data, columns=columns)
            cdf = pd.concat([cdf, sdf])

        renko_df = cdf.reset_index()
        renko_df['uptrend-previous'] = renko_df.uptrend.shift(1)

        return renko_df

    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        for index, row in dataframe.iterrows():
            if row['uptrend-previous'] == False and row['uptrend'] == False:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                predicted_trend = True
                if index+1 < dataframe.date.count():
                    predicted_trend = dataframe.iloc[last_row.index.values[0]+1]['uptrend']
                    if predicted_trend == True:
                        dataframe.loc[dataframe.index == last_row.index.values[0], 'buy'] = 1

        return dataframe

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        for index, row in dataframe.iterrows():
            if row['uptrend-previous'] == True and row['uptrend'] == True:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                predicted_trend = False
                if index+1 < dataframe.date.count():
                    predicted_trend = dataframe.iloc[last_row.index.values[0]+1]['uptrend']
                    if predicted_trend == False:
                        dataframe.loc[dataframe.index== last_row.index.values[0], 'sell'] = 1

        return dataframe


================================================================================================================================================
import talib.abstract as ta
from pandas import DataFrame
import pandas as pd
import numpy as np
import pdb
import freqtrade.vendor.qtpylib.indicators as qtpylib
from freqtrade.strategy.interface import IStrategy
#from fbprophet import Prophet
pd.set_option("display.precision", 8)
pd.options.display.max_rows = 999

class renko_strategy(IStrategy):

    minimal_roi = {
        "0": 100
    }
    stoploss = -100
    order_types = {
        'buy': 'limit',
        'sell': 'limit',
        'stoploss': 'limit',
        'stoploss_on_exchange': False
    }
    order_time_in_force = {
        'buy': 'gtc',
        'sell': 'gtc',
    }

    ticker_interval = '15m'

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        dataframe['atr'] = ta.ATR(dataframe)
        brick_size = np.mean(dataframe['atr'])
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr']
        df = dataframe[columns]
        cdf = pd.DataFrame(
            columns=columns,
            data=[],
        )
        cdf.loc[0] = df.loc[0]
        close = df.loc[0]['close']
        volume = df.loc[0]['volume']
        cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
        cdf['trend'] = True
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr', 'trend']
        for index, row in df.iterrows():
            #if not np.isnan(row['atr']): brick_size = row['atr']
            close = row['close']
            date = row['date']
            volume = row['volume']
            row_p1 = cdf.iloc[-1]
            trend = row_p1['trend']
            close_p1 = row_p1['close']
            bricks = int((close - close_p1) / brick_size)
            data = []
            if trend and bricks >= 1:
                for i in range(bricks):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            elif trend and bricks <= -2:
                trend = not trend
                bricks += 1
                close_p1 -= brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks <= -1:
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks >= 2:
                trend = not trend
                bricks -= 1
                close_p1 += brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            else:
                continue

            sdf = pd.DataFrame(data=data, columns=columns)
            cdf = pd.concat([cdf, sdf])

        renko_df = cdf.groupby(['date']).last()
        renko_df = renko_df.reset_index()
        renko_df['previous-trend'] = renko_df.trend.shift(1)
        renko_df['next-trend'] = renko_df.trend.shift(-1)

        return renko_df

    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        buy_mode = True
        for index, row in dataframe.iterrows():
            #if row['trend'] == False and row['next-trend'] == True and buy_mode == True:
            #if row['previous-trend'] == False and row['trend'] == False and row['next-trend'] == True and buy_mode == True:
            if row['previous-trend'] == False and row['trend'] == True and buy_mode == True:
                dataframe.loc[index, 'buy'] = 1
                buy_mode = False

            #if row['trend'] == True and row['next-trend'] == False and buy_mode == False:
            #if row['previous-trend'] == True and row['trend'] == True and row['next-trend'] == False and buy_mode == False:
            if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:
                dataframe.loc[index, 'sell'] = 1
                buy_mode = True
                #dataframe.loc[( (dataframe['previous-trend'] == False) & (dataframe['trend'] == False) & (dataframe['next-trend'] == True)), 'buy'] = 1

        return dataframe

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        return dataframe
=====================

import talib.abstract as ta
from pandas import DataFrame
import pandas as pd
import numpy as np
import pdb
import freqtrade.vendor.qtpylib.indicators as qtpylib
from freqtrade.strategy.interface import IStrategy
from fbprophet import Prophet
import matplotlib.pyplot as plt
from datetime import timezone, datetime
import pytz
from technical.util import resample_to_interval
from technical.util import resampled_merge

pd.set_option("display.precision", 8)
pd.options.display.max_rows = 999

class renko_strategy(IStrategy):

    minimal_roi = {
        "0": 100
    }
    stoploss = -100
    order_types = {
        'buy': 'limit',
        'sell': 'limit',
        'stoploss': 'limit',
        'stoploss_on_exchange': False
    }
    order_time_in_force = {
        'buy': 'gtc',
        'sell': 'gtc',
    }

    ticker_interval = '1m'

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        dataframe['atr'] = ta.ATR(dataframe)
        brick_size = np.mean(dataframe['atr'])
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr']
        df = dataframe[columns]
        cdf = pd.DataFrame(
            columns=columns,
            data=[],
        )
        cdf.loc[0] = df.loc[0]
        close = df.loc[0]['close']
        volume = df.loc[0]['volume']
        cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
        cdf['trend'] = True
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr', 'trend']
        for index, row in df.iterrows():
            #if not np.isnan(row['atr']): brick_size = row['atr'] #without works better
            close = row['close']
            date = row['date']
            volume = row['volume']
            row_p1 = cdf.iloc[-1]
            trend = row_p1['trend']
            close_p1 = row_p1['close']
            bricks = int((close - close_p1) / brick_size)
            data = []
            if trend and bricks >= 1:
                for i in range(bricks):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            elif trend and bricks <= -2:
                trend = not trend
                bricks += 1
                close_p1 -= brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks <= -1:
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks >= 2:
                trend = not trend
                bricks -= 1
                close_p1 += brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            else:
                continue

            sdf = pd.DataFrame(data=data, columns=columns)
            cdf = pd.concat([cdf, sdf])

        renko_df = cdf.reset_index()
        renko_df['previous-trend'] = renko_df.trend.shift(1)

        return renko_df

    def get_ticker_indicator(self):
        return int(self.ticker_interval[:-1])

    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        dataframe_fast = dataframe
        dataframe_slow =  resample_to_interval(dataframe, self.get_ticker_indicator() * 15)


        buy_mode = True
        for index, row in dataframe_slow.iterrows():
            breakpoint()
            if row['trend'] == False and buy_mode == True:
                last_row = dataframe_slow.loc[dataframe_slow['date'] == row['date']][-1:]
                if index+1 < dataframe_slow.date.count():

                    predicted_trend = dataframe_slow.iloc[last_row.index.values[0]+1]['trend'] #self.predict(dataframe.iloc[0:last_row.index.values[0]+1,:]) #
                    if predicted_trend == True:
                        dataframe_slow.loc[dataframe_slow.index == last_row.index.values[0], 'buy'] = 1
                        buy_mode = False

            if row['trend'] == True and buy_mode == False:
                last_row = dataframe_slow.loc[dataframe_slow['date'] == row['date']][-1:]
                if index+1 < dataframe_slow.date.count():
                    predicted_trend = dataframe_slow.iloc[last_row.index.values[0]+1]['trend']
                    if predicted_trend == False:
                        dataframe_slow.loc[dataframe_slow.index == last_row.index.values[0], 'sell'] = 1
                        buy_mode = True
        breakpoint()
        # for index, row in dataframe.iterrows():
        #     if row['previous-trend'] == False and row['trend'] == True and buy_mode == True:
        #         last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
        #         dataframe.loc[dataframe.index== last_row.index.values[0], 'buy'] = 1
        #         buy_mode = False

        #     if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:
        #         last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
        #         dataframe.loc[dataframe.index== last_row.index.values[0], 'sell'] = 1
        #         buy_mode = True

        return dataframe_slow

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        return dataframe

    def predict(self, df):
        #return df.trend.shift(-1)
        df = pd.DataFrame({'ds': pd.to_datetime(df.date.dt.tz_localize(None)),'y': df.close})
        m = Prophet().fit(df)
        future = m.make_future_dataframe(1)
        forecast = m.predict(future)
        predicted_value = forecast[-1:].trend.values[0]
        trend = False
        if predicted_value > df[-1:].y.values[0]:
            trend = True
        return trend
        # m.plot(forecast,xlabel='Date', ylabel='Price')
        # m.plot_components(forecast)
        # plt.show()

================================
import talib.abstract as ta
from pandas import DataFrame
import pandas as pd
import numpy as np
import pdb
import freqtrade.vendor.qtpylib.indicators as qtpylib
from freqtrade.strategy.interface import IStrategy
from fbprophet import Prophet
import matplotlib.pyplot as plt
from datetime import timezone, datetime
import pytz
from technical.util import resample_to_interval
from technical.util import resampled_merge

pd.set_option("display.precision", 8)
#pd.options.display.max_rows = 999

class renko_strategy(IStrategy):

    minimal_roi = {
        "0": 100
    }
    stoploss = -100
    order_types = {
        'buy': 'limit',
        'sell': 'limit',
        'stoploss': 'limit',
        'stoploss_on_exchange': False
    }
    order_time_in_force = {
        'buy': 'gtc',
        'sell': 'gtc',
    }

    ticker_interval = '15m'

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

      return dataframe

    def get_ticker_indicator(self):
        return int(self.ticker_interval[:-1])

    def calculate_renko(self, dataframe: DataFrame):
        dfx = dataframe
        dfx['atr'] = ta.ATR(dfx)
        brick_size = np.mean(dfx['atr'])
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr']
        df = dfx[columns]
        cdf = pd.DataFrame(
            columns=columns,
            data=[],
        )
        cdf.loc[0] = df.loc[0]
        close = df.loc[0]['close']
        volume = df.loc[0]['volume']
        cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume, brick_size]
        cdf['trend'] = True
        columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'atr', 'trend']
        for index, row in df.iterrows():
            if not np.isnan(row['atr']): brick_size = row['atr'] #without works better
            close = row['close']
            date = row['date']
            volume = row['volume']
            row_p1 = cdf.iloc[-1]
            trend = row_p1['trend']
            close_p1 = row_p1['close']
            bricks = int((close - close_p1) / brick_size)
            data = []
            if trend and bricks >= 1:
                for i in range(bricks):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            elif trend and bricks <= -2:
                trend = not trend
                bricks += 1
                close_p1 -= brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks <= -1:
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 -= brick_size
            elif not trend and bricks >= 2:
                trend = not trend
                bricks -= 1
                close_p1 += brick_size
                for i in range(abs(bricks)):
                    r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, brick_size, trend]
                    data.append(r)
                    close_p1 += brick_size
            else:
                continue

            sdf = pd.DataFrame(data=data, columns=columns)
            cdf = pd.concat([cdf, sdf])

        renko_df = cdf.reset_index()
        renko_df['previous-trend'] = renko_df.trend.shift(1)

        return renko_df


    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        # fast_candles = dataframe
        # slow_candles = resample_to_interval(fast_candles, self.get_ticker_indicator() * 3)
        # slow_candles = slow_candles.set_index('date').reset_index()
        # slow_candles['buy'] = 0
        # slow_candles['sell'] = 0
        # dataframe_slow = self.calculate_renko(slow_candles)
        # dataframe_slow['date'] = dataframe_slow['date'].apply(lambda x: x - pd.DateOffset(minutes=15))
        # dataframe_fast = self.calculate_renko(fast_candles)
        # dataframe_fast['buy'] = 0
        # dataframe_fast['sell'] = 0

        #buy_mode = True
        # for index, row in dataframe_slow.iterrows():
        #     if row['trend'] == False and buy_mode == True:
        #         last_row = dataframe_slow.loc[dataframe_slow['date'] == row['date']][-1:]
        #         if index+1 < dataframe_slow.date.count():
        #             #data_slice =  dataframe_fast.iloc[0:last_row.index.values[0]+1,:]
        #             #dataframe_fast[(df['date'] > row.date) & (df['date'] < '2013-02-01')]
        #             predicted_trend = self.predict(dataframe.iloc[0:last_row.index.values[0]+1,:]) # dataframe_slow.iloc[last_row.index.values[0]+1]['trend'] #
        #             if predicted_trend == True:
        #                 dataframe_slow.loc[dataframe_slow.index == last_row.index.values[0], 'buy'] = 1
        #                 buy_mode = False

        #     if row['trend'] == True and buy_mode == False:
        #         last_row = dataframe_slow.loc[dataframe_slow['date'] == row['date']][-1:]
        #         if index+1 < dataframe_slow.date.count():
        #             predicted_trend = dataframe_slow.iloc[last_row.index.values[0]+1]['trend']
        #             if predicted_trend == False:
        #                 dataframe_slow.loc[dataframe_slow.index == last_row.index.values[0], 'sell'] = 1
        #                 buy_mode = True

        dataframe = self.calculate_renko(dataframe)
        buy_mode = True
        for index, row in dataframe.iterrows():
            if row['previous-trend'] == False and row['trend'] == True and buy_mode == True:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                dataframe.loc[dataframe.index== last_row.index.values[0], 'buy'] = 1
                buy_mode = False

            if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:
                last_row = dataframe.loc[dataframe['date'] == row['date']][-1:]
                dataframe.loc[dataframe.index== last_row.index.values[0], 'sell'] = 1
                buy_mode = True

        return dataframe

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:

        return dataframe

    def predict(self, df):
        #return df.trend.shift(-1)
        df = pd.DataFrame({'ds': pd.to_datetime(df.date.dt.tz_localize(None)),'y': df.close})
        m = Prophet().fit(df)
        future = m.make_future_dataframe(1)
        forecast = m.predict(future)
        predicted_value = forecast[-1:].trend.values[0]
        trend = False
        if predicted_value > df[-1:].y.values[0]:
            trend = True
        return trend
        # m.plot(forecast,xlabel='Date', ylabel='Price')
        # m.plot_components(forecast)
        # plt.show()

=========
"""
Freqtrade is the main module of this bot. It contains the class Freqtrade() my verison
"""

import copy
import logging
import time
import traceback
from datetime import datetime
from typing import Any, Callable, Dict, List, Optional

import arrow
from requests.exceptions import RequestException

from freqtrade import (DependencyException, OperationalException,
                       TemporaryError, __version__, constants, persistence)
from freqtrade.data.converter import order_book_to_dataframe
from freqtrade.data.dataprovider import DataProvider
from freqtrade.edge import Edge
from freqtrade.persistence import Trade
from freqtrade.rpc import RPCManager, RPCMessageType
from freqtrade.resolvers import ExchangeResolver, StrategyResolver, PairListResolver
from freqtrade.state import State
from freqtrade.strategy.interface import SellType, IStrategy
from freqtrade.wallets import Wallets


logger = logging.getLogger(__name__)


class FreqtradeBot(object):
    """
    Freqtrade is the main class of the bot.
    This is from here the bot start its logic.
    """

    def __init__(self, config: Dict[str, Any]) -> None:
        """
        Init all variables and objects the bot needs to work
        :param config: configuration dict, you can use Configuration.get_config()
        to get the config dict.
        """

        logger.info(
            'Starting freqtrade %s',
            __version__,
        )

        # Init bot states
        self.state = State.STOPPED

        # Init objects
        self.config = config
        self.strategy: IStrategy = StrategyResolver(self.config).strategy

        self.rpc: RPCManager = RPCManager(self)

        exchange_name = self.config.get('exchange', {}).get('name', 'bittrex').title()
        self.exchange = ExchangeResolver(exchange_name, self.config).exchange

        self.wallets = Wallets(self.exchange)
        self.dataprovider = DataProvider(self.config, self.exchange)

        # Attach Dataprovider to Strategy baseclass
        IStrategy.dp = self.dataprovider
        # Attach Wallets to Strategy baseclass
        IStrategy.wallets = self.wallets

        pairlistname = self.config.get('pairlist', {}).get('method', 'StaticPairList')
        self.pairlists = PairListResolver(pairlistname, self, self.config).pairlist

        # Initializing Edge only if enabled
        self.edge = Edge(self.config, self.exchange, self.strategy) if \
            self.config.get('edge', {}).get('enabled', False) else None

        self.active_pair_whitelist: List[str] = self.config['exchange']['pair_whitelist']
        self._init_modules()

    def _init_modules(self) -> None:
        """
        Initializes all modules and updates the config
        :return: None
        """
        # Initialize all modules

        persistence.init(self.config)

        # Set initial application state
        initial_state = self.config.get('initial_state')

        if initial_state:
            self.state = State[initial_state.upper()]
        else:
            self.state = State.STOPPED

    def cleanup(self) -> None:
        """
        Cleanup pending resources on an already stopped bot
        :return: None
        """
        logger.info('Cleaning up modules ...')
        self.rpc.cleanup()
        persistence.cleanup()

    def worker(self, old_state: State = None) -> State:
        """
        Trading routine that must be run at each loop
        :param old_state: the previous service state from the previous call
        :return: current service state
        """
        # Log state transition
        state = self.state
        if state != old_state:
            self.rpc.send_msg({
                'type': RPCMessageType.STATUS_NOTIFICATION,
                'status': f'{state.name.lower()}'
            })
            logger.info('Changing state to: %s', state.name)
            if state == State.RUNNING:
                self.rpc.startup_messages(self.config, self.pairlists)

        if state == State.STOPPED:
            time.sleep(1)
        elif state == State.RUNNING:
            min_secs = self.config.get('internals', {}).get(
                'process_throttle_secs',
                constants.PROCESS_THROTTLE_SECS
            )

            self._throttle(func=self._process,
                           min_secs=min_secs)
        return state

    def _throttle(self, func: Callable[..., Any], min_secs: float, *args, **kwargs) -> Any:
        """
        Throttles the given callable that it
        takes at least `min_secs` to finish execution.
        :param func: Any callable
        :param min_secs: minimum execution time in seconds
        :return: Any
        """
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        duration = max(min_secs - (end - start), 0.0)
        logger.debug('Throttling %s for %.2f seconds', func.__name__, duration)
        time.sleep(duration)
        return result

    def _process(self) -> bool:
        """
        Queries the persistence layer for open trades and handles them,
        otherwise a new trade is created.
        :return: True if one or more trades has been created or closed, False otherwise
        """
        state_changed = False
        try:
            # Refresh whitelist
            self.pairlists.refresh_pairlist()
            self.active_pair_whitelist = self.pairlists.whitelist

            # Calculating Edge positiong
            if self.edge:
                self.edge.calculate()
                self.active_pair_whitelist = self.edge.adjust(self.active_pair_whitelist)

            # Query trades from persistence layer
            trades = Trade.query.filter(Trade.is_open.is_(True)).all()

            # Extend active-pair whitelist with pairs from open trades
            # ensures that tickers are downloaded for open trades
            self.active_pair_whitelist.extend([trade.pair for trade in trades
                                               if trade.pair not in self.active_pair_whitelist])

            # Create pair-whitelist tuple with (pair, ticker_interval)
            pair_whitelist_tuple = [(pair, self.config['ticker_interval'])
                                    for pair in self.active_pair_whitelist]
            # Refreshing candles
            self.dataprovider.refresh(pair_whitelist_tuple,
                                      self.strategy.informative_pairs())

            # First process current opened trades
            for trade in trades:
                state_changed |= self.process_maybe_execute_sell(trade)

            # Then looking for buy opportunities
            if len(trades) < self.config['max_open_trades']:
                state_changed = self.process_maybe_execute_buy()

            if 'unfilledtimeout' in self.config:
                # Check and handle any timed out open orders
                self.check_handle_timedout()
                Trade.session.flush()

        except TemporaryError as error:
            logger.warning(f"Error: {error}, retrying in {constants.RETRY_TIMEOUT} seconds...")
            time.sleep(constants.RETRY_TIMEOUT)
        except OperationalException:
            tb = traceback.format_exc()
            hint = 'Issue `/start` if you think it is safe to restart.'
            self.rpc.send_msg({
                'type': RPCMessageType.STATUS_NOTIFICATION,
                'status': f'OperationalException:\n```\n{tb}```{hint}'
            })
            logger.exception('OperationalException. Stopping trader ...')
            self.state = State.STOPPED
        return state_changed

    def get_target_bid(self, pair: str) -> float:
        """
        Calculates bid target between current ask price and last price
        :return: float: Price
        """
        config_bid_strategy = self.config.get('bid_strategy', {})
        if 'use_order_book' in config_bid_strategy and\
                config_bid_strategy.get('use_order_book', False):
            logger.info('Getting price from order book')
            order_book_top = config_bid_strategy.get('order_book_top', 1)
            order_book = self.exchange.get_order_book(pair, order_book_top)
            logger.debug('order_book %s', order_book)
            # top 1 = index 0
            order_book_rate = order_book['bids'][order_book_top - 1][0]
            logger.info('...top %s order book buy rate %0.8f', order_book_top, order_book_rate)
            used_rate = order_book_rate
        else:
            logger.info('Using Last Ask / Last Price')
            ticker = self.exchange.get_ticker(pair)
            if ticker['ask'] < ticker['last']:
                ticker_rate = ticker['ask']
            else:
                balance = self.config['bid_strategy']['ask_last_balance']
                ticker_rate = ticker['ask'] + balance * (ticker['last'] - ticker['ask'])
            used_rate = ticker_rate

        return used_rate

    def _get_trade_stake_amount(self, pair) -> Optional[float]:
        """
        Check if stake amount can be fulfilled with the available balance
        for the stake currency
        :return: float: Stake Amount
        """
        if self.edge:
            return self.edge.stake_amount(
                pair,
                self.wallets.get_free(self.config['stake_currency']),
                self.wallets.get_total(self.config['stake_currency']),
                Trade.total_open_trades_stakes()
            )
        else:
            stake_amount = self.config['stake_amount']
            breakpoint()
            # pair_trades = [t for t in trades if t.pair == pair]
            # if len(pair_trades) > 0:
            #     stake_amount =  pair_trades[-1].total_amount

        avaliable_amount = self.wallets.get_free(self.config['stake_currency'])

        if stake_amount == constants.UNLIMITED_STAKE_AMOUNT:
            open_trades = len(Trade.query.filter(Trade.is_open.is_(True)).all())
            if open_trades >= self.config['max_open_trades']:
                logger.warning('Can\'t open a new trade: max number of trades is reached')
                return None
            return avaliable_amount / (self.config['max_open_trades'] - open_trades)

        # Check if stake_amount is fulfilled
        if avaliable_amount < stake_amount:
            raise DependencyException(
                f"Available balance({avaliable_amount} {self.config['stake_currency']}) is "
                f"lower than stake amount({stake_amount} {self.config['stake_currency']})"
            )

        return stake_amount

    def _get_min_pair_stake_amount(self, pair: str, price: float) -> Optional[float]:
        markets = self.exchange.get_markets()
        markets = [m for m in markets if m['symbol'] == pair]
        if not markets:
            raise ValueError(f'Can\'t get market information for symbol {pair}')

        market = markets[0]

        if 'limits' not in market:
            return None

        min_stake_amounts = []
        limits = market['limits']
        if ('cost' in limits and 'min' in limits['cost']
                and limits['cost']['min'] is not None):
            min_stake_amounts.append(limits['cost']['min'])

        if ('amount' in limits and 'min' in limits['amount']
                and limits['amount']['min'] is not None):
            min_stake_amounts.append(limits['amount']['min'] * price)

        if not min_stake_amounts:
            return None

        # reserve some percent defined in config (5% default) + stoploss
        amount_reserve_percent = 1.0 - self.config.get('amount_reserve_percent',
                                                       constants.DEFAULT_AMOUNT_RESERVE_PERCENT)
        if self.strategy.stoploss is not None:
            amount_reserve_percent += self.strategy.stoploss
        # it should not be more than 50%
        amount_reserve_percent = max(amount_reserve_percent, 0.5)
        return min(min_stake_amounts) / amount_reserve_percent

    def create_trade(self) -> bool:
        """
        Checks the implemented trading indicator(s) for a randomly picked pair,
        if one pair triggers the buy_signal a new trade record gets created
        :return: True if a trade object has been created and persisted, False otherwise
        """
        interval = self.strategy.ticker_interval
        whitelist = copy.deepcopy(self.active_pair_whitelist)

        # Remove currently opened and latest pairs from whitelist
        for trade in Trade.query.filter(Trade.is_open.is_(True)).all():
            if trade.pair in whitelist:
                whitelist.remove(trade.pair)
                logger.debug('Ignoring %s in pair whitelist', trade.pair)

        if not whitelist:
            raise DependencyException('No currency pairs in whitelist')

        # running get_signal on historical data fetched
        for _pair in whitelist:
            (buy, sell) = self.strategy.get_signal(
                _pair, interval, self.dataprovider.ohlcv(_pair, self.strategy.ticker_interval))

            if buy and not sell:
                stake_amount = self._get_trade_stake_amount(_pair)
                if not stake_amount:
                    return False

                logger.info(f"Buy signal found: about create a new trade with stake_amount: "
                            f"{stake_amount} ...")

                bidstrat_check_depth_of_market = self.config.get('bid_strategy', {}).\
                    get('check_depth_of_market', {})
                if (bidstrat_check_depth_of_market.get('enabled', False)) and\
                        (bidstrat_check_depth_of_market.get('bids_to_ask_delta', 0) > 0):
                    if self._check_depth_of_market_buy(_pair, bidstrat_check_depth_of_market):
                        return self.execute_buy(_pair, stake_amount)
                    else:
                        return False
                return self.execute_buy(_pair, stake_amount)

        return False

    def _check_depth_of_market_buy(self, pair: str, conf: Dict) -> bool:
        """
        Checks depth of market before executing a buy
        """
        conf_bids_to_ask_delta = conf.get('bids_to_ask_delta', 0)
        logger.info('checking depth of market for %s', pair)
        order_book = self.exchange.get_order_book(pair, 1000)
        order_book_data_frame = order_book_to_dataframe(order_book['bids'], order_book['asks'])
        order_book_bids = order_book_data_frame['b_size'].sum()
        order_book_asks = order_book_data_frame['a_size'].sum()
        bids_ask_delta = order_book_bids / order_book_asks
        logger.info('bids: %s, asks: %s, delta: %s', order_book_bids,
                    order_book_asks, bids_ask_delta)
        if bids_ask_delta >= conf_bids_to_ask_delta:
            return True
        return False

    def execute_buy(self, pair: str, stake_amount: float, price: Optional[float] = None) -> bool:
        """
        Executes a limit buy for the given pair
        :param pair: pair for which we want to create a LIMIT_BUY
        :return: None
        """
        pair_s = pair.replace('_', '/')
        pair_url = self.exchange.get_pair_detail_url(pair)
        stake_currency = self.config['stake_currency']
        fiat_currency = self.config.get('fiat_display_currency', None)
        time_in_force = self.strategy.order_time_in_force['buy']

        if price:
            buy_limit_requested = price
        else:
            # Calculate amount
            buy_limit_requested = self.get_target_bid(pair)

        min_stake_amount = self._get_min_pair_stake_amount(pair_s, buy_limit_requested)
        if min_stake_amount is not None and min_stake_amount > stake_amount:
            logger.warning(
                f'Can\'t open a new trade for {pair_s}: stake amount '
                f'is too small ({stake_amount} < {min_stake_amount})'
            )
            return False

        amount = stake_amount / buy_limit_requested

        order = self.exchange.buy(pair=pair, ordertype=self.strategy.order_types['buy'],
                                  amount=amount, rate=buy_limit_requested,
                                  time_in_force=time_in_force)
        order_id = order['id']
        order_status = order.get('status', None)

        # we assume the order is executed at the price requested
        buy_limit_filled_price = buy_limit_requested

        if order_status == 'expired' or order_status == 'rejected':
            order_type = self.strategy.order_types['buy']
            order_tif = self.strategy.order_time_in_force['buy']

            # return false if the order is not filled
            if float(order['filled']) == 0:
                logger.warning('Buy %s order with time in force %s for %s is %s by %s.'
                               ' zero amount is fulfilled.',
                               order_tif, order_type, pair_s, order_status, self.exchange.name)
                return False
            else:
                # the order is partially fulfilled
                # in case of IOC orders we can check immediately
                # if the order is fulfilled fully or partially
                logger.warning('Buy %s order with time in force %s for %s is %s by %s.'
                               ' %s amount fulfilled out of %s (%s remaining which is canceled).',
                               order_tif, order_type, pair_s, order_status, self.exchange.name,
                               order['filled'], order['amount'], order['remaining']
                               )
                stake_amount = order['cost']
                amount = order['amount']
                buy_limit_filled_price = order['price']
                order_id = None

        # in case of FOK the order may be filled immediately and fully
        elif order_status == 'closed':
            stake_amount = order['cost']
            amount = order['amount']
            buy_limit_filled_price = order['price']
            order_id = None

        self.rpc.send_msg({
            'type': RPCMessageType.BUY_NOTIFICATION,
            'exchange': self.exchange.name.capitalize(),
            'pair': pair_s,
            'market_url': pair_url,
            'limit': buy_limit_filled_price,
            'stake_amount': stake_amount,
            'stake_currency': stake_currency,
            'fiat_currency': fiat_currency
        })

        # Fee is applied twice because we make a LIMIT_BUY and LIMIT_SELL
        fee = self.exchange.get_fee(symbol=pair, taker_or_maker='maker')
        trade = Trade(
            pair=pair,
            stake_amount=stake_amount,
            amount=amount,
            fee_open=fee,
            fee_close=fee,
            open_rate=buy_limit_filled_price,
            open_rate_requested=buy_limit_requested,
            open_date=datetime.utcnow(),
            exchange=self.exchange.id,
            open_order_id=order_id,
            strategy=self.strategy.get_strategy_name(),
            ticker_interval=constants.TICKER_INTERVAL_MINUTES[self.config['ticker_interval']]
        )

        Trade.session.add(trade)
        Trade.session.flush()

        # Updating wallets
        self.wallets.update()

        return True

    def process_maybe_execute_buy(self) -> bool:
        """
        Tries to execute a buy trade in a safe way
        :return: True if executed
        """
        try:
            # Create entity and execute trade
            if self.create_trade():
                return True

            logger.info('Found no buy signals for whitelisted currencies. Trying again..')
            return False
        except DependencyException as exception:
            logger.warning('Unable to create trade: %s', exception)
            return False

    def process_maybe_execute_sell(self, trade: Trade) -> bool:
        """
        Tries to execute a sell trade
        :return: True if executed
        """
        try:
            # Get order details for actual price per unit
            if trade.open_order_id:
                # Update trade with order values
                logger.info('Found open order for %s', trade)
                order = self.exchange.get_order(trade.open_order_id, trade.pair)
                # Try update amount (binance-fix)
                try:
                    new_amount = self.get_real_amount(trade, order)
                    if order['amount'] != new_amount:
                        order['amount'] = new_amount
                        # Fee was applied, so set to 0
                        trade.fee_open = 0

                except OperationalException as exception:
                    logger.warning("Could not update trade amount: %s", exception)

                trade.update(order)

            if self.strategy.order_types.get('stoploss_on_exchange') and trade.is_open:
                result = self.handle_stoploss_on_exchange(trade)
                if result:
                    self.wallets.update()
                    return result

            if trade.is_open and trade.open_order_id is None:
                # Check if we can sell our current pair
                result = self.handle_trade(trade)

                # Updating wallets if any trade occured
                if result:
                    self.wallets.update()

                return result

        except DependencyException as exception:
            logger.warning('Unable to sell trade: %s', exception)
        return False

    def get_real_amount(self, trade: Trade, order: Dict) -> float:
        """
        Get real amount for the trade
        Necessary for self.exchanges which charge fees in base currency (e.g. binance)
        """
        order_amount = order['amount']
        # Only run for closed orders
        if trade.fee_open == 0 or order['status'] == 'open':
            return order_amount

        # use fee from order-dict if possible
        if 'fee' in order and order['fee'] and (order['fee'].keys() >= {'currency', 'cost'}):
            if trade.pair.startswith(order['fee']['currency']):
                new_amount = order_amount - order['fee']['cost']
                logger.info("Applying fee on amount for %s (from %s to %s) from Order",
                            trade, order['amount'], new_amount)
                return new_amount

        # Fallback to Trades
        trades = self.exchange.get_trades_for_order(trade.open_order_id, trade.pair,
                                                    trade.open_date)

        if len(trades) == 0:
            logger.info("Applying fee on amount for %s failed: myTrade-Dict empty found", trade)
            return order_amount
        amount = 0
        fee_abs = 0
        for exectrade in trades:
            amount += exectrade['amount']
            if "fee" in exectrade and (exectrade['fee'].keys() >= {'currency', 'cost'}):
                # only applies if fee is in quote currency!
                if trade.pair.startswith(exectrade['fee']['currency']):
                    fee_abs += exectrade['fee']['cost']

        if amount != order_amount:
            logger.warning(f"Amount {amount} does not match amount {trade.amount}")
            raise OperationalException("Half bought? Amounts don't match")
        real_amount = amount - fee_abs
        if fee_abs != 0:
            logger.info(f"Applying fee on amount for {trade} "
                        f"(from {order_amount} to {real_amount}) from Trades")
        return real_amount

    def handle_trade(self, trade: Trade) -> bool:
        """
        Sells the current pair if the threshold is reached and updates the trade record.
        :return: True if trade has been sold, False otherwise
        """
        if not trade.is_open:
            raise ValueError(f'Attempt to handle closed trade: {trade}')

        logger.debug('Handling %s ...', trade)

        (buy, sell) = (False, False)
        experimental = self.config.get('experimental', {})
        if experimental.get('use_sell_signal') or experimental.get('ignore_roi_if_buy_signal'):
            (buy, sell) = self.strategy.get_signal(
                trade.pair, self.strategy.ticker_interval,
                self.dataprovider.ohlcv(trade.pair, self.strategy.ticker_interval))

        config_ask_strategy = self.config.get('ask_strategy', {})
        if config_ask_strategy.get('use_order_book', False):
            logger.info('Using order book for selling...')
            # logger.debug('Order book %s',orderBook)
            order_book_min = config_ask_strategy.get('order_book_min', 1)
            order_book_max = config_ask_strategy.get('order_book_max', 1)

            order_book = self.exchange.get_order_book(trade.pair, order_book_max)

            for i in range(order_book_min, order_book_max + 1):
                order_book_rate = order_book['asks'][i - 1][0]
                logger.info('  order book asks top %s: %0.8f', i, order_book_rate)
                sell_rate = order_book_rate

                if self.check_sell(trade, sell_rate, buy, sell):
                    return True

        else:
            logger.debug('checking sell')
            sell_rate = self.exchange.get_ticker(trade.pair)['bid']
            if self.check_sell(trade, sell_rate, buy, sell):
                return True

        logger.debug('Found no sell signal for %s.', trade)
        return False

    def handle_stoploss_on_exchange(self, trade: Trade) -> bool:
        """
        Check if trade is fulfilled in which case the stoploss
        on exchange should be added immediately if stoploss on exchange
        is enabled.
        """

        result = False

        # If trade is open and the buy order is fulfilled but there is no stoploss,
        # then we add a stoploss on exchange
        if not trade.open_order_id and not trade.stoploss_order_id:
            if self.edge:
                stoploss = self.edge.stoploss(pair=trade.pair)
            else:
                stoploss = self.strategy.stoploss

            stop_price = trade.open_rate * (1 + stoploss)

            # limit price should be less than stop price.
            # 0.99 is arbitrary here.
            limit_price = stop_price * 0.99

            stoploss_order_id = self.exchange.stoploss_limit(
                pair=trade.pair, amount=trade.amount, stop_price=stop_price, rate=limit_price
            )['id']
            trade.stoploss_order_id = str(stoploss_order_id)
            trade.stoploss_last_update = datetime.now()

        # Or the trade open and there is already a stoploss on exchange.
        # so we check if it is hit ...
        elif trade.stoploss_order_id:
            logger.debug('Handling stoploss on exchange %s ...', trade)
            order = self.exchange.get_order(trade.stoploss_order_id, trade.pair)
            if order['status'] == 'closed':
                trade.sell_reason = SellType.STOPLOSS_ON_EXCHANGE.value
                trade.update(order)
                result = True
            elif self.config.get('trailing_stop', False):
                # if trailing stoploss is enabled we check if stoploss value has changed
                # in which case we cancel stoploss order and put another one with new
                # value immediately
                self.handle_trailing_stoploss_on_exchange(trade, order)

        return result

    def handle_trailing_stoploss_on_exchange(self, trade: Trade, order):
        """
        Check to see if stoploss on exchange should be updated
        in case of trailing stoploss on exchange
        :param Trade: Corresponding Trade
        :param order: Current on exchange stoploss order
        :return: None
        """

        if trade.stop_loss > float(order['info']['stopPrice']):
            # we check if the update is neccesary
            update_beat = self.strategy.order_types.get('stoploss_on_exchange_interval', 60)
            if (datetime.utcnow() - trade.stoploss_last_update).total_seconds() > update_beat:
                # cancelling the current stoploss on exchange first
                logger.info('Trailing stoploss: cancelling current stoploss on exchange '
                            'in order to add another one ...')
                if self.exchange.cancel_order(order['id'], trade.pair):
                    # creating the new one
                    stoploss_order_id = self.exchange.stoploss_limit(
                        pair=trade.pair, amount=trade.amount,
                        stop_price=trade.stop_loss, rate=trade.stop_loss * 0.99
                    )['id']
                    trade.stoploss_order_id = str(stoploss_order_id)

    def check_sell(self, trade: Trade, sell_rate: float, buy: bool, sell: bool) -> bool:
        if self.edge:
            stoploss = self.edge.stoploss(trade.pair)
            should_sell = self.strategy.should_sell(
                trade, sell_rate, datetime.utcnow(), buy, sell, force_stoploss=stoploss)
        else:
            should_sell = self.strategy.should_sell(trade, sell_rate, datetime.utcnow(), buy, sell)

        if should_sell.sell_flag:
            self.execute_sell(trade, sell_rate, should_sell.sell_type)
            logger.info('executed sell, reason: %s', should_sell.sell_type)
            return True
        return False

    def check_handle_timedout(self) -> None:
        """
        Check if any orders are timed out and cancel if neccessary
        :param timeoutvalue: Number of minutes until order is considered timed out
        :return: None
        """
        buy_timeout = self.config['unfilledtimeout']['buy']
        sell_timeout = self.config['unfilledtimeout']['sell']
        buy_timeoutthreashold = arrow.utcnow().shift(minutes=-buy_timeout).datetime
        sell_timeoutthreashold = arrow.utcnow().shift(minutes=-sell_timeout).datetime

        for trade in Trade.query.filter(Trade.open_order_id.isnot(None)).all():
            try:
                # FIXME: Somehow the query above returns results
                # where the open_order_id is in fact None.
                # This is probably because the record got
                # updated via /forcesell in a different thread.
                if not trade.open_order_id:
                    continue
                order = self.exchange.get_order(trade.open_order_id, trade.pair)
            except (RequestException, DependencyException):
                logger.info(
                    'Cannot query order for %s due to %s',
                    trade,
                    traceback.format_exc())
                continue
            ordertime = arrow.get(order['datetime']).datetime

            # Check if trade is still actually open
            if float(order['remaining']) == 0.0:
                self.wallets.update()
                continue

            # Handle cancelled on exchange
            if order['status'] == 'canceled':
                if order['side'] == 'buy':
                    self.handle_buy_order_full_cancel(trade, "canceled on Exchange")
                elif order['side'] == 'sell':
                    self.handle_timedout_limit_sell(trade, order)
                    self.wallets.update()
            # Check if order is still actually open
            elif order['status'] == 'open':
                if order['side'] == 'buy' and ordertime < buy_timeoutthreashold:
                    self.handle_timedout_limit_buy(trade, order)
                    self.wallets.update()
                elif order['side'] == 'sell' and ordertime < sell_timeoutthreashold:
                    self.handle_timedout_limit_sell(trade, order)
                    self.wallets.update()

    def handle_buy_order_full_cancel(self, trade: Trade, reason: str) -> None:
        """Close trade in database and send message"""
        Trade.session.delete(trade)
        Trade.session.flush()
        logger.info('Buy order %s for %s.', reason, trade)
        self.rpc.send_msg({
            'type': RPCMessageType.STATUS_NOTIFICATION,
            'status': f'Unfilled buy order for {trade.pair} {reason}'
        })

    def handle_timedout_limit_buy(self, trade: Trade, order: Dict) -> bool:
        """Buy timeout - cancel order
        :return: True if order was fully cancelled
        """
        self.exchange.cancel_order(trade.open_order_id, trade.pair)
        if order['remaining'] == order['amount']:
            # if trade is not partially completed, just delete the trade
            self.handle_buy_order_full_cancel(trade, "cancelled due to timeout")
            return True

        # if trade is partially complete, edit the stake details for the trade
        # and close the order
        trade.amount = order['amount'] - order['remaining']
        trade.stake_amount = trade.amount * trade.open_rate
        trade.open_order_id = None
        logger.info('Partial buy order timeout for %s.', trade)
        self.rpc.send_msg({
            'type': RPCMessageType.STATUS_NOTIFICATION,
            'status': f'Remaining buy order for {trade.pair} cancelled due to timeout'
        })
        return False

    def handle_timedout_limit_sell(self, trade: Trade, order: Dict) -> bool:
        """
        Sell timeout - cancel order and update trade
        :return: True if order was fully cancelled
        """
        if order['remaining'] == order['amount']:
            # if trade is not partially completed, just cancel the trade
            if order["status"] != "canceled":
                reason = "due to timeout"
                self.exchange.cancel_order(trade.open_order_id, trade.pair)
                logger.info('Sell order timeout for %s.', trade)
            else:
                reason = "on exchange"
                logger.info('Sell order canceled on exchange for %s.', trade)
            trade.close_rate = None
            trade.close_profit = None
            trade.close_date = None
            trade.is_open = True
            trade.open_order_id = None
            self.rpc.send_msg({
                'type': RPCMessageType.STATUS_NOTIFICATION,
                'status': f'Unfilled sell order for {trade.pair} cancelled {reason}'
            })

            return True

        # TODO: figure out how to handle partially complete sell orders
        return False

    def execute_sell(self, trade: Trade, limit: float, sell_reason: SellType) -> None:
        """
        Executes a limit sell for the given trade and limit
        :param trade: Trade instance
        :param limit: limit rate for the sell order
        :param sellreason: Reason the sell was triggered
        :return: None
        """
        sell_type = 'sell'
        if sell_reason in (SellType.STOP_LOSS, SellType.TRAILING_STOP_LOSS):
            sell_type = 'stoploss'

        # if stoploss is on exchange and we are on dry_run mode,
        # we consider the sell price stop price
        if self.config.get('dry_run', False) and sell_type == 'stoploss' \
           and self.strategy.order_types['stoploss_on_exchange']:
            limit = trade.stop_loss

        # First cancelling stoploss on exchange ...
        if self.strategy.order_types.get('stoploss_on_exchange') and trade.stoploss_order_id:
            self.exchange.cancel_order(trade.stoploss_order_id, trade.pair)

        # Execute sell and update trade record
        order_id = self.exchange.sell(pair=str(trade.pair),
                                      ordertype=self.strategy.order_types[sell_type],
                                      amount=trade.amount, rate=limit,
                                      time_in_force=self.strategy.order_time_in_force['sell']
                                      )['id']

        trade.open_order_id = order_id
        trade.close_rate_requested = limit
        trade.sell_reason = sell_reason.value

        profit_trade = trade.calc_profit(rate=limit)
        current_rate = self.exchange.get_ticker(trade.pair)['bid']
        profit_percent = trade.calc_profit_percent(limit)
        pair_url = self.exchange.get_pair_detail_url(trade.pair)
        gain = "profit" if profit_percent > 0 else "loss"
        total_amount = stake_amount + (stake_amount * profit_percent)

        msg = {
            'type': RPCMessageType.SELL_NOTIFICATION,
            'exchange': trade.exchange.capitalize(),
            'pair': trade.pair,
            'gain': gain,
            'market_url': pair_url,
            'limit': limit,
            'amount': trade.amount,
            'open_rate': trade.open_rate,
            'current_rate': current_rate,
            'profit_amount': profit_trade,
            'total_amount': total_amount,
            'profit_percent': profit_percent,
            'sell_reason': sell_reason.value
        }

        # For regular case, when the configuration exists
        if 'stake_currency' in self.config and 'fiat_display_currency' in self.config:
            stake_currency = self.config['stake_currency']
            fiat_currency = self.config['fiat_display_currency']
            msg.update({
                'stake_currency': stake_currency,
                'fiat_currency': fiat_currency,
            })

        # Send the message
        self.rpc.send_msg(msg)
        Trade.session.flush()

===========================
import pandas as pd
import numpy as np
import csv
import pdb
import talib
import json
pd.set_option("display.precision", 8)
#pd.options.display.max_rows = 999
#pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 1000)

def main():
    ticker_interval = "5m"
    stake_amount = 10
    pair = "DLT/BTC"
    dataframe = load_data(ticker_interval)
    buy_mode = True
    trades  = pd.DataFrame(columns=['pair','date', 'buy_price', 'buy_amount', 'sell_price', 'open', 'profit', 'total'])
    for index, row in dataframe.iterrows():
        data_slice = dataframe.iloc[0:index+1,:]
        renko_df = calculate_renko(data_slice, ticker_interval, pair)
        last_renko_buy = renko_df.iloc[-1, renko_df.columns.get_loc('buy')]
        last_renko_sell = renko_df.iloc[-1, renko_df.columns.get_loc('sell')]
        if last_renko_buy == 1 and buy_mode == True:
            print("==================================")
            print("BUY " + str(row['date']) + " " + str(row['close']))
            buy_amount = stake_amount
            if len(trades) > 0:
                recent_date = trades.loc[(trades['open'] == False)]['date'].max()
                buy_amount = trades.loc[(trades['date'] == recent_date) & (trades['open'] == False), ['total']].values[0][0]
            trades = trades.append([{'pair': pair, 'date':row['date'], 'buy_price':row['close'], 'buy_amount': buy_amount, 'open':True}])
            buy_mode = False
        if last_renko_sell == 1 and buy_mode == False:
            print("SELL " + str(row['date']) + " " + str(row['close']))
            trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['sell_price']] = row['close']
            buy_price = trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['sell_price']].values[0][0]
            sell_price = trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['buy_price']].values[0][0]
            buy_amount = trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['buy_amount']].values[0][0]
            profit = calculateprofit(buy_price, sell_price)
            total = buy_amount + (buy_amount * profit / 100)
            trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['profit']] = profit
            trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['total']] = total
            trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['open']] = False
            print("PROFIT: " + str(profit))
            print("TOTAL: " + str(total))
            buy_mode = True

def calculate_renko(dataframe, interval, pair):
    atr_list = pd.read_csv('atrvalues.csv')
    brick_size = atr_list[(atr_list['pair'] == pair) & (atr_list['period'] == interval)].value.values[0]
    columns = ['date', 'open', 'high', 'low', 'close', 'volume']
    df = dataframe[columns]
    cdf = pd.DataFrame(
        columns=columns,
        data=[],
    )
    cdf.loc[0] = df.loc[0]
    close = df.loc[0]['close']
    volume = df.loc[0]['volume']
    cdf.loc[0, 1:] = [close - brick_size, close, close - brick_size, close, volume]
    cdf['trend'] = True
    columns = ['date', 'open', 'high', 'low', 'close', 'volume', 'trend']
    for index, row in df.iterrows():
        close = row['close']
        date = row['date']
        volume = row['volume']
        row_p1 = cdf.iloc[-1]
        trend = row_p1['trend']
        close_p1 = row_p1['close']
        bricks = int((close - close_p1) / brick_size)
        data = []
        if trend and bricks >= 1:
            for i in range(bricks):
                r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, trend]
                data.append(r)
                close_p1 += brick_size
        elif trend and bricks <= -2:
            trend = not trend
            bricks += 1
            close_p1 -= brick_size
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume,trend]
                data.append(r)
                close_p1 -= brick_size
        elif not trend and bricks <= -1:
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1, close_p1 - brick_size, close_p1 - brick_size, volume, trend]
                data.append(r)
                close_p1 -= brick_size
        elif not trend and bricks >= 2:
            trend = not trend
            bricks -= 1
            close_p1 += brick_size
            for i in range(abs(bricks)):
                r = [date, close_p1, close_p1 + brick_size, close_p1, close_p1 + brick_size, volume, trend]
                data.append(r)
                close_p1 += brick_size
        else:
            continue

        sdf = pd.DataFrame(data=data, columns=columns)
        cdf = pd.concat([cdf, sdf])

    renko_df = cdf.reset_index()
    renko_df['previous-trend'] = renko_df.trend.shift(1)
    renko_df['buy'] = 0
    renko_df['sell'] = 0
    buy_mode = True
    for index, row in renko_df.iterrows():
        if row['previous-trend'] == False and row['trend'] == True and buy_mode == True:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'buy'] = 1
            buy_mode = False

        if row['previous-trend'] == True and row['trend'] == False and buy_mode == False:
            last_row = renko_df.loc[renko_df['date'] == row['date']][-1:]
            renko_df.loc[renko_df.index== last_row.index.values[0], 'sell'] = 1
            buy_mode = True
    return renko_df


def load_data(ticker_interval):
    data_df = pd.read_json('/Users/apple/Desktop/dev/projectlife/data/binance/DLT_BTC-5m.json')
    data_df.columns = ['date', 'open', 'high', 'low', 'close', 'volume']
    data_df.date= pd.to_datetime(data_df['date'], unit='ms')
    #data_df.date = data_df.date.dt.tz_localize('UTC').dt.tz_convert('Europe/Istanbul')
    return data_df

def calculateprofit(buy_price, sell_price):
    diff = 0

    if buy_price > sell_price:
      diff =  sell_price - buy_price
    elif buy_price < sell_price:
      diff =  buy_price - sell_price

    profit = (diff/ buy_price) * 100
    return profit

if __name__ == "__main__":
    main()

=========================
def main():
    ticker_slow = "15m"
    ticker_fast = "1m"
    stake_amount = 10
    pair = "DLT/BTC"
    df_fast = load_data(ticker_fast)
    df_slow = pd.DataFrame()
    for index, row in df_fast.iterrows():
        date_minutes =  int(row['date'].strftime('%s')) / 60
        if date_minutes % 15 == 0:
            df_slow = df_slow.append(row)
    df_slow.reset_index()
    atr_list = pd.read_csv('atrvalues.csv')
    brick_size = atr_list[(atr_list['pair'] == pair) & (atr_list['period'] == ticker_slow)].value.values[0]
    df_slow['bricksize'] = ta.ATR(df_slow)
    renko_slow = pd.DataFrame()
    trades  = pd.DataFrame(columns=['pair','buy_date', 'buy_price', 'buy_amount', 'sell_date', 'sell_price', 'open', 'profit', 'total'])
    renko_slow = calculate_renko(pair, df_slow, df_fast, ticker_slow, brick_size)
    buy_mode = True
    for index, row in renko_slow.iterrows():
        ds_fast = df_fast[(df_fast['date'] > row.date)]
        existing_buy_trade =  (trades['buy_date'] == row['date']).any()
        existing_sell_trade =  (trades['sell_date'] == row['date']).any()
        if (row['trend'] == False) and (buy_mode == True) and existing_buy_trade == False:
            last_row = renko_slow.loc[renko_slow['date'] == row['date']][0:1] #[-1:]
            up_price = (last_row['close']  + (brick_size * 2)).values[0]
            down_price = (last_row['close']  - (brick_size)).values[0]
            for i, ds_row in ds_fast.iterrows():
                if ds_row['close'] < down_price:
                    break
                if ds_row['close'] > up_price  and ds_row['close'] > ds_row['open']:
                    df_fast.loc[df_fast['date'] == ds_row['date'], 'buy'] = 1
                    renko_slow.loc[renko_slow.index== last_row.index.values[0], 'buy'] = 1
                    buy_amount = stake_amount
                    if len(trades) > 0:
                        recent_date = trades.loc[(trades['open'] == False)]['sell_date'].max()
                        buy_amount = trades.loc[(trades['sell_date'] == recent_date) & (trades['open'] == False), ['total']].values[0][0]
                    trades = trades.append([{'pair': pair, 'buy_date':ds_row['date'], 'buy_price':ds_row['close'], 'buy_amount': buy_amount, 'open':True}])
                    print("BUY " + str(ds_row['date']) + " " + str(ds_row['close']))
                    buy_mode = False
                    break
        if (row['trend'] == True) and (buy_mode == False):
            last_row = renko_slow.loc[renko_slow['date'] == row['date']][0:1] #[-1:] #[0:1]
            up_price = (last_row['close']  + (brick_size)).values[0]
            down_price = (last_row['close']  - (brick_size * 2)).values[0]
            for i, ds_row in ds_fast.iterrows():
                if ds_row['close'] > up_price:
                    break
                if ds_row['close'] < down_price and ds_row['close'] < ds_row['open']:
                    df_fast.loc[df_fast['date'] == ds_row['date'], 'sell'] = 1
                    renko_slow.loc[renko_slow.index == last_row.index.values[0], 'sell'] = 1
                    trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['sell_price']] = ds_row['close']
                    trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['sell_date']] = ds_row['date']
                    buy_price = trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['buy_price']].values[0][0]
                    sell_price = ds_row['close']
                    buy_amount = trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['buy_amount']].values[0][0]
                    profit = 0
                    total = buy_amount
                    profit_type = "-"
                    if sell_price > buy_price:
                        profit_type = "+"
                        increase = sell_price - buy_price
                        profit = (increase /  buy_price) * 100
                        total = total + ((total * profit) / 100)
                    if sell_price < buy_price:
                        decrease = buy_price - sell_price
                        profit = (decrease / buy_price) * 100
                        total = total - ((total * profit) / 100)
                    fees = total * 0.0025

                    trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['profit']] = profit
                    trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['total']] = total - fees
                    trades.loc[(trades['pair'] == pair) & (trades['open'] == True), ['open']] = False
                    print("SELL " + str(ds_row['date']) + " " + str(ds_row['close']))
                    print("PROFIT: " + profit_type + str(profit))
                    print("TOTAL: " + str(total))
                    print("==================================")
                    buy_mode = True
                    break

    plot_data(pair, renko_slow,df_fast,ticker_slow)
    #plot-DLT_BTC-15incele.html
